
USB_Device.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001398  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000ec  08001548  08001548  00011548  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001634  08001634  00020068  2**0
                  CONTENTS
  4 .ARM          00000000  08001634  08001634  00020068  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001634  08001634  00020068  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001634  08001634  00011634  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001638  08001638  00011638  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000068  20000000  0800163c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000002c  20000068  080016a4  00020068  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000094  080016a4  00020094  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020068  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001a4f  00000000  00000000  00020098  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000005fd  00000000  00000000  00021ae7  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000120  00000000  00000000  000220e8  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000000c8  00000000  00000000  00022208  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  0001b4b3  00000000  00000000  000222d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00001b85  00000000  00000000  0003d783  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    0009760f  00000000  00000000  0003f308  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  000d6917  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b28  00000000  00000000  000d6994  2**2
                  CONTENTS, READONLY, DEBUGGING
 21 .stab         00000084  00000000  00000000  000d74bc  2**2
                  CONTENTS, READONLY, DEBUGGING
 22 .stabstr      00000117  00000000  00000000  000d7540  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000068 	.word	0x20000068
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08001530 	.word	0x08001530

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000006c 	.word	0x2000006c
 80001ec:	08001530 	.word	0x08001530

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <ITM_SendChar>:
           \li Is blocking when a debugger is connected, but the previous character sent has not been transmitted.
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
 8000290:	b480      	push	{r7}
 8000292:	b083      	sub	sp, #12
 8000294:	af00      	add	r7, sp, #0
 8000296:	6078      	str	r0, [r7, #4]
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8000298:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 800029c:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	; 0xe80
 80002a0:	f003 0301 	and.w	r3, r3, #1
 80002a4:	2b00      	cmp	r3, #0
 80002a6:	d013      	beq.n	80002d0 <ITM_SendChar+0x40>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 80002a8:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002ac:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	; 0xe00
 80002b0:	f003 0301 	and.w	r3, r3, #1
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 80002b4:	2b00      	cmp	r3, #0
 80002b6:	d00b      	beq.n	80002d0 <ITM_SendChar+0x40>
  {
    while (ITM->PORT[0U].u32 == 0UL)
 80002b8:	e000      	b.n	80002bc <ITM_SendChar+0x2c>
    {
      __NOP();
 80002ba:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 80002bc:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002c0:	681b      	ldr	r3, [r3, #0]
 80002c2:	2b00      	cmp	r3, #0
 80002c4:	d0f9      	beq.n	80002ba <ITM_SendChar+0x2a>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 80002c6:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002ca:	687a      	ldr	r2, [r7, #4]
 80002cc:	b2d2      	uxtb	r2, r2
 80002ce:	701a      	strb	r2, [r3, #0]
  }
  return (ch);
 80002d0:	687b      	ldr	r3, [r7, #4]
}
 80002d2:	4618      	mov	r0, r3
 80002d4:	370c      	adds	r7, #12
 80002d6:	46bd      	mov	sp, r7
 80002d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002dc:	4770      	bx	lr

080002de <_write>:

/** \brief Redirects `printf()` output to the serial wire out (SWO).
 * This function overrides a weak function symbol and is not to be used directly.
 */
int _write(int file, char *ptr, int len)
{
 80002de:	b580      	push	{r7, lr}
 80002e0:	b086      	sub	sp, #24
 80002e2:	af00      	add	r7, sp, #0
 80002e4:	60f8      	str	r0, [r7, #12]
 80002e6:	60b9      	str	r1, [r7, #8]
 80002e8:	607a      	str	r2, [r7, #4]
  int i=0;
 80002ea:	2300      	movs	r3, #0
 80002ec:	617b      	str	r3, [r7, #20]
  for(i=0 ; i<len ; i++)
 80002ee:	2300      	movs	r3, #0
 80002f0:	617b      	str	r3, [r7, #20]
 80002f2:	e009      	b.n	8000308 <_write+0x2a>
    ITM_SendChar((*ptr++));
 80002f4:	68bb      	ldr	r3, [r7, #8]
 80002f6:	1c5a      	adds	r2, r3, #1
 80002f8:	60ba      	str	r2, [r7, #8]
 80002fa:	781b      	ldrb	r3, [r3, #0]
 80002fc:	4618      	mov	r0, r3
 80002fe:	f7ff ffc7 	bl	8000290 <ITM_SendChar>
  for(i=0 ; i<len ; i++)
 8000302:	697b      	ldr	r3, [r7, #20]
 8000304:	3301      	adds	r3, #1
 8000306:	617b      	str	r3, [r7, #20]
 8000308:	697a      	ldr	r2, [r7, #20]
 800030a:	687b      	ldr	r3, [r7, #4]
 800030c:	429a      	cmp	r2, r3
 800030e:	dbf1      	blt.n	80002f4 <_write+0x16>

  return len;
 8000310:	687b      	ldr	r3, [r7, #4]
}
 8000312:	4618      	mov	r0, r3
 8000314:	3718      	adds	r7, #24
 8000316:	46bd      	mov	sp, r7
 8000318:	bd80      	pop	{r7, pc}
	...

0800031c <_get_log_level_string>:

char const * const _get_log_level_string(LogLevel const log_level)
{
 800031c:	b480      	push	{r7}
 800031e:	b083      	sub	sp, #12
 8000320:	af00      	add	r7, sp, #0
 8000322:	4603      	mov	r3, r0
 8000324:	71fb      	strb	r3, [r7, #7]
    switch(log_level)
 8000326:	79fb      	ldrb	r3, [r7, #7]
 8000328:	2b01      	cmp	r3, #1
 800032a:	d005      	beq.n	8000338 <_get_log_level_string+0x1c>
 800032c:	2b02      	cmp	r3, #2
 800032e:	d005      	beq.n	800033c <_get_log_level_string+0x20>
 8000330:	2b00      	cmp	r3, #0
 8000332:	d105      	bne.n	8000340 <_get_log_level_string+0x24>
    {
        case LOG_LEVEL_ERROR:
            return "ERROR";
 8000334:	4b05      	ldr	r3, [pc, #20]	; (800034c <_get_log_level_string+0x30>)
 8000336:	e003      	b.n	8000340 <_get_log_level_string+0x24>
        case LOG_LEVEL_INFORMATION:
            return "INFO";
 8000338:	4b05      	ldr	r3, [pc, #20]	; (8000350 <_get_log_level_string+0x34>)
 800033a:	e001      	b.n	8000340 <_get_log_level_string+0x24>
        case LOG_LEVEL_DEBUG:
            return "DEBUG";
 800033c:	4b05      	ldr	r3, [pc, #20]	; (8000354 <_get_log_level_string+0x38>)
 800033e:	e7ff      	b.n	8000340 <_get_log_level_string+0x24>
    }
}
 8000340:	4618      	mov	r0, r3
 8000342:	370c      	adds	r7, #12
 8000344:	46bd      	mov	sp, r7
 8000346:	f85d 7b04 	ldr.w	r7, [sp], #4
 800034a:	4770      	bx	lr
 800034c:	08001548 	.word	0x08001548
 8000350:	08001550 	.word	0x08001550
 8000354:	08001558 	.word	0x08001558

08000358 <_log>:

static void _log(LogLevel const log_level, char const * const format, va_list args)
{
 8000358:	b580      	push	{r7, lr}
 800035a:	b084      	sub	sp, #16
 800035c:	af00      	add	r7, sp, #0
 800035e:	4603      	mov	r3, r0
 8000360:	60b9      	str	r1, [r7, #8]
 8000362:	607a      	str	r2, [r7, #4]
 8000364:	73fb      	strb	r3, [r7, #15]
    if (log_level > system_log_level)
 8000366:	4b0f      	ldr	r3, [pc, #60]	; (80003a4 <_log+0x4c>)
 8000368:	781b      	ldrb	r3, [r3, #0]
 800036a:	7bfa      	ldrb	r2, [r7, #15]
 800036c:	429a      	cmp	r2, r3
 800036e:	d814      	bhi.n	800039a <_log+0x42>
        return;

	printf("[%s] ", _get_log_level_string(log_level));
 8000370:	7bfb      	ldrb	r3, [r7, #15]
 8000372:	4618      	mov	r0, r3
 8000374:	f7ff ffd2 	bl	800031c <_get_log_level_string>
 8000378:	4603      	mov	r3, r0
 800037a:	4619      	mov	r1, r3
 800037c:	480a      	ldr	r0, [pc, #40]	; (80003a8 <_log+0x50>)
 800037e:	f000 fc3b 	bl	8000bf8 <iprintf>
	vfprintf(stdout, format, args);
 8000382:	4b0a      	ldr	r3, [pc, #40]	; (80003ac <_log+0x54>)
 8000384:	681b      	ldr	r3, [r3, #0]
 8000386:	689b      	ldr	r3, [r3, #8]
 8000388:	687a      	ldr	r2, [r7, #4]
 800038a:	68b9      	ldr	r1, [r7, #8]
 800038c:	4618      	mov	r0, r3
 800038e:	f000 faa1 	bl	80008d4 <vfiprintf>
	printf("\n");
 8000392:	200a      	movs	r0, #10
 8000394:	f000 fc48 	bl	8000c28 <putchar>
 8000398:	e000      	b.n	800039c <_log+0x44>
        return;
 800039a:	bf00      	nop
}
 800039c:	3710      	adds	r7, #16
 800039e:	46bd      	mov	sp, r7
 80003a0:	bd80      	pop	{r7, pc}
 80003a2:	bf00      	nop
 80003a4:	20000000 	.word	0x20000000
 80003a8:	08001560 	.word	0x08001560
 80003ac:	20000004 	.word	0x20000004

080003b0 <log_info>:
    _log(LOG_LEVEL_ERROR, format, args);
    va_end(args);
}

void log_info(char const * const format, ...)
{
 80003b0:	b40f      	push	{r0, r1, r2, r3}
 80003b2:	b580      	push	{r7, lr}
 80003b4:	b082      	sub	sp, #8
 80003b6:	af00      	add	r7, sp, #0
    va_list args;
	va_start(args, format);
 80003b8:	f107 0314 	add.w	r3, r7, #20
 80003bc:	607b      	str	r3, [r7, #4]
    _log(LOG_LEVEL_INFORMATION, format, args);
 80003be:	687a      	ldr	r2, [r7, #4]
 80003c0:	6939      	ldr	r1, [r7, #16]
 80003c2:	2001      	movs	r0, #1
 80003c4:	f7ff ffc8 	bl	8000358 <_log>
    va_end(args);
}
 80003c8:	bf00      	nop
 80003ca:	3708      	adds	r7, #8
 80003cc:	46bd      	mov	sp, r7
 80003ce:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80003d2:	b004      	add	sp, #16
 80003d4:	4770      	bx	lr
	...

080003d8 <main>:
#include "Helpers/logger.h"
#include "usbd_framework.h"

int main(void)
{
 80003d8:	b580      	push	{r7, lr}
 80003da:	af00      	add	r7, sp, #0
	log_info("Program entrypoint.");
 80003dc:	4802      	ldr	r0, [pc, #8]	; (80003e8 <main+0x10>)
 80003de:	f7ff ffe7 	bl	80003b0 <log_info>
	usbd_initialize();
 80003e2:	f000 f8d7 	bl	8000594 <usbd_initialize>

	for(;;);
 80003e6:	e7fe      	b.n	80003e6 <main+0xe>
 80003e8:	08001588 	.word	0x08001588

080003ec <configure_clock>:
// AHB prescaler = 1
// APB prescaler1 = 2,  APB prescaler2 = 1
// MCO1 prescaler = 2

void configure_clock()
{
 80003ec:	b480      	push	{r7}
 80003ee:	af00      	add	r7, sp, #0
	/* Configure Flash Latency */
	MODIFY_REG(FLASH->ACR,		// FLASH_ACR base register
 80003f0:	4b25      	ldr	r3, [pc, #148]	; (8000488 <configure_clock+0x9c>)
 80003f2:	681b      	ldr	r3, [r3, #0]
 80003f4:	f023 030f 	bic.w	r3, r3, #15
 80003f8:	4a23      	ldr	r2, [pc, #140]	; (8000488 <configure_clock+0x9c>)
 80003fa:	f043 0302 	orr.w	r3, r3, #2
 80003fe:	6013      	str	r3, [r2, #0]
			_VAL2FLD(FLASH_ACR_LATENCY, FLASH_ACR_LATENCY_2WS)// Set Value (Write "2WS" value in LATAENCY Position)
			// (method 2) FLASH_ACR_LATENCY_2WS << FLASH_ACR_LATENCY_Pos
			);

	/* Enable HSE */
	SET_BIT(RCC->CR, RCC_CR_HSEON);  // (Register name, Field name)
 8000400:	4b22      	ldr	r3, [pc, #136]	; (800048c <configure_clock+0xa0>)
 8000402:	681b      	ldr	r3, [r3, #0]
 8000404:	4a21      	ldr	r2, [pc, #132]	; (800048c <configure_clock+0xa0>)
 8000406:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800040a:	6013      	str	r3, [r2, #0]

	/* Waits until HSE is stable */
	while( !READ_BIT(RCC->CR, RCC_CR_HSERDY) );
 800040c:	bf00      	nop
 800040e:	4b1f      	ldr	r3, [pc, #124]	; (800048c <configure_clock+0xa0>)
 8000410:	681b      	ldr	r3, [r3, #0]
 8000412:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000416:	2b00      	cmp	r3, #0
 8000418:	d0f9      	beq.n	800040e <configure_clock+0x22>

	/* Configures PLL: source = HSE, PLLCLK = 72MHz. */
	MODIFY_REG(RCC->PLLCFGR,
 800041a:	4b1c      	ldr	r3, [pc, #112]	; (800048c <configure_clock+0xa0>)
 800041c:	685b      	ldr	r3, [r3, #4]
 800041e:	4a1c      	ldr	r2, [pc, #112]	; (8000490 <configure_clock+0xa4>)
 8000420:	401a      	ands	r2, r3
 8000422:	491a      	ldr	r1, [pc, #104]	; (800048c <configure_clock+0xa0>)
 8000424:	4b1b      	ldr	r3, [pc, #108]	; (8000494 <configure_clock+0xa8>)
 8000426:	4313      	orrs	r3, r2
 8000428:	604b      	str	r3, [r1, #4]
		RCC_PLLCFGR_PLLM | RCC_PLLCFGR_PLLN | RCC_PLLCFGR_PLLQ | RCC_PLLCFGR_PLLSRC | RCC_PLLCFGR_PLLP,
		_VAL2FLD(RCC_PLLCFGR_PLLM, 4) | _VAL2FLD(RCC_PLLCFGR_PLLN, 72) | _VAL2FLD(RCC_PLLCFGR_PLLQ, 3) | RCC_PLLCFGR_PLLSRC_HSE
	);

	/* Enables PLL */
	SET_BIT(RCC->CR, RCC_CR_PLLON);
 800042a:	4b18      	ldr	r3, [pc, #96]	; (800048c <configure_clock+0xa0>)
 800042c:	681b      	ldr	r3, [r3, #0]
 800042e:	4a17      	ldr	r2, [pc, #92]	; (800048c <configure_clock+0xa0>)
 8000430:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000434:	6013      	str	r3, [r2, #0]

	/* Waits until PLL is stable */
	while( !READ_BIT(RCC->CR, RCC_CR_PLLRDY) );
 8000436:	bf00      	nop
 8000438:	4b14      	ldr	r3, [pc, #80]	; (800048c <configure_clock+0xa0>)
 800043a:	681b      	ldr	r3, [r3, #0]
 800043c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8000440:	2b00      	cmp	r3, #0
 8000442:	d0f9      	beq.n	8000438 <configure_clock+0x4c>

	/* Switch system clock to PLL */
	MODIFY_REG(RCC->CFGR,
 8000444:	4b11      	ldr	r3, [pc, #68]	; (800048c <configure_clock+0xa0>)
 8000446:	689b      	ldr	r3, [r3, #8]
 8000448:	f023 0303 	bic.w	r3, r3, #3
 800044c:	4a0f      	ldr	r2, [pc, #60]	; (800048c <configure_clock+0xa0>)
 800044e:	f043 0302 	orr.w	r3, r3, #2
 8000452:	6093      	str	r3, [r2, #8]
		RCC_CFGR_SW,
		_VAL2FLD(RCC_CFGR_SW, RCC_CFGR_SW_PLL)
	);

	/* Configures PPRE1 = 2, (PPRE2 = 1, HPRE = 1 by default). */
	MODIFY_REG(RCC->CFGR,
 8000454:	4b0d      	ldr	r3, [pc, #52]	; (800048c <configure_clock+0xa0>)
 8000456:	689b      	ldr	r3, [r3, #8]
 8000458:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 800045c:	4a0b      	ldr	r2, [pc, #44]	; (800048c <configure_clock+0xa0>)
 800045e:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000462:	6093      	str	r3, [r2, #8]
		RCC_CFGR_PPRE1,
		_VAL2FLD(RCC_CFGR_PPRE1, 4)
	);

	/* Waits until PLL is used */
	while(READ_BIT(RCC->CFGR, RCC_CFGR_SWS) != RCC_CFGR_SWS_PLL);
 8000464:	bf00      	nop
 8000466:	4b09      	ldr	r3, [pc, #36]	; (800048c <configure_clock+0xa0>)
 8000468:	689b      	ldr	r3, [r3, #8]
 800046a:	f003 030c 	and.w	r3, r3, #12
 800046e:	2b08      	cmp	r3, #8
 8000470:	d1f9      	bne.n	8000466 <configure_clock+0x7a>

	/* Disables HSI (to save power. don't need anymore)  */
	CLEAR_BIT(RCC->CR, RCC_CR_HSION);
 8000472:	4b06      	ldr	r3, [pc, #24]	; (800048c <configure_clock+0xa0>)
 8000474:	681b      	ldr	r3, [r3, #0]
 8000476:	4a05      	ldr	r2, [pc, #20]	; (800048c <configure_clock+0xa0>)
 8000478:	f023 0301 	bic.w	r3, r3, #1
 800047c:	6013      	str	r3, [r2, #0]
}
 800047e:	bf00      	nop
 8000480:	46bd      	mov	sp, r7
 8000482:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000486:	4770      	bx	lr
 8000488:	40023c00 	.word	0x40023c00
 800048c:	40023800 	.word	0x40023800
 8000490:	f0bc8000 	.word	0xf0bc8000
 8000494:	03401204 	.word	0x03401204

08000498 <SystemInit>:



void SystemInit(void)
{
 8000498:	b580      	push	{r7, lr}
 800049a:	af00      	add	r7, sp, #0
	configure_clock();
 800049c:	f7ff ffa6 	bl	80003ec <configure_clock>
}
 80004a0:	bf00      	nop
 80004a2:	bd80      	pop	{r7, pc}

080004a4 <initialize_gpio_pins>:
#include "usbd_driver.h"


void initialize_gpio_pins()
{
 80004a4:	b480      	push	{r7}
 80004a6:	af00      	add	r7, sp, #0
	/* Enable Clock for GPIOB */
	SET_BIT(RCC->AHB1ENR, RCC_AHB1ENR_GPIOBEN);  // Set GPIOBEN Region
 80004a8:	4b0d      	ldr	r3, [pc, #52]	; (80004e0 <initialize_gpio_pins+0x3c>)
 80004aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004ac:	4a0c      	ldr	r2, [pc, #48]	; (80004e0 <initialize_gpio_pins+0x3c>)
 80004ae:	f043 0302 	orr.w	r3, r3, #2
 80004b2:	6313      	str	r3, [r2, #48]	; 0x30

	/* Select AFR(alternate function register) GPIOB14(OTG D-), GPIOB15(OTG D+) */
	MODIFY_REG(GPIOB->AFR[1],   // AFR[1]:High,  AFR[0]:LOW
 80004b4:	4b0b      	ldr	r3, [pc, #44]	; (80004e4 <initialize_gpio_pins+0x40>)
 80004b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80004b8:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 80004bc:	4a09      	ldr	r2, [pc, #36]	; (80004e4 <initialize_gpio_pins+0x40>)
 80004be:	f043 434c 	orr.w	r3, r3, #3422552064	; 0xcc000000
 80004c2:	6253      	str	r3, [r2, #36]	; 0x24
			GPIO_AFRH_AFSEL14 | GPIO_AFRH_AFSEL15,   // Clear this region (Mask Bits)
			_VAL2FLD(GPIO_AFRH_AFSEL14, 0xC) | _VAL2FLD(GPIO_AFRH_AFSEL15, 0xC)
	);

	/* Set GPIOB in alternate function mode */
	MODIFY_REG(GPIOB->MODER,
 80004c4:	4b07      	ldr	r3, [pc, #28]	; (80004e4 <initialize_gpio_pins+0x40>)
 80004c6:	681b      	ldr	r3, [r3, #0]
 80004c8:	f023 4370 	bic.w	r3, r3, #4026531840	; 0xf0000000
 80004cc:	4a05      	ldr	r2, [pc, #20]	; (80004e4 <initialize_gpio_pins+0x40>)
 80004ce:	f043 4320 	orr.w	r3, r3, #2684354560	; 0xa0000000
 80004d2:	6013      	str	r3, [r2, #0]
			GPIO_MODER_MODE14 | GPIO_MODER_MODE15,   // MODER: Mode Register
			_VAL2FLD(GPIO_MODER_MODE14,2) | _VAL2FLD(GPIO_MODER_MODE15,2)  // 2:Use Pin alternate function mode,  1:Output mode, 0:Input mode
	);
}
 80004d4:	bf00      	nop
 80004d6:	46bd      	mov	sp, r7
 80004d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004dc:	4770      	bx	lr
 80004de:	bf00      	nop
 80004e0:	40023800 	.word	0x40023800
 80004e4:	40020400 	.word	0x40020400

080004e8 <initialize_core>:


void initialize_core()
{
 80004e8:	b480      	push	{r7}
 80004ea:	af00      	add	r7, sp, #0
	/* Enable Clock for USB core */
	SET_BIT(RCC->AHB1ENR, RCC_AHB1ENR_OTGHSEN);  // Set OTGHSEN Region
 80004ec:	4b19      	ldr	r3, [pc, #100]	; (8000554 <initialize_core+0x6c>)
 80004ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004f0:	4a18      	ldr	r2, [pc, #96]	; (8000554 <initialize_core+0x6c>)
 80004f2:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 80004f6:	6313      	str	r3, [r2, #48]	; 0x30

	/* Set USB core to device mode, full-speed PHY */
	MODIFY_REG(USB_OTG_HS->GUSBCFG,
 80004f8:	4b17      	ldr	r3, [pc, #92]	; (8000558 <initialize_core+0x70>)
 80004fa:	68db      	ldr	r3, [r3, #12]
 80004fc:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 8000500:	f423 5371 	bic.w	r3, r3, #15424	; 0x3c40
 8000504:	4a14      	ldr	r2, [pc, #80]	; (8000558 <initialize_core+0x70>)
 8000506:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800050a:	f443 5311 	orr.w	r3, r3, #9280	; 0x2440
 800050e:	60d3      	str	r3, [r2, #12]
			USB_OTG_GUSBCFG_FDMOD | USB_OTG_GUSBCFG_PHYSEL | USB_OTG_GUSBCFG_TRDT,
			USB_OTG_GUSBCFG_FDMOD | USB_OTG_GUSBCFG_PHYSEL | _VAL2FLD(USB_OTG_GUSBCFG_TRDT, 0x09)
	);

	/* device initialize section (Configure device speed) */
	MODIFY_REG(USB_OTG_HS_DEVICE->DCFG,
 8000510:	4b12      	ldr	r3, [pc, #72]	; (800055c <initialize_core+0x74>)
 8000512:	681b      	ldr	r3, [r3, #0]
 8000514:	4a11      	ldr	r2, [pc, #68]	; (800055c <initialize_core+0x74>)
 8000516:	f043 0303 	orr.w	r3, r3, #3
 800051a:	6013      	str	r3, [r2, #0]
			USB_OTG_DCFG_DSPD,
			_VAL2FLD(USB_OTG_DCFG_DSPD, 0x03)
	);

	/* Enable VBUS sensing device */
	SET_BIT(USB_OTG_HS->GCCFG, USB_OTG_GCCFG_VBUSBSEN);
 800051c:	4b0e      	ldr	r3, [pc, #56]	; (8000558 <initialize_core+0x70>)
 800051e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8000520:	4a0d      	ldr	r2, [pc, #52]	; (8000558 <initialize_core+0x70>)
 8000522:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8000526:	6393      	str	r3, [r2, #56]	; 0x38

	/* Unmask USB core interrupt bits */
	SET_BIT(USB_OTG_HS->GINTMSK,
 8000528:	4b0b      	ldr	r3, [pc, #44]	; (8000558 <initialize_core+0x70>)
 800052a:	699a      	ldr	r2, [r3, #24]
 800052c:	490a      	ldr	r1, [pc, #40]	; (8000558 <initialize_core+0x70>)
 800052e:	4b0c      	ldr	r3, [pc, #48]	; (8000560 <initialize_core+0x78>)
 8000530:	4313      	orrs	r3, r2
 8000532:	618b      	str	r3, [r1, #24]
		USB_OTG_GINTMSK_USBSUSPM | USB_OTG_GINTMSK_WUIM | USB_OTG_GINTMSK_IEPINT |
		USB_OTG_GINTSTS_OEPINT | USB_OTG_GINTMSK_RXFLVLM
	);

	/* Clear all pending registers */
	WRITE_REG(USB_OTG_HS->GINTSTS, 0xFFFFFFFF);
 8000534:	4b08      	ldr	r3, [pc, #32]	; (8000558 <initialize_core+0x70>)
 8000536:	f04f 32ff 	mov.w	r2, #4294967295
 800053a:	615a      	str	r2, [r3, #20]

	/* Unmasks "USB global interrupt" which will activate all unmasked interrupts */
	SET_BIT(USB_OTG_HS->GAHBCFG, USB_OTG_GAHBCFG_GINT);
 800053c:	4b06      	ldr	r3, [pc, #24]	; (8000558 <initialize_core+0x70>)
 800053e:	689b      	ldr	r3, [r3, #8]
 8000540:	4a05      	ldr	r2, [pc, #20]	; (8000558 <initialize_core+0x70>)
 8000542:	f043 0301 	orr.w	r3, r3, #1
 8000546:	6093      	str	r3, [r2, #8]
}
 8000548:	bf00      	nop
 800054a:	46bd      	mov	sp, r7
 800054c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000550:	4770      	bx	lr
 8000552:	bf00      	nop
 8000554:	40023800 	.word	0x40023800
 8000558:	40040000 	.word	0x40040000
 800055c:	40040800 	.word	0x40040800
 8000560:	800c3818 	.word	0x800c3818

08000564 <connect>:

void connect()
{
 8000564:	b480      	push	{r7}
 8000566:	af00      	add	r7, sp, #0
	/* 1:Power down deactivated (PHY Full-speed mode) */
	SET_BIT(USB_OTG_HS->GCCFG, USB_OTG_GCCFG_PWRDWN);
 8000568:	4b08      	ldr	r3, [pc, #32]	; (800058c <connect+0x28>)
 800056a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800056c:	4a07      	ldr	r2, [pc, #28]	; (800058c <connect+0x28>)
 800056e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8000572:	6393      	str	r3, [r2, #56]	; 0x38

	/* Connect the device to the bus */
	CLEAR_BIT(USB_OTG_HS_DEVICE->DCTL, USB_OTG_DCTL_SDIS);
 8000574:	4b06      	ldr	r3, [pc, #24]	; (8000590 <connect+0x2c>)
 8000576:	685b      	ldr	r3, [r3, #4]
 8000578:	4a05      	ldr	r2, [pc, #20]	; (8000590 <connect+0x2c>)
 800057a:	f023 0302 	bic.w	r3, r3, #2
 800057e:	6053      	str	r3, [r2, #4]
}
 8000580:	bf00      	nop
 8000582:	46bd      	mov	sp, r7
 8000584:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000588:	4770      	bx	lr
 800058a:	bf00      	nop
 800058c:	40040000 	.word	0x40040000
 8000590:	40040800 	.word	0x40040800

08000594 <usbd_initialize>:
#include "usbd_framework.h"


void usbd_initialize()
{
 8000594:	b580      	push	{r7, lr}
 8000596:	af00      	add	r7, sp, #0
	initialize_gpio_pins();
 8000598:	f7ff ff84 	bl	80004a4 <initialize_gpio_pins>
	initialize_core();
 800059c:	f7ff ffa4 	bl	80004e8 <initialize_core>
	connect();
 80005a0:	f7ff ffe0 	bl	8000564 <connect>
}
 80005a4:	bf00      	nop
 80005a6:	bd80      	pop	{r7, pc}

080005a8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80005a8:	480d      	ldr	r0, [pc, #52]	; (80005e0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80005aa:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80005ac:	480d      	ldr	r0, [pc, #52]	; (80005e4 <LoopForever+0x6>)
  ldr r1, =_edata
 80005ae:	490e      	ldr	r1, [pc, #56]	; (80005e8 <LoopForever+0xa>)
  ldr r2, =_sidata
 80005b0:	4a0e      	ldr	r2, [pc, #56]	; (80005ec <LoopForever+0xe>)
  movs r3, #0
 80005b2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80005b4:	e002      	b.n	80005bc <LoopCopyDataInit>

080005b6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80005b6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80005b8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80005ba:	3304      	adds	r3, #4

080005bc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80005bc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80005be:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80005c0:	d3f9      	bcc.n	80005b6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80005c2:	4a0b      	ldr	r2, [pc, #44]	; (80005f0 <LoopForever+0x12>)
  ldr r4, =_ebss
 80005c4:	4c0b      	ldr	r4, [pc, #44]	; (80005f4 <LoopForever+0x16>)
  movs r3, #0
 80005c6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80005c8:	e001      	b.n	80005ce <LoopFillZerobss>

080005ca <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80005ca:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80005cc:	3204      	adds	r2, #4

080005ce <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80005ce:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80005d0:	d3fb      	bcc.n	80005ca <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 80005d2:	f7ff ff61 	bl	8000498 <SystemInit>
/* Call static constructors */
  bl __libc_init_array
 80005d6:	f000 f811 	bl	80005fc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80005da:	f7ff fefd 	bl	80003d8 <main>

080005de <LoopForever>:

LoopForever:
    b LoopForever
 80005de:	e7fe      	b.n	80005de <LoopForever>
  ldr   r0, =_estack
 80005e0:	20030000 	.word	0x20030000
  ldr r0, =_sdata
 80005e4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80005e8:	20000068 	.word	0x20000068
  ldr r2, =_sidata
 80005ec:	0800163c 	.word	0x0800163c
  ldr r2, =_sbss
 80005f0:	20000068 	.word	0x20000068
  ldr r4, =_ebss
 80005f4:	20000094 	.word	0x20000094

080005f8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80005f8:	e7fe      	b.n	80005f8 <ADC_IRQHandler>
	...

080005fc <__libc_init_array>:
 80005fc:	b570      	push	{r4, r5, r6, lr}
 80005fe:	4e0d      	ldr	r6, [pc, #52]	; (8000634 <__libc_init_array+0x38>)
 8000600:	4c0d      	ldr	r4, [pc, #52]	; (8000638 <__libc_init_array+0x3c>)
 8000602:	1ba4      	subs	r4, r4, r6
 8000604:	10a4      	asrs	r4, r4, #2
 8000606:	2500      	movs	r5, #0
 8000608:	42a5      	cmp	r5, r4
 800060a:	d109      	bne.n	8000620 <__libc_init_array+0x24>
 800060c:	4e0b      	ldr	r6, [pc, #44]	; (800063c <__libc_init_array+0x40>)
 800060e:	4c0c      	ldr	r4, [pc, #48]	; (8000640 <__libc_init_array+0x44>)
 8000610:	f000 ff8e 	bl	8001530 <_init>
 8000614:	1ba4      	subs	r4, r4, r6
 8000616:	10a4      	asrs	r4, r4, #2
 8000618:	2500      	movs	r5, #0
 800061a:	42a5      	cmp	r5, r4
 800061c:	d105      	bne.n	800062a <__libc_init_array+0x2e>
 800061e:	bd70      	pop	{r4, r5, r6, pc}
 8000620:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000624:	4798      	blx	r3
 8000626:	3501      	adds	r5, #1
 8000628:	e7ee      	b.n	8000608 <__libc_init_array+0xc>
 800062a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800062e:	4798      	blx	r3
 8000630:	3501      	adds	r5, #1
 8000632:	e7f2      	b.n	800061a <__libc_init_array+0x1e>
 8000634:	08001634 	.word	0x08001634
 8000638:	08001634 	.word	0x08001634
 800063c:	08001634 	.word	0x08001634
 8000640:	08001638 	.word	0x08001638

08000644 <memset>:
 8000644:	4402      	add	r2, r0
 8000646:	4603      	mov	r3, r0
 8000648:	4293      	cmp	r3, r2
 800064a:	d100      	bne.n	800064e <memset+0xa>
 800064c:	4770      	bx	lr
 800064e:	f803 1b01 	strb.w	r1, [r3], #1
 8000652:	e7f9      	b.n	8000648 <memset+0x4>

08000654 <__sfputc_r>:
 8000654:	6893      	ldr	r3, [r2, #8]
 8000656:	3b01      	subs	r3, #1
 8000658:	2b00      	cmp	r3, #0
 800065a:	b410      	push	{r4}
 800065c:	6093      	str	r3, [r2, #8]
 800065e:	da08      	bge.n	8000672 <__sfputc_r+0x1e>
 8000660:	6994      	ldr	r4, [r2, #24]
 8000662:	42a3      	cmp	r3, r4
 8000664:	db01      	blt.n	800066a <__sfputc_r+0x16>
 8000666:	290a      	cmp	r1, #10
 8000668:	d103      	bne.n	8000672 <__sfputc_r+0x1e>
 800066a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800066e:	f000 baef 	b.w	8000c50 <__swbuf_r>
 8000672:	6813      	ldr	r3, [r2, #0]
 8000674:	1c58      	adds	r0, r3, #1
 8000676:	6010      	str	r0, [r2, #0]
 8000678:	7019      	strb	r1, [r3, #0]
 800067a:	4608      	mov	r0, r1
 800067c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000680:	4770      	bx	lr

08000682 <__sfputs_r>:
 8000682:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000684:	4606      	mov	r6, r0
 8000686:	460f      	mov	r7, r1
 8000688:	4614      	mov	r4, r2
 800068a:	18d5      	adds	r5, r2, r3
 800068c:	42ac      	cmp	r4, r5
 800068e:	d101      	bne.n	8000694 <__sfputs_r+0x12>
 8000690:	2000      	movs	r0, #0
 8000692:	e007      	b.n	80006a4 <__sfputs_r+0x22>
 8000694:	463a      	mov	r2, r7
 8000696:	f814 1b01 	ldrb.w	r1, [r4], #1
 800069a:	4630      	mov	r0, r6
 800069c:	f7ff ffda 	bl	8000654 <__sfputc_r>
 80006a0:	1c43      	adds	r3, r0, #1
 80006a2:	d1f3      	bne.n	800068c <__sfputs_r+0xa>
 80006a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080006a8 <_vfiprintf_r>:
 80006a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80006ac:	460c      	mov	r4, r1
 80006ae:	b09d      	sub	sp, #116	; 0x74
 80006b0:	4617      	mov	r7, r2
 80006b2:	461d      	mov	r5, r3
 80006b4:	4606      	mov	r6, r0
 80006b6:	b118      	cbz	r0, 80006c0 <_vfiprintf_r+0x18>
 80006b8:	6983      	ldr	r3, [r0, #24]
 80006ba:	b90b      	cbnz	r3, 80006c0 <_vfiprintf_r+0x18>
 80006bc:	f000 fc78 	bl	8000fb0 <__sinit>
 80006c0:	4b7c      	ldr	r3, [pc, #496]	; (80008b4 <_vfiprintf_r+0x20c>)
 80006c2:	429c      	cmp	r4, r3
 80006c4:	d158      	bne.n	8000778 <_vfiprintf_r+0xd0>
 80006c6:	6874      	ldr	r4, [r6, #4]
 80006c8:	89a3      	ldrh	r3, [r4, #12]
 80006ca:	0718      	lsls	r0, r3, #28
 80006cc:	d55e      	bpl.n	800078c <_vfiprintf_r+0xe4>
 80006ce:	6923      	ldr	r3, [r4, #16]
 80006d0:	2b00      	cmp	r3, #0
 80006d2:	d05b      	beq.n	800078c <_vfiprintf_r+0xe4>
 80006d4:	2300      	movs	r3, #0
 80006d6:	9309      	str	r3, [sp, #36]	; 0x24
 80006d8:	2320      	movs	r3, #32
 80006da:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80006de:	2330      	movs	r3, #48	; 0x30
 80006e0:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80006e4:	9503      	str	r5, [sp, #12]
 80006e6:	f04f 0b01 	mov.w	fp, #1
 80006ea:	46b8      	mov	r8, r7
 80006ec:	4645      	mov	r5, r8
 80006ee:	f815 3b01 	ldrb.w	r3, [r5], #1
 80006f2:	b10b      	cbz	r3, 80006f8 <_vfiprintf_r+0x50>
 80006f4:	2b25      	cmp	r3, #37	; 0x25
 80006f6:	d154      	bne.n	80007a2 <_vfiprintf_r+0xfa>
 80006f8:	ebb8 0a07 	subs.w	sl, r8, r7
 80006fc:	d00b      	beq.n	8000716 <_vfiprintf_r+0x6e>
 80006fe:	4653      	mov	r3, sl
 8000700:	463a      	mov	r2, r7
 8000702:	4621      	mov	r1, r4
 8000704:	4630      	mov	r0, r6
 8000706:	f7ff ffbc 	bl	8000682 <__sfputs_r>
 800070a:	3001      	adds	r0, #1
 800070c:	f000 80c2 	beq.w	8000894 <_vfiprintf_r+0x1ec>
 8000710:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000712:	4453      	add	r3, sl
 8000714:	9309      	str	r3, [sp, #36]	; 0x24
 8000716:	f898 3000 	ldrb.w	r3, [r8]
 800071a:	2b00      	cmp	r3, #0
 800071c:	f000 80ba 	beq.w	8000894 <_vfiprintf_r+0x1ec>
 8000720:	2300      	movs	r3, #0
 8000722:	f04f 32ff 	mov.w	r2, #4294967295
 8000726:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800072a:	9304      	str	r3, [sp, #16]
 800072c:	9307      	str	r3, [sp, #28]
 800072e:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000732:	931a      	str	r3, [sp, #104]	; 0x68
 8000734:	46a8      	mov	r8, r5
 8000736:	2205      	movs	r2, #5
 8000738:	f818 1b01 	ldrb.w	r1, [r8], #1
 800073c:	485e      	ldr	r0, [pc, #376]	; (80008b8 <_vfiprintf_r+0x210>)
 800073e:	f7ff fd57 	bl	80001f0 <memchr>
 8000742:	9b04      	ldr	r3, [sp, #16]
 8000744:	bb78      	cbnz	r0, 80007a6 <_vfiprintf_r+0xfe>
 8000746:	06d9      	lsls	r1, r3, #27
 8000748:	bf44      	itt	mi
 800074a:	2220      	movmi	r2, #32
 800074c:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000750:	071a      	lsls	r2, r3, #28
 8000752:	bf44      	itt	mi
 8000754:	222b      	movmi	r2, #43	; 0x2b
 8000756:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 800075a:	782a      	ldrb	r2, [r5, #0]
 800075c:	2a2a      	cmp	r2, #42	; 0x2a
 800075e:	d02a      	beq.n	80007b6 <_vfiprintf_r+0x10e>
 8000760:	9a07      	ldr	r2, [sp, #28]
 8000762:	46a8      	mov	r8, r5
 8000764:	2000      	movs	r0, #0
 8000766:	250a      	movs	r5, #10
 8000768:	4641      	mov	r1, r8
 800076a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800076e:	3b30      	subs	r3, #48	; 0x30
 8000770:	2b09      	cmp	r3, #9
 8000772:	d969      	bls.n	8000848 <_vfiprintf_r+0x1a0>
 8000774:	b360      	cbz	r0, 80007d0 <_vfiprintf_r+0x128>
 8000776:	e024      	b.n	80007c2 <_vfiprintf_r+0x11a>
 8000778:	4b50      	ldr	r3, [pc, #320]	; (80008bc <_vfiprintf_r+0x214>)
 800077a:	429c      	cmp	r4, r3
 800077c:	d101      	bne.n	8000782 <_vfiprintf_r+0xda>
 800077e:	68b4      	ldr	r4, [r6, #8]
 8000780:	e7a2      	b.n	80006c8 <_vfiprintf_r+0x20>
 8000782:	4b4f      	ldr	r3, [pc, #316]	; (80008c0 <_vfiprintf_r+0x218>)
 8000784:	429c      	cmp	r4, r3
 8000786:	bf08      	it	eq
 8000788:	68f4      	ldreq	r4, [r6, #12]
 800078a:	e79d      	b.n	80006c8 <_vfiprintf_r+0x20>
 800078c:	4621      	mov	r1, r4
 800078e:	4630      	mov	r0, r6
 8000790:	f000 fab0 	bl	8000cf4 <__swsetup_r>
 8000794:	2800      	cmp	r0, #0
 8000796:	d09d      	beq.n	80006d4 <_vfiprintf_r+0x2c>
 8000798:	f04f 30ff 	mov.w	r0, #4294967295
 800079c:	b01d      	add	sp, #116	; 0x74
 800079e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80007a2:	46a8      	mov	r8, r5
 80007a4:	e7a2      	b.n	80006ec <_vfiprintf_r+0x44>
 80007a6:	4a44      	ldr	r2, [pc, #272]	; (80008b8 <_vfiprintf_r+0x210>)
 80007a8:	1a80      	subs	r0, r0, r2
 80007aa:	fa0b f000 	lsl.w	r0, fp, r0
 80007ae:	4318      	orrs	r0, r3
 80007b0:	9004      	str	r0, [sp, #16]
 80007b2:	4645      	mov	r5, r8
 80007b4:	e7be      	b.n	8000734 <_vfiprintf_r+0x8c>
 80007b6:	9a03      	ldr	r2, [sp, #12]
 80007b8:	1d11      	adds	r1, r2, #4
 80007ba:	6812      	ldr	r2, [r2, #0]
 80007bc:	9103      	str	r1, [sp, #12]
 80007be:	2a00      	cmp	r2, #0
 80007c0:	db01      	blt.n	80007c6 <_vfiprintf_r+0x11e>
 80007c2:	9207      	str	r2, [sp, #28]
 80007c4:	e004      	b.n	80007d0 <_vfiprintf_r+0x128>
 80007c6:	4252      	negs	r2, r2
 80007c8:	f043 0302 	orr.w	r3, r3, #2
 80007cc:	9207      	str	r2, [sp, #28]
 80007ce:	9304      	str	r3, [sp, #16]
 80007d0:	f898 3000 	ldrb.w	r3, [r8]
 80007d4:	2b2e      	cmp	r3, #46	; 0x2e
 80007d6:	d10e      	bne.n	80007f6 <_vfiprintf_r+0x14e>
 80007d8:	f898 3001 	ldrb.w	r3, [r8, #1]
 80007dc:	2b2a      	cmp	r3, #42	; 0x2a
 80007de:	d138      	bne.n	8000852 <_vfiprintf_r+0x1aa>
 80007e0:	9b03      	ldr	r3, [sp, #12]
 80007e2:	1d1a      	adds	r2, r3, #4
 80007e4:	681b      	ldr	r3, [r3, #0]
 80007e6:	9203      	str	r2, [sp, #12]
 80007e8:	2b00      	cmp	r3, #0
 80007ea:	bfb8      	it	lt
 80007ec:	f04f 33ff 	movlt.w	r3, #4294967295
 80007f0:	f108 0802 	add.w	r8, r8, #2
 80007f4:	9305      	str	r3, [sp, #20]
 80007f6:	4d33      	ldr	r5, [pc, #204]	; (80008c4 <_vfiprintf_r+0x21c>)
 80007f8:	f898 1000 	ldrb.w	r1, [r8]
 80007fc:	2203      	movs	r2, #3
 80007fe:	4628      	mov	r0, r5
 8000800:	f7ff fcf6 	bl	80001f0 <memchr>
 8000804:	b140      	cbz	r0, 8000818 <_vfiprintf_r+0x170>
 8000806:	2340      	movs	r3, #64	; 0x40
 8000808:	1b40      	subs	r0, r0, r5
 800080a:	fa03 f000 	lsl.w	r0, r3, r0
 800080e:	9b04      	ldr	r3, [sp, #16]
 8000810:	4303      	orrs	r3, r0
 8000812:	f108 0801 	add.w	r8, r8, #1
 8000816:	9304      	str	r3, [sp, #16]
 8000818:	f898 1000 	ldrb.w	r1, [r8]
 800081c:	482a      	ldr	r0, [pc, #168]	; (80008c8 <_vfiprintf_r+0x220>)
 800081e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000822:	2206      	movs	r2, #6
 8000824:	f108 0701 	add.w	r7, r8, #1
 8000828:	f7ff fce2 	bl	80001f0 <memchr>
 800082c:	2800      	cmp	r0, #0
 800082e:	d037      	beq.n	80008a0 <_vfiprintf_r+0x1f8>
 8000830:	4b26      	ldr	r3, [pc, #152]	; (80008cc <_vfiprintf_r+0x224>)
 8000832:	bb1b      	cbnz	r3, 800087c <_vfiprintf_r+0x1d4>
 8000834:	9b03      	ldr	r3, [sp, #12]
 8000836:	3307      	adds	r3, #7
 8000838:	f023 0307 	bic.w	r3, r3, #7
 800083c:	3308      	adds	r3, #8
 800083e:	9303      	str	r3, [sp, #12]
 8000840:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000842:	444b      	add	r3, r9
 8000844:	9309      	str	r3, [sp, #36]	; 0x24
 8000846:	e750      	b.n	80006ea <_vfiprintf_r+0x42>
 8000848:	fb05 3202 	mla	r2, r5, r2, r3
 800084c:	2001      	movs	r0, #1
 800084e:	4688      	mov	r8, r1
 8000850:	e78a      	b.n	8000768 <_vfiprintf_r+0xc0>
 8000852:	2300      	movs	r3, #0
 8000854:	f108 0801 	add.w	r8, r8, #1
 8000858:	9305      	str	r3, [sp, #20]
 800085a:	4619      	mov	r1, r3
 800085c:	250a      	movs	r5, #10
 800085e:	4640      	mov	r0, r8
 8000860:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000864:	3a30      	subs	r2, #48	; 0x30
 8000866:	2a09      	cmp	r2, #9
 8000868:	d903      	bls.n	8000872 <_vfiprintf_r+0x1ca>
 800086a:	2b00      	cmp	r3, #0
 800086c:	d0c3      	beq.n	80007f6 <_vfiprintf_r+0x14e>
 800086e:	9105      	str	r1, [sp, #20]
 8000870:	e7c1      	b.n	80007f6 <_vfiprintf_r+0x14e>
 8000872:	fb05 2101 	mla	r1, r5, r1, r2
 8000876:	2301      	movs	r3, #1
 8000878:	4680      	mov	r8, r0
 800087a:	e7f0      	b.n	800085e <_vfiprintf_r+0x1b6>
 800087c:	ab03      	add	r3, sp, #12
 800087e:	9300      	str	r3, [sp, #0]
 8000880:	4622      	mov	r2, r4
 8000882:	4b13      	ldr	r3, [pc, #76]	; (80008d0 <_vfiprintf_r+0x228>)
 8000884:	a904      	add	r1, sp, #16
 8000886:	4630      	mov	r0, r6
 8000888:	f3af 8000 	nop.w
 800088c:	f1b0 3fff 	cmp.w	r0, #4294967295
 8000890:	4681      	mov	r9, r0
 8000892:	d1d5      	bne.n	8000840 <_vfiprintf_r+0x198>
 8000894:	89a3      	ldrh	r3, [r4, #12]
 8000896:	065b      	lsls	r3, r3, #25
 8000898:	f53f af7e 	bmi.w	8000798 <_vfiprintf_r+0xf0>
 800089c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800089e:	e77d      	b.n	800079c <_vfiprintf_r+0xf4>
 80008a0:	ab03      	add	r3, sp, #12
 80008a2:	9300      	str	r3, [sp, #0]
 80008a4:	4622      	mov	r2, r4
 80008a6:	4b0a      	ldr	r3, [pc, #40]	; (80008d0 <_vfiprintf_r+0x228>)
 80008a8:	a904      	add	r1, sp, #16
 80008aa:	4630      	mov	r0, r6
 80008ac:	f000 f892 	bl	80009d4 <_printf_i>
 80008b0:	e7ec      	b.n	800088c <_vfiprintf_r+0x1e4>
 80008b2:	bf00      	nop
 80008b4:	080015f4 	.word	0x080015f4
 80008b8:	080015a0 	.word	0x080015a0
 80008bc:	08001614 	.word	0x08001614
 80008c0:	080015d4 	.word	0x080015d4
 80008c4:	080015a6 	.word	0x080015a6
 80008c8:	080015aa 	.word	0x080015aa
 80008cc:	00000000 	.word	0x00000000
 80008d0:	08000683 	.word	0x08000683

080008d4 <vfiprintf>:
 80008d4:	4613      	mov	r3, r2
 80008d6:	460a      	mov	r2, r1
 80008d8:	4601      	mov	r1, r0
 80008da:	4802      	ldr	r0, [pc, #8]	; (80008e4 <vfiprintf+0x10>)
 80008dc:	6800      	ldr	r0, [r0, #0]
 80008de:	f7ff bee3 	b.w	80006a8 <_vfiprintf_r>
 80008e2:	bf00      	nop
 80008e4:	20000004 	.word	0x20000004

080008e8 <_printf_common>:
 80008e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80008ec:	4691      	mov	r9, r2
 80008ee:	461f      	mov	r7, r3
 80008f0:	688a      	ldr	r2, [r1, #8]
 80008f2:	690b      	ldr	r3, [r1, #16]
 80008f4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80008f8:	4293      	cmp	r3, r2
 80008fa:	bfb8      	it	lt
 80008fc:	4613      	movlt	r3, r2
 80008fe:	f8c9 3000 	str.w	r3, [r9]
 8000902:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000906:	4606      	mov	r6, r0
 8000908:	460c      	mov	r4, r1
 800090a:	b112      	cbz	r2, 8000912 <_printf_common+0x2a>
 800090c:	3301      	adds	r3, #1
 800090e:	f8c9 3000 	str.w	r3, [r9]
 8000912:	6823      	ldr	r3, [r4, #0]
 8000914:	0699      	lsls	r1, r3, #26
 8000916:	bf42      	ittt	mi
 8000918:	f8d9 3000 	ldrmi.w	r3, [r9]
 800091c:	3302      	addmi	r3, #2
 800091e:	f8c9 3000 	strmi.w	r3, [r9]
 8000922:	6825      	ldr	r5, [r4, #0]
 8000924:	f015 0506 	ands.w	r5, r5, #6
 8000928:	d107      	bne.n	800093a <_printf_common+0x52>
 800092a:	f104 0a19 	add.w	sl, r4, #25
 800092e:	68e3      	ldr	r3, [r4, #12]
 8000930:	f8d9 2000 	ldr.w	r2, [r9]
 8000934:	1a9b      	subs	r3, r3, r2
 8000936:	42ab      	cmp	r3, r5
 8000938:	dc28      	bgt.n	800098c <_printf_common+0xa4>
 800093a:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 800093e:	6822      	ldr	r2, [r4, #0]
 8000940:	3300      	adds	r3, #0
 8000942:	bf18      	it	ne
 8000944:	2301      	movne	r3, #1
 8000946:	0692      	lsls	r2, r2, #26
 8000948:	d42d      	bmi.n	80009a6 <_printf_common+0xbe>
 800094a:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800094e:	4639      	mov	r1, r7
 8000950:	4630      	mov	r0, r6
 8000952:	47c0      	blx	r8
 8000954:	3001      	adds	r0, #1
 8000956:	d020      	beq.n	800099a <_printf_common+0xb2>
 8000958:	6823      	ldr	r3, [r4, #0]
 800095a:	68e5      	ldr	r5, [r4, #12]
 800095c:	f8d9 2000 	ldr.w	r2, [r9]
 8000960:	f003 0306 	and.w	r3, r3, #6
 8000964:	2b04      	cmp	r3, #4
 8000966:	bf08      	it	eq
 8000968:	1aad      	subeq	r5, r5, r2
 800096a:	68a3      	ldr	r3, [r4, #8]
 800096c:	6922      	ldr	r2, [r4, #16]
 800096e:	bf0c      	ite	eq
 8000970:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000974:	2500      	movne	r5, #0
 8000976:	4293      	cmp	r3, r2
 8000978:	bfc4      	itt	gt
 800097a:	1a9b      	subgt	r3, r3, r2
 800097c:	18ed      	addgt	r5, r5, r3
 800097e:	f04f 0900 	mov.w	r9, #0
 8000982:	341a      	adds	r4, #26
 8000984:	454d      	cmp	r5, r9
 8000986:	d11a      	bne.n	80009be <_printf_common+0xd6>
 8000988:	2000      	movs	r0, #0
 800098a:	e008      	b.n	800099e <_printf_common+0xb6>
 800098c:	2301      	movs	r3, #1
 800098e:	4652      	mov	r2, sl
 8000990:	4639      	mov	r1, r7
 8000992:	4630      	mov	r0, r6
 8000994:	47c0      	blx	r8
 8000996:	3001      	adds	r0, #1
 8000998:	d103      	bne.n	80009a2 <_printf_common+0xba>
 800099a:	f04f 30ff 	mov.w	r0, #4294967295
 800099e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80009a2:	3501      	adds	r5, #1
 80009a4:	e7c3      	b.n	800092e <_printf_common+0x46>
 80009a6:	18e1      	adds	r1, r4, r3
 80009a8:	1c5a      	adds	r2, r3, #1
 80009aa:	2030      	movs	r0, #48	; 0x30
 80009ac:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80009b0:	4422      	add	r2, r4
 80009b2:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80009b6:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80009ba:	3302      	adds	r3, #2
 80009bc:	e7c5      	b.n	800094a <_printf_common+0x62>
 80009be:	2301      	movs	r3, #1
 80009c0:	4622      	mov	r2, r4
 80009c2:	4639      	mov	r1, r7
 80009c4:	4630      	mov	r0, r6
 80009c6:	47c0      	blx	r8
 80009c8:	3001      	adds	r0, #1
 80009ca:	d0e6      	beq.n	800099a <_printf_common+0xb2>
 80009cc:	f109 0901 	add.w	r9, r9, #1
 80009d0:	e7d8      	b.n	8000984 <_printf_common+0x9c>
	...

080009d4 <_printf_i>:
 80009d4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80009d8:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 80009dc:	460c      	mov	r4, r1
 80009de:	7e09      	ldrb	r1, [r1, #24]
 80009e0:	b085      	sub	sp, #20
 80009e2:	296e      	cmp	r1, #110	; 0x6e
 80009e4:	4617      	mov	r7, r2
 80009e6:	4606      	mov	r6, r0
 80009e8:	4698      	mov	r8, r3
 80009ea:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80009ec:	f000 80b3 	beq.w	8000b56 <_printf_i+0x182>
 80009f0:	d822      	bhi.n	8000a38 <_printf_i+0x64>
 80009f2:	2963      	cmp	r1, #99	; 0x63
 80009f4:	d036      	beq.n	8000a64 <_printf_i+0x90>
 80009f6:	d80a      	bhi.n	8000a0e <_printf_i+0x3a>
 80009f8:	2900      	cmp	r1, #0
 80009fa:	f000 80b9 	beq.w	8000b70 <_printf_i+0x19c>
 80009fe:	2958      	cmp	r1, #88	; 0x58
 8000a00:	f000 8083 	beq.w	8000b0a <_printf_i+0x136>
 8000a04:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000a08:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8000a0c:	e032      	b.n	8000a74 <_printf_i+0xa0>
 8000a0e:	2964      	cmp	r1, #100	; 0x64
 8000a10:	d001      	beq.n	8000a16 <_printf_i+0x42>
 8000a12:	2969      	cmp	r1, #105	; 0x69
 8000a14:	d1f6      	bne.n	8000a04 <_printf_i+0x30>
 8000a16:	6820      	ldr	r0, [r4, #0]
 8000a18:	6813      	ldr	r3, [r2, #0]
 8000a1a:	0605      	lsls	r5, r0, #24
 8000a1c:	f103 0104 	add.w	r1, r3, #4
 8000a20:	d52a      	bpl.n	8000a78 <_printf_i+0xa4>
 8000a22:	681b      	ldr	r3, [r3, #0]
 8000a24:	6011      	str	r1, [r2, #0]
 8000a26:	2b00      	cmp	r3, #0
 8000a28:	da03      	bge.n	8000a32 <_printf_i+0x5e>
 8000a2a:	222d      	movs	r2, #45	; 0x2d
 8000a2c:	425b      	negs	r3, r3
 8000a2e:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8000a32:	486f      	ldr	r0, [pc, #444]	; (8000bf0 <_printf_i+0x21c>)
 8000a34:	220a      	movs	r2, #10
 8000a36:	e039      	b.n	8000aac <_printf_i+0xd8>
 8000a38:	2973      	cmp	r1, #115	; 0x73
 8000a3a:	f000 809d 	beq.w	8000b78 <_printf_i+0x1a4>
 8000a3e:	d808      	bhi.n	8000a52 <_printf_i+0x7e>
 8000a40:	296f      	cmp	r1, #111	; 0x6f
 8000a42:	d020      	beq.n	8000a86 <_printf_i+0xb2>
 8000a44:	2970      	cmp	r1, #112	; 0x70
 8000a46:	d1dd      	bne.n	8000a04 <_printf_i+0x30>
 8000a48:	6823      	ldr	r3, [r4, #0]
 8000a4a:	f043 0320 	orr.w	r3, r3, #32
 8000a4e:	6023      	str	r3, [r4, #0]
 8000a50:	e003      	b.n	8000a5a <_printf_i+0x86>
 8000a52:	2975      	cmp	r1, #117	; 0x75
 8000a54:	d017      	beq.n	8000a86 <_printf_i+0xb2>
 8000a56:	2978      	cmp	r1, #120	; 0x78
 8000a58:	d1d4      	bne.n	8000a04 <_printf_i+0x30>
 8000a5a:	2378      	movs	r3, #120	; 0x78
 8000a5c:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000a60:	4864      	ldr	r0, [pc, #400]	; (8000bf4 <_printf_i+0x220>)
 8000a62:	e055      	b.n	8000b10 <_printf_i+0x13c>
 8000a64:	6813      	ldr	r3, [r2, #0]
 8000a66:	1d19      	adds	r1, r3, #4
 8000a68:	681b      	ldr	r3, [r3, #0]
 8000a6a:	6011      	str	r1, [r2, #0]
 8000a6c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000a70:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000a74:	2301      	movs	r3, #1
 8000a76:	e08c      	b.n	8000b92 <_printf_i+0x1be>
 8000a78:	681b      	ldr	r3, [r3, #0]
 8000a7a:	6011      	str	r1, [r2, #0]
 8000a7c:	f010 0f40 	tst.w	r0, #64	; 0x40
 8000a80:	bf18      	it	ne
 8000a82:	b21b      	sxthne	r3, r3
 8000a84:	e7cf      	b.n	8000a26 <_printf_i+0x52>
 8000a86:	6813      	ldr	r3, [r2, #0]
 8000a88:	6825      	ldr	r5, [r4, #0]
 8000a8a:	1d18      	adds	r0, r3, #4
 8000a8c:	6010      	str	r0, [r2, #0]
 8000a8e:	0628      	lsls	r0, r5, #24
 8000a90:	d501      	bpl.n	8000a96 <_printf_i+0xc2>
 8000a92:	681b      	ldr	r3, [r3, #0]
 8000a94:	e002      	b.n	8000a9c <_printf_i+0xc8>
 8000a96:	0668      	lsls	r0, r5, #25
 8000a98:	d5fb      	bpl.n	8000a92 <_printf_i+0xbe>
 8000a9a:	881b      	ldrh	r3, [r3, #0]
 8000a9c:	4854      	ldr	r0, [pc, #336]	; (8000bf0 <_printf_i+0x21c>)
 8000a9e:	296f      	cmp	r1, #111	; 0x6f
 8000aa0:	bf14      	ite	ne
 8000aa2:	220a      	movne	r2, #10
 8000aa4:	2208      	moveq	r2, #8
 8000aa6:	2100      	movs	r1, #0
 8000aa8:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000aac:	6865      	ldr	r5, [r4, #4]
 8000aae:	60a5      	str	r5, [r4, #8]
 8000ab0:	2d00      	cmp	r5, #0
 8000ab2:	f2c0 8095 	blt.w	8000be0 <_printf_i+0x20c>
 8000ab6:	6821      	ldr	r1, [r4, #0]
 8000ab8:	f021 0104 	bic.w	r1, r1, #4
 8000abc:	6021      	str	r1, [r4, #0]
 8000abe:	2b00      	cmp	r3, #0
 8000ac0:	d13d      	bne.n	8000b3e <_printf_i+0x16a>
 8000ac2:	2d00      	cmp	r5, #0
 8000ac4:	f040 808e 	bne.w	8000be4 <_printf_i+0x210>
 8000ac8:	4665      	mov	r5, ip
 8000aca:	2a08      	cmp	r2, #8
 8000acc:	d10b      	bne.n	8000ae6 <_printf_i+0x112>
 8000ace:	6823      	ldr	r3, [r4, #0]
 8000ad0:	07db      	lsls	r3, r3, #31
 8000ad2:	d508      	bpl.n	8000ae6 <_printf_i+0x112>
 8000ad4:	6923      	ldr	r3, [r4, #16]
 8000ad6:	6862      	ldr	r2, [r4, #4]
 8000ad8:	429a      	cmp	r2, r3
 8000ada:	bfde      	ittt	le
 8000adc:	2330      	movle	r3, #48	; 0x30
 8000ade:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000ae2:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000ae6:	ebac 0305 	sub.w	r3, ip, r5
 8000aea:	6123      	str	r3, [r4, #16]
 8000aec:	f8cd 8000 	str.w	r8, [sp]
 8000af0:	463b      	mov	r3, r7
 8000af2:	aa03      	add	r2, sp, #12
 8000af4:	4621      	mov	r1, r4
 8000af6:	4630      	mov	r0, r6
 8000af8:	f7ff fef6 	bl	80008e8 <_printf_common>
 8000afc:	3001      	adds	r0, #1
 8000afe:	d14d      	bne.n	8000b9c <_printf_i+0x1c8>
 8000b00:	f04f 30ff 	mov.w	r0, #4294967295
 8000b04:	b005      	add	sp, #20
 8000b06:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8000b0a:	4839      	ldr	r0, [pc, #228]	; (8000bf0 <_printf_i+0x21c>)
 8000b0c:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8000b10:	6813      	ldr	r3, [r2, #0]
 8000b12:	6821      	ldr	r1, [r4, #0]
 8000b14:	1d1d      	adds	r5, r3, #4
 8000b16:	681b      	ldr	r3, [r3, #0]
 8000b18:	6015      	str	r5, [r2, #0]
 8000b1a:	060a      	lsls	r2, r1, #24
 8000b1c:	d50b      	bpl.n	8000b36 <_printf_i+0x162>
 8000b1e:	07ca      	lsls	r2, r1, #31
 8000b20:	bf44      	itt	mi
 8000b22:	f041 0120 	orrmi.w	r1, r1, #32
 8000b26:	6021      	strmi	r1, [r4, #0]
 8000b28:	b91b      	cbnz	r3, 8000b32 <_printf_i+0x15e>
 8000b2a:	6822      	ldr	r2, [r4, #0]
 8000b2c:	f022 0220 	bic.w	r2, r2, #32
 8000b30:	6022      	str	r2, [r4, #0]
 8000b32:	2210      	movs	r2, #16
 8000b34:	e7b7      	b.n	8000aa6 <_printf_i+0xd2>
 8000b36:	064d      	lsls	r5, r1, #25
 8000b38:	bf48      	it	mi
 8000b3a:	b29b      	uxthmi	r3, r3
 8000b3c:	e7ef      	b.n	8000b1e <_printf_i+0x14a>
 8000b3e:	4665      	mov	r5, ip
 8000b40:	fbb3 f1f2 	udiv	r1, r3, r2
 8000b44:	fb02 3311 	mls	r3, r2, r1, r3
 8000b48:	5cc3      	ldrb	r3, [r0, r3]
 8000b4a:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8000b4e:	460b      	mov	r3, r1
 8000b50:	2900      	cmp	r1, #0
 8000b52:	d1f5      	bne.n	8000b40 <_printf_i+0x16c>
 8000b54:	e7b9      	b.n	8000aca <_printf_i+0xf6>
 8000b56:	6813      	ldr	r3, [r2, #0]
 8000b58:	6825      	ldr	r5, [r4, #0]
 8000b5a:	6961      	ldr	r1, [r4, #20]
 8000b5c:	1d18      	adds	r0, r3, #4
 8000b5e:	6010      	str	r0, [r2, #0]
 8000b60:	0628      	lsls	r0, r5, #24
 8000b62:	681b      	ldr	r3, [r3, #0]
 8000b64:	d501      	bpl.n	8000b6a <_printf_i+0x196>
 8000b66:	6019      	str	r1, [r3, #0]
 8000b68:	e002      	b.n	8000b70 <_printf_i+0x19c>
 8000b6a:	066a      	lsls	r2, r5, #25
 8000b6c:	d5fb      	bpl.n	8000b66 <_printf_i+0x192>
 8000b6e:	8019      	strh	r1, [r3, #0]
 8000b70:	2300      	movs	r3, #0
 8000b72:	6123      	str	r3, [r4, #16]
 8000b74:	4665      	mov	r5, ip
 8000b76:	e7b9      	b.n	8000aec <_printf_i+0x118>
 8000b78:	6813      	ldr	r3, [r2, #0]
 8000b7a:	1d19      	adds	r1, r3, #4
 8000b7c:	6011      	str	r1, [r2, #0]
 8000b7e:	681d      	ldr	r5, [r3, #0]
 8000b80:	6862      	ldr	r2, [r4, #4]
 8000b82:	2100      	movs	r1, #0
 8000b84:	4628      	mov	r0, r5
 8000b86:	f7ff fb33 	bl	80001f0 <memchr>
 8000b8a:	b108      	cbz	r0, 8000b90 <_printf_i+0x1bc>
 8000b8c:	1b40      	subs	r0, r0, r5
 8000b8e:	6060      	str	r0, [r4, #4]
 8000b90:	6863      	ldr	r3, [r4, #4]
 8000b92:	6123      	str	r3, [r4, #16]
 8000b94:	2300      	movs	r3, #0
 8000b96:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000b9a:	e7a7      	b.n	8000aec <_printf_i+0x118>
 8000b9c:	6923      	ldr	r3, [r4, #16]
 8000b9e:	462a      	mov	r2, r5
 8000ba0:	4639      	mov	r1, r7
 8000ba2:	4630      	mov	r0, r6
 8000ba4:	47c0      	blx	r8
 8000ba6:	3001      	adds	r0, #1
 8000ba8:	d0aa      	beq.n	8000b00 <_printf_i+0x12c>
 8000baa:	6823      	ldr	r3, [r4, #0]
 8000bac:	079b      	lsls	r3, r3, #30
 8000bae:	d413      	bmi.n	8000bd8 <_printf_i+0x204>
 8000bb0:	68e0      	ldr	r0, [r4, #12]
 8000bb2:	9b03      	ldr	r3, [sp, #12]
 8000bb4:	4298      	cmp	r0, r3
 8000bb6:	bfb8      	it	lt
 8000bb8:	4618      	movlt	r0, r3
 8000bba:	e7a3      	b.n	8000b04 <_printf_i+0x130>
 8000bbc:	2301      	movs	r3, #1
 8000bbe:	464a      	mov	r2, r9
 8000bc0:	4639      	mov	r1, r7
 8000bc2:	4630      	mov	r0, r6
 8000bc4:	47c0      	blx	r8
 8000bc6:	3001      	adds	r0, #1
 8000bc8:	d09a      	beq.n	8000b00 <_printf_i+0x12c>
 8000bca:	3501      	adds	r5, #1
 8000bcc:	68e3      	ldr	r3, [r4, #12]
 8000bce:	9a03      	ldr	r2, [sp, #12]
 8000bd0:	1a9b      	subs	r3, r3, r2
 8000bd2:	42ab      	cmp	r3, r5
 8000bd4:	dcf2      	bgt.n	8000bbc <_printf_i+0x1e8>
 8000bd6:	e7eb      	b.n	8000bb0 <_printf_i+0x1dc>
 8000bd8:	2500      	movs	r5, #0
 8000bda:	f104 0919 	add.w	r9, r4, #25
 8000bde:	e7f5      	b.n	8000bcc <_printf_i+0x1f8>
 8000be0:	2b00      	cmp	r3, #0
 8000be2:	d1ac      	bne.n	8000b3e <_printf_i+0x16a>
 8000be4:	7803      	ldrb	r3, [r0, #0]
 8000be6:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000bea:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000bee:	e76c      	b.n	8000aca <_printf_i+0xf6>
 8000bf0:	080015b1 	.word	0x080015b1
 8000bf4:	080015c2 	.word	0x080015c2

08000bf8 <iprintf>:
 8000bf8:	b40f      	push	{r0, r1, r2, r3}
 8000bfa:	4b0a      	ldr	r3, [pc, #40]	; (8000c24 <iprintf+0x2c>)
 8000bfc:	b513      	push	{r0, r1, r4, lr}
 8000bfe:	681c      	ldr	r4, [r3, #0]
 8000c00:	b124      	cbz	r4, 8000c0c <iprintf+0x14>
 8000c02:	69a3      	ldr	r3, [r4, #24]
 8000c04:	b913      	cbnz	r3, 8000c0c <iprintf+0x14>
 8000c06:	4620      	mov	r0, r4
 8000c08:	f000 f9d2 	bl	8000fb0 <__sinit>
 8000c0c:	ab05      	add	r3, sp, #20
 8000c0e:	9a04      	ldr	r2, [sp, #16]
 8000c10:	68a1      	ldr	r1, [r4, #8]
 8000c12:	9301      	str	r3, [sp, #4]
 8000c14:	4620      	mov	r0, r4
 8000c16:	f7ff fd47 	bl	80006a8 <_vfiprintf_r>
 8000c1a:	b002      	add	sp, #8
 8000c1c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000c20:	b004      	add	sp, #16
 8000c22:	4770      	bx	lr
 8000c24:	20000004 	.word	0x20000004

08000c28 <putchar>:
 8000c28:	b538      	push	{r3, r4, r5, lr}
 8000c2a:	4b08      	ldr	r3, [pc, #32]	; (8000c4c <putchar+0x24>)
 8000c2c:	681c      	ldr	r4, [r3, #0]
 8000c2e:	4605      	mov	r5, r0
 8000c30:	b124      	cbz	r4, 8000c3c <putchar+0x14>
 8000c32:	69a3      	ldr	r3, [r4, #24]
 8000c34:	b913      	cbnz	r3, 8000c3c <putchar+0x14>
 8000c36:	4620      	mov	r0, r4
 8000c38:	f000 f9ba 	bl	8000fb0 <__sinit>
 8000c3c:	68a2      	ldr	r2, [r4, #8]
 8000c3e:	4629      	mov	r1, r5
 8000c40:	4620      	mov	r0, r4
 8000c42:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000c46:	f000 bb49 	b.w	80012dc <_putc_r>
 8000c4a:	bf00      	nop
 8000c4c:	20000004 	.word	0x20000004

08000c50 <__swbuf_r>:
 8000c50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c52:	460e      	mov	r6, r1
 8000c54:	4614      	mov	r4, r2
 8000c56:	4605      	mov	r5, r0
 8000c58:	b118      	cbz	r0, 8000c62 <__swbuf_r+0x12>
 8000c5a:	6983      	ldr	r3, [r0, #24]
 8000c5c:	b90b      	cbnz	r3, 8000c62 <__swbuf_r+0x12>
 8000c5e:	f000 f9a7 	bl	8000fb0 <__sinit>
 8000c62:	4b21      	ldr	r3, [pc, #132]	; (8000ce8 <__swbuf_r+0x98>)
 8000c64:	429c      	cmp	r4, r3
 8000c66:	d12a      	bne.n	8000cbe <__swbuf_r+0x6e>
 8000c68:	686c      	ldr	r4, [r5, #4]
 8000c6a:	69a3      	ldr	r3, [r4, #24]
 8000c6c:	60a3      	str	r3, [r4, #8]
 8000c6e:	89a3      	ldrh	r3, [r4, #12]
 8000c70:	071a      	lsls	r2, r3, #28
 8000c72:	d52e      	bpl.n	8000cd2 <__swbuf_r+0x82>
 8000c74:	6923      	ldr	r3, [r4, #16]
 8000c76:	b363      	cbz	r3, 8000cd2 <__swbuf_r+0x82>
 8000c78:	6923      	ldr	r3, [r4, #16]
 8000c7a:	6820      	ldr	r0, [r4, #0]
 8000c7c:	1ac0      	subs	r0, r0, r3
 8000c7e:	6963      	ldr	r3, [r4, #20]
 8000c80:	b2f6      	uxtb	r6, r6
 8000c82:	4283      	cmp	r3, r0
 8000c84:	4637      	mov	r7, r6
 8000c86:	dc04      	bgt.n	8000c92 <__swbuf_r+0x42>
 8000c88:	4621      	mov	r1, r4
 8000c8a:	4628      	mov	r0, r5
 8000c8c:	f000 f926 	bl	8000edc <_fflush_r>
 8000c90:	bb28      	cbnz	r0, 8000cde <__swbuf_r+0x8e>
 8000c92:	68a3      	ldr	r3, [r4, #8]
 8000c94:	3b01      	subs	r3, #1
 8000c96:	60a3      	str	r3, [r4, #8]
 8000c98:	6823      	ldr	r3, [r4, #0]
 8000c9a:	1c5a      	adds	r2, r3, #1
 8000c9c:	6022      	str	r2, [r4, #0]
 8000c9e:	701e      	strb	r6, [r3, #0]
 8000ca0:	6963      	ldr	r3, [r4, #20]
 8000ca2:	3001      	adds	r0, #1
 8000ca4:	4283      	cmp	r3, r0
 8000ca6:	d004      	beq.n	8000cb2 <__swbuf_r+0x62>
 8000ca8:	89a3      	ldrh	r3, [r4, #12]
 8000caa:	07db      	lsls	r3, r3, #31
 8000cac:	d519      	bpl.n	8000ce2 <__swbuf_r+0x92>
 8000cae:	2e0a      	cmp	r6, #10
 8000cb0:	d117      	bne.n	8000ce2 <__swbuf_r+0x92>
 8000cb2:	4621      	mov	r1, r4
 8000cb4:	4628      	mov	r0, r5
 8000cb6:	f000 f911 	bl	8000edc <_fflush_r>
 8000cba:	b190      	cbz	r0, 8000ce2 <__swbuf_r+0x92>
 8000cbc:	e00f      	b.n	8000cde <__swbuf_r+0x8e>
 8000cbe:	4b0b      	ldr	r3, [pc, #44]	; (8000cec <__swbuf_r+0x9c>)
 8000cc0:	429c      	cmp	r4, r3
 8000cc2:	d101      	bne.n	8000cc8 <__swbuf_r+0x78>
 8000cc4:	68ac      	ldr	r4, [r5, #8]
 8000cc6:	e7d0      	b.n	8000c6a <__swbuf_r+0x1a>
 8000cc8:	4b09      	ldr	r3, [pc, #36]	; (8000cf0 <__swbuf_r+0xa0>)
 8000cca:	429c      	cmp	r4, r3
 8000ccc:	bf08      	it	eq
 8000cce:	68ec      	ldreq	r4, [r5, #12]
 8000cd0:	e7cb      	b.n	8000c6a <__swbuf_r+0x1a>
 8000cd2:	4621      	mov	r1, r4
 8000cd4:	4628      	mov	r0, r5
 8000cd6:	f000 f80d 	bl	8000cf4 <__swsetup_r>
 8000cda:	2800      	cmp	r0, #0
 8000cdc:	d0cc      	beq.n	8000c78 <__swbuf_r+0x28>
 8000cde:	f04f 37ff 	mov.w	r7, #4294967295
 8000ce2:	4638      	mov	r0, r7
 8000ce4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000ce6:	bf00      	nop
 8000ce8:	080015f4 	.word	0x080015f4
 8000cec:	08001614 	.word	0x08001614
 8000cf0:	080015d4 	.word	0x080015d4

08000cf4 <__swsetup_r>:
 8000cf4:	4b32      	ldr	r3, [pc, #200]	; (8000dc0 <__swsetup_r+0xcc>)
 8000cf6:	b570      	push	{r4, r5, r6, lr}
 8000cf8:	681d      	ldr	r5, [r3, #0]
 8000cfa:	4606      	mov	r6, r0
 8000cfc:	460c      	mov	r4, r1
 8000cfe:	b125      	cbz	r5, 8000d0a <__swsetup_r+0x16>
 8000d00:	69ab      	ldr	r3, [r5, #24]
 8000d02:	b913      	cbnz	r3, 8000d0a <__swsetup_r+0x16>
 8000d04:	4628      	mov	r0, r5
 8000d06:	f000 f953 	bl	8000fb0 <__sinit>
 8000d0a:	4b2e      	ldr	r3, [pc, #184]	; (8000dc4 <__swsetup_r+0xd0>)
 8000d0c:	429c      	cmp	r4, r3
 8000d0e:	d10f      	bne.n	8000d30 <__swsetup_r+0x3c>
 8000d10:	686c      	ldr	r4, [r5, #4]
 8000d12:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000d16:	b29a      	uxth	r2, r3
 8000d18:	0715      	lsls	r5, r2, #28
 8000d1a:	d42c      	bmi.n	8000d76 <__swsetup_r+0x82>
 8000d1c:	06d0      	lsls	r0, r2, #27
 8000d1e:	d411      	bmi.n	8000d44 <__swsetup_r+0x50>
 8000d20:	2209      	movs	r2, #9
 8000d22:	6032      	str	r2, [r6, #0]
 8000d24:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000d28:	81a3      	strh	r3, [r4, #12]
 8000d2a:	f04f 30ff 	mov.w	r0, #4294967295
 8000d2e:	e03e      	b.n	8000dae <__swsetup_r+0xba>
 8000d30:	4b25      	ldr	r3, [pc, #148]	; (8000dc8 <__swsetup_r+0xd4>)
 8000d32:	429c      	cmp	r4, r3
 8000d34:	d101      	bne.n	8000d3a <__swsetup_r+0x46>
 8000d36:	68ac      	ldr	r4, [r5, #8]
 8000d38:	e7eb      	b.n	8000d12 <__swsetup_r+0x1e>
 8000d3a:	4b24      	ldr	r3, [pc, #144]	; (8000dcc <__swsetup_r+0xd8>)
 8000d3c:	429c      	cmp	r4, r3
 8000d3e:	bf08      	it	eq
 8000d40:	68ec      	ldreq	r4, [r5, #12]
 8000d42:	e7e6      	b.n	8000d12 <__swsetup_r+0x1e>
 8000d44:	0751      	lsls	r1, r2, #29
 8000d46:	d512      	bpl.n	8000d6e <__swsetup_r+0x7a>
 8000d48:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000d4a:	b141      	cbz	r1, 8000d5e <__swsetup_r+0x6a>
 8000d4c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000d50:	4299      	cmp	r1, r3
 8000d52:	d002      	beq.n	8000d5a <__swsetup_r+0x66>
 8000d54:	4630      	mov	r0, r6
 8000d56:	f000 fa19 	bl	800118c <_free_r>
 8000d5a:	2300      	movs	r3, #0
 8000d5c:	6363      	str	r3, [r4, #52]	; 0x34
 8000d5e:	89a3      	ldrh	r3, [r4, #12]
 8000d60:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000d64:	81a3      	strh	r3, [r4, #12]
 8000d66:	2300      	movs	r3, #0
 8000d68:	6063      	str	r3, [r4, #4]
 8000d6a:	6923      	ldr	r3, [r4, #16]
 8000d6c:	6023      	str	r3, [r4, #0]
 8000d6e:	89a3      	ldrh	r3, [r4, #12]
 8000d70:	f043 0308 	orr.w	r3, r3, #8
 8000d74:	81a3      	strh	r3, [r4, #12]
 8000d76:	6923      	ldr	r3, [r4, #16]
 8000d78:	b94b      	cbnz	r3, 8000d8e <__swsetup_r+0x9a>
 8000d7a:	89a3      	ldrh	r3, [r4, #12]
 8000d7c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000d80:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000d84:	d003      	beq.n	8000d8e <__swsetup_r+0x9a>
 8000d86:	4621      	mov	r1, r4
 8000d88:	4630      	mov	r0, r6
 8000d8a:	f000 f9bf 	bl	800110c <__smakebuf_r>
 8000d8e:	89a2      	ldrh	r2, [r4, #12]
 8000d90:	f012 0301 	ands.w	r3, r2, #1
 8000d94:	d00c      	beq.n	8000db0 <__swsetup_r+0xbc>
 8000d96:	2300      	movs	r3, #0
 8000d98:	60a3      	str	r3, [r4, #8]
 8000d9a:	6963      	ldr	r3, [r4, #20]
 8000d9c:	425b      	negs	r3, r3
 8000d9e:	61a3      	str	r3, [r4, #24]
 8000da0:	6923      	ldr	r3, [r4, #16]
 8000da2:	b953      	cbnz	r3, 8000dba <__swsetup_r+0xc6>
 8000da4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000da8:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 8000dac:	d1ba      	bne.n	8000d24 <__swsetup_r+0x30>
 8000dae:	bd70      	pop	{r4, r5, r6, pc}
 8000db0:	0792      	lsls	r2, r2, #30
 8000db2:	bf58      	it	pl
 8000db4:	6963      	ldrpl	r3, [r4, #20]
 8000db6:	60a3      	str	r3, [r4, #8]
 8000db8:	e7f2      	b.n	8000da0 <__swsetup_r+0xac>
 8000dba:	2000      	movs	r0, #0
 8000dbc:	e7f7      	b.n	8000dae <__swsetup_r+0xba>
 8000dbe:	bf00      	nop
 8000dc0:	20000004 	.word	0x20000004
 8000dc4:	080015f4 	.word	0x080015f4
 8000dc8:	08001614 	.word	0x08001614
 8000dcc:	080015d4 	.word	0x080015d4

08000dd0 <__sflush_r>:
 8000dd0:	898a      	ldrh	r2, [r1, #12]
 8000dd2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000dd6:	4605      	mov	r5, r0
 8000dd8:	0710      	lsls	r0, r2, #28
 8000dda:	460c      	mov	r4, r1
 8000ddc:	d458      	bmi.n	8000e90 <__sflush_r+0xc0>
 8000dde:	684b      	ldr	r3, [r1, #4]
 8000de0:	2b00      	cmp	r3, #0
 8000de2:	dc05      	bgt.n	8000df0 <__sflush_r+0x20>
 8000de4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000de6:	2b00      	cmp	r3, #0
 8000de8:	dc02      	bgt.n	8000df0 <__sflush_r+0x20>
 8000dea:	2000      	movs	r0, #0
 8000dec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000df0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000df2:	2e00      	cmp	r6, #0
 8000df4:	d0f9      	beq.n	8000dea <__sflush_r+0x1a>
 8000df6:	2300      	movs	r3, #0
 8000df8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000dfc:	682f      	ldr	r7, [r5, #0]
 8000dfe:	6a21      	ldr	r1, [r4, #32]
 8000e00:	602b      	str	r3, [r5, #0]
 8000e02:	d032      	beq.n	8000e6a <__sflush_r+0x9a>
 8000e04:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000e06:	89a3      	ldrh	r3, [r4, #12]
 8000e08:	075a      	lsls	r2, r3, #29
 8000e0a:	d505      	bpl.n	8000e18 <__sflush_r+0x48>
 8000e0c:	6863      	ldr	r3, [r4, #4]
 8000e0e:	1ac0      	subs	r0, r0, r3
 8000e10:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000e12:	b10b      	cbz	r3, 8000e18 <__sflush_r+0x48>
 8000e14:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000e16:	1ac0      	subs	r0, r0, r3
 8000e18:	2300      	movs	r3, #0
 8000e1a:	4602      	mov	r2, r0
 8000e1c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000e1e:	6a21      	ldr	r1, [r4, #32]
 8000e20:	4628      	mov	r0, r5
 8000e22:	47b0      	blx	r6
 8000e24:	1c43      	adds	r3, r0, #1
 8000e26:	89a3      	ldrh	r3, [r4, #12]
 8000e28:	d106      	bne.n	8000e38 <__sflush_r+0x68>
 8000e2a:	6829      	ldr	r1, [r5, #0]
 8000e2c:	291d      	cmp	r1, #29
 8000e2e:	d848      	bhi.n	8000ec2 <__sflush_r+0xf2>
 8000e30:	4a29      	ldr	r2, [pc, #164]	; (8000ed8 <__sflush_r+0x108>)
 8000e32:	40ca      	lsrs	r2, r1
 8000e34:	07d6      	lsls	r6, r2, #31
 8000e36:	d544      	bpl.n	8000ec2 <__sflush_r+0xf2>
 8000e38:	2200      	movs	r2, #0
 8000e3a:	6062      	str	r2, [r4, #4]
 8000e3c:	04d9      	lsls	r1, r3, #19
 8000e3e:	6922      	ldr	r2, [r4, #16]
 8000e40:	6022      	str	r2, [r4, #0]
 8000e42:	d504      	bpl.n	8000e4e <__sflush_r+0x7e>
 8000e44:	1c42      	adds	r2, r0, #1
 8000e46:	d101      	bne.n	8000e4c <__sflush_r+0x7c>
 8000e48:	682b      	ldr	r3, [r5, #0]
 8000e4a:	b903      	cbnz	r3, 8000e4e <__sflush_r+0x7e>
 8000e4c:	6560      	str	r0, [r4, #84]	; 0x54
 8000e4e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000e50:	602f      	str	r7, [r5, #0]
 8000e52:	2900      	cmp	r1, #0
 8000e54:	d0c9      	beq.n	8000dea <__sflush_r+0x1a>
 8000e56:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000e5a:	4299      	cmp	r1, r3
 8000e5c:	d002      	beq.n	8000e64 <__sflush_r+0x94>
 8000e5e:	4628      	mov	r0, r5
 8000e60:	f000 f994 	bl	800118c <_free_r>
 8000e64:	2000      	movs	r0, #0
 8000e66:	6360      	str	r0, [r4, #52]	; 0x34
 8000e68:	e7c0      	b.n	8000dec <__sflush_r+0x1c>
 8000e6a:	2301      	movs	r3, #1
 8000e6c:	4628      	mov	r0, r5
 8000e6e:	47b0      	blx	r6
 8000e70:	1c41      	adds	r1, r0, #1
 8000e72:	d1c8      	bne.n	8000e06 <__sflush_r+0x36>
 8000e74:	682b      	ldr	r3, [r5, #0]
 8000e76:	2b00      	cmp	r3, #0
 8000e78:	d0c5      	beq.n	8000e06 <__sflush_r+0x36>
 8000e7a:	2b1d      	cmp	r3, #29
 8000e7c:	d001      	beq.n	8000e82 <__sflush_r+0xb2>
 8000e7e:	2b16      	cmp	r3, #22
 8000e80:	d101      	bne.n	8000e86 <__sflush_r+0xb6>
 8000e82:	602f      	str	r7, [r5, #0]
 8000e84:	e7b1      	b.n	8000dea <__sflush_r+0x1a>
 8000e86:	89a3      	ldrh	r3, [r4, #12]
 8000e88:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000e8c:	81a3      	strh	r3, [r4, #12]
 8000e8e:	e7ad      	b.n	8000dec <__sflush_r+0x1c>
 8000e90:	690f      	ldr	r7, [r1, #16]
 8000e92:	2f00      	cmp	r7, #0
 8000e94:	d0a9      	beq.n	8000dea <__sflush_r+0x1a>
 8000e96:	0793      	lsls	r3, r2, #30
 8000e98:	680e      	ldr	r6, [r1, #0]
 8000e9a:	bf08      	it	eq
 8000e9c:	694b      	ldreq	r3, [r1, #20]
 8000e9e:	600f      	str	r7, [r1, #0]
 8000ea0:	bf18      	it	ne
 8000ea2:	2300      	movne	r3, #0
 8000ea4:	eba6 0807 	sub.w	r8, r6, r7
 8000ea8:	608b      	str	r3, [r1, #8]
 8000eaa:	f1b8 0f00 	cmp.w	r8, #0
 8000eae:	dd9c      	ble.n	8000dea <__sflush_r+0x1a>
 8000eb0:	4643      	mov	r3, r8
 8000eb2:	463a      	mov	r2, r7
 8000eb4:	6a21      	ldr	r1, [r4, #32]
 8000eb6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000eb8:	4628      	mov	r0, r5
 8000eba:	47b0      	blx	r6
 8000ebc:	2800      	cmp	r0, #0
 8000ebe:	dc06      	bgt.n	8000ece <__sflush_r+0xfe>
 8000ec0:	89a3      	ldrh	r3, [r4, #12]
 8000ec2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000ec6:	81a3      	strh	r3, [r4, #12]
 8000ec8:	f04f 30ff 	mov.w	r0, #4294967295
 8000ecc:	e78e      	b.n	8000dec <__sflush_r+0x1c>
 8000ece:	4407      	add	r7, r0
 8000ed0:	eba8 0800 	sub.w	r8, r8, r0
 8000ed4:	e7e9      	b.n	8000eaa <__sflush_r+0xda>
 8000ed6:	bf00      	nop
 8000ed8:	20400001 	.word	0x20400001

08000edc <_fflush_r>:
 8000edc:	b538      	push	{r3, r4, r5, lr}
 8000ede:	690b      	ldr	r3, [r1, #16]
 8000ee0:	4605      	mov	r5, r0
 8000ee2:	460c      	mov	r4, r1
 8000ee4:	b1db      	cbz	r3, 8000f1e <_fflush_r+0x42>
 8000ee6:	b118      	cbz	r0, 8000ef0 <_fflush_r+0x14>
 8000ee8:	6983      	ldr	r3, [r0, #24]
 8000eea:	b90b      	cbnz	r3, 8000ef0 <_fflush_r+0x14>
 8000eec:	f000 f860 	bl	8000fb0 <__sinit>
 8000ef0:	4b0c      	ldr	r3, [pc, #48]	; (8000f24 <_fflush_r+0x48>)
 8000ef2:	429c      	cmp	r4, r3
 8000ef4:	d109      	bne.n	8000f0a <_fflush_r+0x2e>
 8000ef6:	686c      	ldr	r4, [r5, #4]
 8000ef8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000efc:	b17b      	cbz	r3, 8000f1e <_fflush_r+0x42>
 8000efe:	4621      	mov	r1, r4
 8000f00:	4628      	mov	r0, r5
 8000f02:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000f06:	f7ff bf63 	b.w	8000dd0 <__sflush_r>
 8000f0a:	4b07      	ldr	r3, [pc, #28]	; (8000f28 <_fflush_r+0x4c>)
 8000f0c:	429c      	cmp	r4, r3
 8000f0e:	d101      	bne.n	8000f14 <_fflush_r+0x38>
 8000f10:	68ac      	ldr	r4, [r5, #8]
 8000f12:	e7f1      	b.n	8000ef8 <_fflush_r+0x1c>
 8000f14:	4b05      	ldr	r3, [pc, #20]	; (8000f2c <_fflush_r+0x50>)
 8000f16:	429c      	cmp	r4, r3
 8000f18:	bf08      	it	eq
 8000f1a:	68ec      	ldreq	r4, [r5, #12]
 8000f1c:	e7ec      	b.n	8000ef8 <_fflush_r+0x1c>
 8000f1e:	2000      	movs	r0, #0
 8000f20:	bd38      	pop	{r3, r4, r5, pc}
 8000f22:	bf00      	nop
 8000f24:	080015f4 	.word	0x080015f4
 8000f28:	08001614 	.word	0x08001614
 8000f2c:	080015d4 	.word	0x080015d4

08000f30 <std>:
 8000f30:	2300      	movs	r3, #0
 8000f32:	b510      	push	{r4, lr}
 8000f34:	4604      	mov	r4, r0
 8000f36:	e9c0 3300 	strd	r3, r3, [r0]
 8000f3a:	6083      	str	r3, [r0, #8]
 8000f3c:	8181      	strh	r1, [r0, #12]
 8000f3e:	6643      	str	r3, [r0, #100]	; 0x64
 8000f40:	81c2      	strh	r2, [r0, #14]
 8000f42:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000f46:	6183      	str	r3, [r0, #24]
 8000f48:	4619      	mov	r1, r3
 8000f4a:	2208      	movs	r2, #8
 8000f4c:	305c      	adds	r0, #92	; 0x5c
 8000f4e:	f7ff fb79 	bl	8000644 <memset>
 8000f52:	4b05      	ldr	r3, [pc, #20]	; (8000f68 <std+0x38>)
 8000f54:	6263      	str	r3, [r4, #36]	; 0x24
 8000f56:	4b05      	ldr	r3, [pc, #20]	; (8000f6c <std+0x3c>)
 8000f58:	62a3      	str	r3, [r4, #40]	; 0x28
 8000f5a:	4b05      	ldr	r3, [pc, #20]	; (8000f70 <std+0x40>)
 8000f5c:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000f5e:	4b05      	ldr	r3, [pc, #20]	; (8000f74 <std+0x44>)
 8000f60:	6224      	str	r4, [r4, #32]
 8000f62:	6323      	str	r3, [r4, #48]	; 0x30
 8000f64:	bd10      	pop	{r4, pc}
 8000f66:	bf00      	nop
 8000f68:	08001369 	.word	0x08001369
 8000f6c:	0800138b 	.word	0x0800138b
 8000f70:	080013c3 	.word	0x080013c3
 8000f74:	080013e7 	.word	0x080013e7

08000f78 <_cleanup_r>:
 8000f78:	4901      	ldr	r1, [pc, #4]	; (8000f80 <_cleanup_r+0x8>)
 8000f7a:	f000 b885 	b.w	8001088 <_fwalk_reent>
 8000f7e:	bf00      	nop
 8000f80:	08000edd 	.word	0x08000edd

08000f84 <__sfmoreglue>:
 8000f84:	b570      	push	{r4, r5, r6, lr}
 8000f86:	1e4a      	subs	r2, r1, #1
 8000f88:	2568      	movs	r5, #104	; 0x68
 8000f8a:	4355      	muls	r5, r2
 8000f8c:	460e      	mov	r6, r1
 8000f8e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000f92:	f000 f949 	bl	8001228 <_malloc_r>
 8000f96:	4604      	mov	r4, r0
 8000f98:	b140      	cbz	r0, 8000fac <__sfmoreglue+0x28>
 8000f9a:	2100      	movs	r1, #0
 8000f9c:	e9c0 1600 	strd	r1, r6, [r0]
 8000fa0:	300c      	adds	r0, #12
 8000fa2:	60a0      	str	r0, [r4, #8]
 8000fa4:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000fa8:	f7ff fb4c 	bl	8000644 <memset>
 8000fac:	4620      	mov	r0, r4
 8000fae:	bd70      	pop	{r4, r5, r6, pc}

08000fb0 <__sinit>:
 8000fb0:	6983      	ldr	r3, [r0, #24]
 8000fb2:	b510      	push	{r4, lr}
 8000fb4:	4604      	mov	r4, r0
 8000fb6:	bb33      	cbnz	r3, 8001006 <__sinit+0x56>
 8000fb8:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 8000fbc:	6503      	str	r3, [r0, #80]	; 0x50
 8000fbe:	4b12      	ldr	r3, [pc, #72]	; (8001008 <__sinit+0x58>)
 8000fc0:	4a12      	ldr	r2, [pc, #72]	; (800100c <__sinit+0x5c>)
 8000fc2:	681b      	ldr	r3, [r3, #0]
 8000fc4:	6282      	str	r2, [r0, #40]	; 0x28
 8000fc6:	4298      	cmp	r0, r3
 8000fc8:	bf04      	itt	eq
 8000fca:	2301      	moveq	r3, #1
 8000fcc:	6183      	streq	r3, [r0, #24]
 8000fce:	f000 f81f 	bl	8001010 <__sfp>
 8000fd2:	6060      	str	r0, [r4, #4]
 8000fd4:	4620      	mov	r0, r4
 8000fd6:	f000 f81b 	bl	8001010 <__sfp>
 8000fda:	60a0      	str	r0, [r4, #8]
 8000fdc:	4620      	mov	r0, r4
 8000fde:	f000 f817 	bl	8001010 <__sfp>
 8000fe2:	2200      	movs	r2, #0
 8000fe4:	60e0      	str	r0, [r4, #12]
 8000fe6:	2104      	movs	r1, #4
 8000fe8:	6860      	ldr	r0, [r4, #4]
 8000fea:	f7ff ffa1 	bl	8000f30 <std>
 8000fee:	2201      	movs	r2, #1
 8000ff0:	2109      	movs	r1, #9
 8000ff2:	68a0      	ldr	r0, [r4, #8]
 8000ff4:	f7ff ff9c 	bl	8000f30 <std>
 8000ff8:	2202      	movs	r2, #2
 8000ffa:	2112      	movs	r1, #18
 8000ffc:	68e0      	ldr	r0, [r4, #12]
 8000ffe:	f7ff ff97 	bl	8000f30 <std>
 8001002:	2301      	movs	r3, #1
 8001004:	61a3      	str	r3, [r4, #24]
 8001006:	bd10      	pop	{r4, pc}
 8001008:	0800159c 	.word	0x0800159c
 800100c:	08000f79 	.word	0x08000f79

08001010 <__sfp>:
 8001010:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001012:	4b1b      	ldr	r3, [pc, #108]	; (8001080 <__sfp+0x70>)
 8001014:	681e      	ldr	r6, [r3, #0]
 8001016:	69b3      	ldr	r3, [r6, #24]
 8001018:	4607      	mov	r7, r0
 800101a:	b913      	cbnz	r3, 8001022 <__sfp+0x12>
 800101c:	4630      	mov	r0, r6
 800101e:	f7ff ffc7 	bl	8000fb0 <__sinit>
 8001022:	3648      	adds	r6, #72	; 0x48
 8001024:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8001028:	3b01      	subs	r3, #1
 800102a:	d503      	bpl.n	8001034 <__sfp+0x24>
 800102c:	6833      	ldr	r3, [r6, #0]
 800102e:	b133      	cbz	r3, 800103e <__sfp+0x2e>
 8001030:	6836      	ldr	r6, [r6, #0]
 8001032:	e7f7      	b.n	8001024 <__sfp+0x14>
 8001034:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8001038:	b16d      	cbz	r5, 8001056 <__sfp+0x46>
 800103a:	3468      	adds	r4, #104	; 0x68
 800103c:	e7f4      	b.n	8001028 <__sfp+0x18>
 800103e:	2104      	movs	r1, #4
 8001040:	4638      	mov	r0, r7
 8001042:	f7ff ff9f 	bl	8000f84 <__sfmoreglue>
 8001046:	6030      	str	r0, [r6, #0]
 8001048:	2800      	cmp	r0, #0
 800104a:	d1f1      	bne.n	8001030 <__sfp+0x20>
 800104c:	230c      	movs	r3, #12
 800104e:	603b      	str	r3, [r7, #0]
 8001050:	4604      	mov	r4, r0
 8001052:	4620      	mov	r0, r4
 8001054:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001056:	4b0b      	ldr	r3, [pc, #44]	; (8001084 <__sfp+0x74>)
 8001058:	6665      	str	r5, [r4, #100]	; 0x64
 800105a:	e9c4 5500 	strd	r5, r5, [r4]
 800105e:	60a5      	str	r5, [r4, #8]
 8001060:	e9c4 3503 	strd	r3, r5, [r4, #12]
 8001064:	e9c4 5505 	strd	r5, r5, [r4, #20]
 8001068:	2208      	movs	r2, #8
 800106a:	4629      	mov	r1, r5
 800106c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8001070:	f7ff fae8 	bl	8000644 <memset>
 8001074:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8001078:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800107c:	e7e9      	b.n	8001052 <__sfp+0x42>
 800107e:	bf00      	nop
 8001080:	0800159c 	.word	0x0800159c
 8001084:	ffff0001 	.word	0xffff0001

08001088 <_fwalk_reent>:
 8001088:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800108c:	4680      	mov	r8, r0
 800108e:	4689      	mov	r9, r1
 8001090:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8001094:	2600      	movs	r6, #0
 8001096:	b914      	cbnz	r4, 800109e <_fwalk_reent+0x16>
 8001098:	4630      	mov	r0, r6
 800109a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800109e:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 80010a2:	3f01      	subs	r7, #1
 80010a4:	d501      	bpl.n	80010aa <_fwalk_reent+0x22>
 80010a6:	6824      	ldr	r4, [r4, #0]
 80010a8:	e7f5      	b.n	8001096 <_fwalk_reent+0xe>
 80010aa:	89ab      	ldrh	r3, [r5, #12]
 80010ac:	2b01      	cmp	r3, #1
 80010ae:	d907      	bls.n	80010c0 <_fwalk_reent+0x38>
 80010b0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80010b4:	3301      	adds	r3, #1
 80010b6:	d003      	beq.n	80010c0 <_fwalk_reent+0x38>
 80010b8:	4629      	mov	r1, r5
 80010ba:	4640      	mov	r0, r8
 80010bc:	47c8      	blx	r9
 80010be:	4306      	orrs	r6, r0
 80010c0:	3568      	adds	r5, #104	; 0x68
 80010c2:	e7ee      	b.n	80010a2 <_fwalk_reent+0x1a>

080010c4 <__swhatbuf_r>:
 80010c4:	b570      	push	{r4, r5, r6, lr}
 80010c6:	460e      	mov	r6, r1
 80010c8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80010cc:	2900      	cmp	r1, #0
 80010ce:	b096      	sub	sp, #88	; 0x58
 80010d0:	4614      	mov	r4, r2
 80010d2:	461d      	mov	r5, r3
 80010d4:	da07      	bge.n	80010e6 <__swhatbuf_r+0x22>
 80010d6:	2300      	movs	r3, #0
 80010d8:	602b      	str	r3, [r5, #0]
 80010da:	89b3      	ldrh	r3, [r6, #12]
 80010dc:	061a      	lsls	r2, r3, #24
 80010de:	d410      	bmi.n	8001102 <__swhatbuf_r+0x3e>
 80010e0:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80010e4:	e00e      	b.n	8001104 <__swhatbuf_r+0x40>
 80010e6:	466a      	mov	r2, sp
 80010e8:	f000 f9a4 	bl	8001434 <_fstat_r>
 80010ec:	2800      	cmp	r0, #0
 80010ee:	dbf2      	blt.n	80010d6 <__swhatbuf_r+0x12>
 80010f0:	9a01      	ldr	r2, [sp, #4]
 80010f2:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80010f6:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80010fa:	425a      	negs	r2, r3
 80010fc:	415a      	adcs	r2, r3
 80010fe:	602a      	str	r2, [r5, #0]
 8001100:	e7ee      	b.n	80010e0 <__swhatbuf_r+0x1c>
 8001102:	2340      	movs	r3, #64	; 0x40
 8001104:	2000      	movs	r0, #0
 8001106:	6023      	str	r3, [r4, #0]
 8001108:	b016      	add	sp, #88	; 0x58
 800110a:	bd70      	pop	{r4, r5, r6, pc}

0800110c <__smakebuf_r>:
 800110c:	898b      	ldrh	r3, [r1, #12]
 800110e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001110:	079d      	lsls	r5, r3, #30
 8001112:	4606      	mov	r6, r0
 8001114:	460c      	mov	r4, r1
 8001116:	d507      	bpl.n	8001128 <__smakebuf_r+0x1c>
 8001118:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800111c:	6023      	str	r3, [r4, #0]
 800111e:	6123      	str	r3, [r4, #16]
 8001120:	2301      	movs	r3, #1
 8001122:	6163      	str	r3, [r4, #20]
 8001124:	b002      	add	sp, #8
 8001126:	bd70      	pop	{r4, r5, r6, pc}
 8001128:	ab01      	add	r3, sp, #4
 800112a:	466a      	mov	r2, sp
 800112c:	f7ff ffca 	bl	80010c4 <__swhatbuf_r>
 8001130:	9900      	ldr	r1, [sp, #0]
 8001132:	4605      	mov	r5, r0
 8001134:	4630      	mov	r0, r6
 8001136:	f000 f877 	bl	8001228 <_malloc_r>
 800113a:	b948      	cbnz	r0, 8001150 <__smakebuf_r+0x44>
 800113c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001140:	059a      	lsls	r2, r3, #22
 8001142:	d4ef      	bmi.n	8001124 <__smakebuf_r+0x18>
 8001144:	f023 0303 	bic.w	r3, r3, #3
 8001148:	f043 0302 	orr.w	r3, r3, #2
 800114c:	81a3      	strh	r3, [r4, #12]
 800114e:	e7e3      	b.n	8001118 <__smakebuf_r+0xc>
 8001150:	4b0d      	ldr	r3, [pc, #52]	; (8001188 <__smakebuf_r+0x7c>)
 8001152:	62b3      	str	r3, [r6, #40]	; 0x28
 8001154:	89a3      	ldrh	r3, [r4, #12]
 8001156:	6020      	str	r0, [r4, #0]
 8001158:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800115c:	81a3      	strh	r3, [r4, #12]
 800115e:	9b00      	ldr	r3, [sp, #0]
 8001160:	6163      	str	r3, [r4, #20]
 8001162:	9b01      	ldr	r3, [sp, #4]
 8001164:	6120      	str	r0, [r4, #16]
 8001166:	b15b      	cbz	r3, 8001180 <__smakebuf_r+0x74>
 8001168:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800116c:	4630      	mov	r0, r6
 800116e:	f000 f973 	bl	8001458 <_isatty_r>
 8001172:	b128      	cbz	r0, 8001180 <__smakebuf_r+0x74>
 8001174:	89a3      	ldrh	r3, [r4, #12]
 8001176:	f023 0303 	bic.w	r3, r3, #3
 800117a:	f043 0301 	orr.w	r3, r3, #1
 800117e:	81a3      	strh	r3, [r4, #12]
 8001180:	89a3      	ldrh	r3, [r4, #12]
 8001182:	431d      	orrs	r5, r3
 8001184:	81a5      	strh	r5, [r4, #12]
 8001186:	e7cd      	b.n	8001124 <__smakebuf_r+0x18>
 8001188:	08000f79 	.word	0x08000f79

0800118c <_free_r>:
 800118c:	b538      	push	{r3, r4, r5, lr}
 800118e:	4605      	mov	r5, r0
 8001190:	2900      	cmp	r1, #0
 8001192:	d045      	beq.n	8001220 <_free_r+0x94>
 8001194:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8001198:	1f0c      	subs	r4, r1, #4
 800119a:	2b00      	cmp	r3, #0
 800119c:	bfb8      	it	lt
 800119e:	18e4      	addlt	r4, r4, r3
 80011a0:	f000 f97c 	bl	800149c <__malloc_lock>
 80011a4:	4a1f      	ldr	r2, [pc, #124]	; (8001224 <_free_r+0x98>)
 80011a6:	6813      	ldr	r3, [r2, #0]
 80011a8:	4610      	mov	r0, r2
 80011aa:	b933      	cbnz	r3, 80011ba <_free_r+0x2e>
 80011ac:	6063      	str	r3, [r4, #4]
 80011ae:	6014      	str	r4, [r2, #0]
 80011b0:	4628      	mov	r0, r5
 80011b2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80011b6:	f000 b972 	b.w	800149e <__malloc_unlock>
 80011ba:	42a3      	cmp	r3, r4
 80011bc:	d90c      	bls.n	80011d8 <_free_r+0x4c>
 80011be:	6821      	ldr	r1, [r4, #0]
 80011c0:	1862      	adds	r2, r4, r1
 80011c2:	4293      	cmp	r3, r2
 80011c4:	bf04      	itt	eq
 80011c6:	681a      	ldreq	r2, [r3, #0]
 80011c8:	685b      	ldreq	r3, [r3, #4]
 80011ca:	6063      	str	r3, [r4, #4]
 80011cc:	bf04      	itt	eq
 80011ce:	1852      	addeq	r2, r2, r1
 80011d0:	6022      	streq	r2, [r4, #0]
 80011d2:	6004      	str	r4, [r0, #0]
 80011d4:	e7ec      	b.n	80011b0 <_free_r+0x24>
 80011d6:	4613      	mov	r3, r2
 80011d8:	685a      	ldr	r2, [r3, #4]
 80011da:	b10a      	cbz	r2, 80011e0 <_free_r+0x54>
 80011dc:	42a2      	cmp	r2, r4
 80011de:	d9fa      	bls.n	80011d6 <_free_r+0x4a>
 80011e0:	6819      	ldr	r1, [r3, #0]
 80011e2:	1858      	adds	r0, r3, r1
 80011e4:	42a0      	cmp	r0, r4
 80011e6:	d10b      	bne.n	8001200 <_free_r+0x74>
 80011e8:	6820      	ldr	r0, [r4, #0]
 80011ea:	4401      	add	r1, r0
 80011ec:	1858      	adds	r0, r3, r1
 80011ee:	4282      	cmp	r2, r0
 80011f0:	6019      	str	r1, [r3, #0]
 80011f2:	d1dd      	bne.n	80011b0 <_free_r+0x24>
 80011f4:	6810      	ldr	r0, [r2, #0]
 80011f6:	6852      	ldr	r2, [r2, #4]
 80011f8:	605a      	str	r2, [r3, #4]
 80011fa:	4401      	add	r1, r0
 80011fc:	6019      	str	r1, [r3, #0]
 80011fe:	e7d7      	b.n	80011b0 <_free_r+0x24>
 8001200:	d902      	bls.n	8001208 <_free_r+0x7c>
 8001202:	230c      	movs	r3, #12
 8001204:	602b      	str	r3, [r5, #0]
 8001206:	e7d3      	b.n	80011b0 <_free_r+0x24>
 8001208:	6820      	ldr	r0, [r4, #0]
 800120a:	1821      	adds	r1, r4, r0
 800120c:	428a      	cmp	r2, r1
 800120e:	bf04      	itt	eq
 8001210:	6811      	ldreq	r1, [r2, #0]
 8001212:	6852      	ldreq	r2, [r2, #4]
 8001214:	6062      	str	r2, [r4, #4]
 8001216:	bf04      	itt	eq
 8001218:	1809      	addeq	r1, r1, r0
 800121a:	6021      	streq	r1, [r4, #0]
 800121c:	605c      	str	r4, [r3, #4]
 800121e:	e7c7      	b.n	80011b0 <_free_r+0x24>
 8001220:	bd38      	pop	{r3, r4, r5, pc}
 8001222:	bf00      	nop
 8001224:	20000084 	.word	0x20000084

08001228 <_malloc_r>:
 8001228:	b570      	push	{r4, r5, r6, lr}
 800122a:	1ccd      	adds	r5, r1, #3
 800122c:	f025 0503 	bic.w	r5, r5, #3
 8001230:	3508      	adds	r5, #8
 8001232:	2d0c      	cmp	r5, #12
 8001234:	bf38      	it	cc
 8001236:	250c      	movcc	r5, #12
 8001238:	2d00      	cmp	r5, #0
 800123a:	4606      	mov	r6, r0
 800123c:	db01      	blt.n	8001242 <_malloc_r+0x1a>
 800123e:	42a9      	cmp	r1, r5
 8001240:	d903      	bls.n	800124a <_malloc_r+0x22>
 8001242:	230c      	movs	r3, #12
 8001244:	6033      	str	r3, [r6, #0]
 8001246:	2000      	movs	r0, #0
 8001248:	bd70      	pop	{r4, r5, r6, pc}
 800124a:	f000 f927 	bl	800149c <__malloc_lock>
 800124e:	4a21      	ldr	r2, [pc, #132]	; (80012d4 <_malloc_r+0xac>)
 8001250:	6814      	ldr	r4, [r2, #0]
 8001252:	4621      	mov	r1, r4
 8001254:	b991      	cbnz	r1, 800127c <_malloc_r+0x54>
 8001256:	4c20      	ldr	r4, [pc, #128]	; (80012d8 <_malloc_r+0xb0>)
 8001258:	6823      	ldr	r3, [r4, #0]
 800125a:	b91b      	cbnz	r3, 8001264 <_malloc_r+0x3c>
 800125c:	4630      	mov	r0, r6
 800125e:	f000 f873 	bl	8001348 <_sbrk_r>
 8001262:	6020      	str	r0, [r4, #0]
 8001264:	4629      	mov	r1, r5
 8001266:	4630      	mov	r0, r6
 8001268:	f000 f86e 	bl	8001348 <_sbrk_r>
 800126c:	1c43      	adds	r3, r0, #1
 800126e:	d124      	bne.n	80012ba <_malloc_r+0x92>
 8001270:	230c      	movs	r3, #12
 8001272:	6033      	str	r3, [r6, #0]
 8001274:	4630      	mov	r0, r6
 8001276:	f000 f912 	bl	800149e <__malloc_unlock>
 800127a:	e7e4      	b.n	8001246 <_malloc_r+0x1e>
 800127c:	680b      	ldr	r3, [r1, #0]
 800127e:	1b5b      	subs	r3, r3, r5
 8001280:	d418      	bmi.n	80012b4 <_malloc_r+0x8c>
 8001282:	2b0b      	cmp	r3, #11
 8001284:	d90f      	bls.n	80012a6 <_malloc_r+0x7e>
 8001286:	600b      	str	r3, [r1, #0]
 8001288:	50cd      	str	r5, [r1, r3]
 800128a:	18cc      	adds	r4, r1, r3
 800128c:	4630      	mov	r0, r6
 800128e:	f000 f906 	bl	800149e <__malloc_unlock>
 8001292:	f104 000b 	add.w	r0, r4, #11
 8001296:	1d23      	adds	r3, r4, #4
 8001298:	f020 0007 	bic.w	r0, r0, #7
 800129c:	1ac3      	subs	r3, r0, r3
 800129e:	d0d3      	beq.n	8001248 <_malloc_r+0x20>
 80012a0:	425a      	negs	r2, r3
 80012a2:	50e2      	str	r2, [r4, r3]
 80012a4:	e7d0      	b.n	8001248 <_malloc_r+0x20>
 80012a6:	428c      	cmp	r4, r1
 80012a8:	684b      	ldr	r3, [r1, #4]
 80012aa:	bf16      	itet	ne
 80012ac:	6063      	strne	r3, [r4, #4]
 80012ae:	6013      	streq	r3, [r2, #0]
 80012b0:	460c      	movne	r4, r1
 80012b2:	e7eb      	b.n	800128c <_malloc_r+0x64>
 80012b4:	460c      	mov	r4, r1
 80012b6:	6849      	ldr	r1, [r1, #4]
 80012b8:	e7cc      	b.n	8001254 <_malloc_r+0x2c>
 80012ba:	1cc4      	adds	r4, r0, #3
 80012bc:	f024 0403 	bic.w	r4, r4, #3
 80012c0:	42a0      	cmp	r0, r4
 80012c2:	d005      	beq.n	80012d0 <_malloc_r+0xa8>
 80012c4:	1a21      	subs	r1, r4, r0
 80012c6:	4630      	mov	r0, r6
 80012c8:	f000 f83e 	bl	8001348 <_sbrk_r>
 80012cc:	3001      	adds	r0, #1
 80012ce:	d0cf      	beq.n	8001270 <_malloc_r+0x48>
 80012d0:	6025      	str	r5, [r4, #0]
 80012d2:	e7db      	b.n	800128c <_malloc_r+0x64>
 80012d4:	20000084 	.word	0x20000084
 80012d8:	20000088 	.word	0x20000088

080012dc <_putc_r>:
 80012dc:	b570      	push	{r4, r5, r6, lr}
 80012de:	460d      	mov	r5, r1
 80012e0:	4614      	mov	r4, r2
 80012e2:	4606      	mov	r6, r0
 80012e4:	b118      	cbz	r0, 80012ee <_putc_r+0x12>
 80012e6:	6983      	ldr	r3, [r0, #24]
 80012e8:	b90b      	cbnz	r3, 80012ee <_putc_r+0x12>
 80012ea:	f7ff fe61 	bl	8000fb0 <__sinit>
 80012ee:	4b13      	ldr	r3, [pc, #76]	; (800133c <_putc_r+0x60>)
 80012f0:	429c      	cmp	r4, r3
 80012f2:	d112      	bne.n	800131a <_putc_r+0x3e>
 80012f4:	6874      	ldr	r4, [r6, #4]
 80012f6:	68a3      	ldr	r3, [r4, #8]
 80012f8:	3b01      	subs	r3, #1
 80012fa:	2b00      	cmp	r3, #0
 80012fc:	60a3      	str	r3, [r4, #8]
 80012fe:	da16      	bge.n	800132e <_putc_r+0x52>
 8001300:	69a2      	ldr	r2, [r4, #24]
 8001302:	4293      	cmp	r3, r2
 8001304:	db02      	blt.n	800130c <_putc_r+0x30>
 8001306:	b2eb      	uxtb	r3, r5
 8001308:	2b0a      	cmp	r3, #10
 800130a:	d110      	bne.n	800132e <_putc_r+0x52>
 800130c:	4622      	mov	r2, r4
 800130e:	4629      	mov	r1, r5
 8001310:	4630      	mov	r0, r6
 8001312:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001316:	f7ff bc9b 	b.w	8000c50 <__swbuf_r>
 800131a:	4b09      	ldr	r3, [pc, #36]	; (8001340 <_putc_r+0x64>)
 800131c:	429c      	cmp	r4, r3
 800131e:	d101      	bne.n	8001324 <_putc_r+0x48>
 8001320:	68b4      	ldr	r4, [r6, #8]
 8001322:	e7e8      	b.n	80012f6 <_putc_r+0x1a>
 8001324:	4b07      	ldr	r3, [pc, #28]	; (8001344 <_putc_r+0x68>)
 8001326:	429c      	cmp	r4, r3
 8001328:	bf08      	it	eq
 800132a:	68f4      	ldreq	r4, [r6, #12]
 800132c:	e7e3      	b.n	80012f6 <_putc_r+0x1a>
 800132e:	6823      	ldr	r3, [r4, #0]
 8001330:	1c5a      	adds	r2, r3, #1
 8001332:	6022      	str	r2, [r4, #0]
 8001334:	701d      	strb	r5, [r3, #0]
 8001336:	b2e8      	uxtb	r0, r5
 8001338:	bd70      	pop	{r4, r5, r6, pc}
 800133a:	bf00      	nop
 800133c:	080015f4 	.word	0x080015f4
 8001340:	08001614 	.word	0x08001614
 8001344:	080015d4 	.word	0x080015d4

08001348 <_sbrk_r>:
 8001348:	b538      	push	{r3, r4, r5, lr}
 800134a:	4c06      	ldr	r4, [pc, #24]	; (8001364 <_sbrk_r+0x1c>)
 800134c:	2300      	movs	r3, #0
 800134e:	4605      	mov	r5, r0
 8001350:	4608      	mov	r0, r1
 8001352:	6023      	str	r3, [r4, #0]
 8001354:	f000 f8de 	bl	8001514 <_sbrk>
 8001358:	1c43      	adds	r3, r0, #1
 800135a:	d102      	bne.n	8001362 <_sbrk_r+0x1a>
 800135c:	6823      	ldr	r3, [r4, #0]
 800135e:	b103      	cbz	r3, 8001362 <_sbrk_r+0x1a>
 8001360:	602b      	str	r3, [r5, #0]
 8001362:	bd38      	pop	{r3, r4, r5, pc}
 8001364:	20000090 	.word	0x20000090

08001368 <__sread>:
 8001368:	b510      	push	{r4, lr}
 800136a:	460c      	mov	r4, r1
 800136c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001370:	f000 f896 	bl	80014a0 <_read_r>
 8001374:	2800      	cmp	r0, #0
 8001376:	bfab      	itete	ge
 8001378:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800137a:	89a3      	ldrhlt	r3, [r4, #12]
 800137c:	181b      	addge	r3, r3, r0
 800137e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8001382:	bfac      	ite	ge
 8001384:	6563      	strge	r3, [r4, #84]	; 0x54
 8001386:	81a3      	strhlt	r3, [r4, #12]
 8001388:	bd10      	pop	{r4, pc}

0800138a <__swrite>:
 800138a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800138e:	461f      	mov	r7, r3
 8001390:	898b      	ldrh	r3, [r1, #12]
 8001392:	05db      	lsls	r3, r3, #23
 8001394:	4605      	mov	r5, r0
 8001396:	460c      	mov	r4, r1
 8001398:	4616      	mov	r6, r2
 800139a:	d505      	bpl.n	80013a8 <__swrite+0x1e>
 800139c:	2302      	movs	r3, #2
 800139e:	2200      	movs	r2, #0
 80013a0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013a4:	f000 f868 	bl	8001478 <_lseek_r>
 80013a8:	89a3      	ldrh	r3, [r4, #12]
 80013aa:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80013ae:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80013b2:	81a3      	strh	r3, [r4, #12]
 80013b4:	4632      	mov	r2, r6
 80013b6:	463b      	mov	r3, r7
 80013b8:	4628      	mov	r0, r5
 80013ba:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80013be:	f000 b817 	b.w	80013f0 <_write_r>

080013c2 <__sseek>:
 80013c2:	b510      	push	{r4, lr}
 80013c4:	460c      	mov	r4, r1
 80013c6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013ca:	f000 f855 	bl	8001478 <_lseek_r>
 80013ce:	1c43      	adds	r3, r0, #1
 80013d0:	89a3      	ldrh	r3, [r4, #12]
 80013d2:	bf15      	itete	ne
 80013d4:	6560      	strne	r0, [r4, #84]	; 0x54
 80013d6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80013da:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80013de:	81a3      	strheq	r3, [r4, #12]
 80013e0:	bf18      	it	ne
 80013e2:	81a3      	strhne	r3, [r4, #12]
 80013e4:	bd10      	pop	{r4, pc}

080013e6 <__sclose>:
 80013e6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013ea:	f000 b813 	b.w	8001414 <_close_r>
	...

080013f0 <_write_r>:
 80013f0:	b538      	push	{r3, r4, r5, lr}
 80013f2:	4c07      	ldr	r4, [pc, #28]	; (8001410 <_write_r+0x20>)
 80013f4:	4605      	mov	r5, r0
 80013f6:	4608      	mov	r0, r1
 80013f8:	4611      	mov	r1, r2
 80013fa:	2200      	movs	r2, #0
 80013fc:	6022      	str	r2, [r4, #0]
 80013fe:	461a      	mov	r2, r3
 8001400:	f7fe ff6d 	bl	80002de <_write>
 8001404:	1c43      	adds	r3, r0, #1
 8001406:	d102      	bne.n	800140e <_write_r+0x1e>
 8001408:	6823      	ldr	r3, [r4, #0]
 800140a:	b103      	cbz	r3, 800140e <_write_r+0x1e>
 800140c:	602b      	str	r3, [r5, #0]
 800140e:	bd38      	pop	{r3, r4, r5, pc}
 8001410:	20000090 	.word	0x20000090

08001414 <_close_r>:
 8001414:	b538      	push	{r3, r4, r5, lr}
 8001416:	4c06      	ldr	r4, [pc, #24]	; (8001430 <_close_r+0x1c>)
 8001418:	2300      	movs	r3, #0
 800141a:	4605      	mov	r5, r0
 800141c:	4608      	mov	r0, r1
 800141e:	6023      	str	r3, [r4, #0]
 8001420:	f000 f850 	bl	80014c4 <_close>
 8001424:	1c43      	adds	r3, r0, #1
 8001426:	d102      	bne.n	800142e <_close_r+0x1a>
 8001428:	6823      	ldr	r3, [r4, #0]
 800142a:	b103      	cbz	r3, 800142e <_close_r+0x1a>
 800142c:	602b      	str	r3, [r5, #0]
 800142e:	bd38      	pop	{r3, r4, r5, pc}
 8001430:	20000090 	.word	0x20000090

08001434 <_fstat_r>:
 8001434:	b538      	push	{r3, r4, r5, lr}
 8001436:	4c07      	ldr	r4, [pc, #28]	; (8001454 <_fstat_r+0x20>)
 8001438:	2300      	movs	r3, #0
 800143a:	4605      	mov	r5, r0
 800143c:	4608      	mov	r0, r1
 800143e:	4611      	mov	r1, r2
 8001440:	6023      	str	r3, [r4, #0]
 8001442:	f000 f847 	bl	80014d4 <_fstat>
 8001446:	1c43      	adds	r3, r0, #1
 8001448:	d102      	bne.n	8001450 <_fstat_r+0x1c>
 800144a:	6823      	ldr	r3, [r4, #0]
 800144c:	b103      	cbz	r3, 8001450 <_fstat_r+0x1c>
 800144e:	602b      	str	r3, [r5, #0]
 8001450:	bd38      	pop	{r3, r4, r5, pc}
 8001452:	bf00      	nop
 8001454:	20000090 	.word	0x20000090

08001458 <_isatty_r>:
 8001458:	b538      	push	{r3, r4, r5, lr}
 800145a:	4c06      	ldr	r4, [pc, #24]	; (8001474 <_isatty_r+0x1c>)
 800145c:	2300      	movs	r3, #0
 800145e:	4605      	mov	r5, r0
 8001460:	4608      	mov	r0, r1
 8001462:	6023      	str	r3, [r4, #0]
 8001464:	f000 f83e 	bl	80014e4 <_isatty>
 8001468:	1c43      	adds	r3, r0, #1
 800146a:	d102      	bne.n	8001472 <_isatty_r+0x1a>
 800146c:	6823      	ldr	r3, [r4, #0]
 800146e:	b103      	cbz	r3, 8001472 <_isatty_r+0x1a>
 8001470:	602b      	str	r3, [r5, #0]
 8001472:	bd38      	pop	{r3, r4, r5, pc}
 8001474:	20000090 	.word	0x20000090

08001478 <_lseek_r>:
 8001478:	b538      	push	{r3, r4, r5, lr}
 800147a:	4c07      	ldr	r4, [pc, #28]	; (8001498 <_lseek_r+0x20>)
 800147c:	4605      	mov	r5, r0
 800147e:	4608      	mov	r0, r1
 8001480:	4611      	mov	r1, r2
 8001482:	2200      	movs	r2, #0
 8001484:	6022      	str	r2, [r4, #0]
 8001486:	461a      	mov	r2, r3
 8001488:	f000 f834 	bl	80014f4 <_lseek>
 800148c:	1c43      	adds	r3, r0, #1
 800148e:	d102      	bne.n	8001496 <_lseek_r+0x1e>
 8001490:	6823      	ldr	r3, [r4, #0]
 8001492:	b103      	cbz	r3, 8001496 <_lseek_r+0x1e>
 8001494:	602b      	str	r3, [r5, #0]
 8001496:	bd38      	pop	{r3, r4, r5, pc}
 8001498:	20000090 	.word	0x20000090

0800149c <__malloc_lock>:
 800149c:	4770      	bx	lr

0800149e <__malloc_unlock>:
 800149e:	4770      	bx	lr

080014a0 <_read_r>:
 80014a0:	b538      	push	{r3, r4, r5, lr}
 80014a2:	4c07      	ldr	r4, [pc, #28]	; (80014c0 <_read_r+0x20>)
 80014a4:	4605      	mov	r5, r0
 80014a6:	4608      	mov	r0, r1
 80014a8:	4611      	mov	r1, r2
 80014aa:	2200      	movs	r2, #0
 80014ac:	6022      	str	r2, [r4, #0]
 80014ae:	461a      	mov	r2, r3
 80014b0:	f000 f828 	bl	8001504 <_read>
 80014b4:	1c43      	adds	r3, r0, #1
 80014b6:	d102      	bne.n	80014be <_read_r+0x1e>
 80014b8:	6823      	ldr	r3, [r4, #0]
 80014ba:	b103      	cbz	r3, 80014be <_read_r+0x1e>
 80014bc:	602b      	str	r3, [r5, #0]
 80014be:	bd38      	pop	{r3, r4, r5, pc}
 80014c0:	20000090 	.word	0x20000090

080014c4 <_close>:
 80014c4:	4b02      	ldr	r3, [pc, #8]	; (80014d0 <_close+0xc>)
 80014c6:	2258      	movs	r2, #88	; 0x58
 80014c8:	601a      	str	r2, [r3, #0]
 80014ca:	f04f 30ff 	mov.w	r0, #4294967295
 80014ce:	4770      	bx	lr
 80014d0:	20000090 	.word	0x20000090

080014d4 <_fstat>:
 80014d4:	4b02      	ldr	r3, [pc, #8]	; (80014e0 <_fstat+0xc>)
 80014d6:	2258      	movs	r2, #88	; 0x58
 80014d8:	601a      	str	r2, [r3, #0]
 80014da:	f04f 30ff 	mov.w	r0, #4294967295
 80014de:	4770      	bx	lr
 80014e0:	20000090 	.word	0x20000090

080014e4 <_isatty>:
 80014e4:	4b02      	ldr	r3, [pc, #8]	; (80014f0 <_isatty+0xc>)
 80014e6:	2258      	movs	r2, #88	; 0x58
 80014e8:	601a      	str	r2, [r3, #0]
 80014ea:	2000      	movs	r0, #0
 80014ec:	4770      	bx	lr
 80014ee:	bf00      	nop
 80014f0:	20000090 	.word	0x20000090

080014f4 <_lseek>:
 80014f4:	4b02      	ldr	r3, [pc, #8]	; (8001500 <_lseek+0xc>)
 80014f6:	2258      	movs	r2, #88	; 0x58
 80014f8:	601a      	str	r2, [r3, #0]
 80014fa:	f04f 30ff 	mov.w	r0, #4294967295
 80014fe:	4770      	bx	lr
 8001500:	20000090 	.word	0x20000090

08001504 <_read>:
 8001504:	4b02      	ldr	r3, [pc, #8]	; (8001510 <_read+0xc>)
 8001506:	2258      	movs	r2, #88	; 0x58
 8001508:	601a      	str	r2, [r3, #0]
 800150a:	f04f 30ff 	mov.w	r0, #4294967295
 800150e:	4770      	bx	lr
 8001510:	20000090 	.word	0x20000090

08001514 <_sbrk>:
 8001514:	4b04      	ldr	r3, [pc, #16]	; (8001528 <_sbrk+0x14>)
 8001516:	6819      	ldr	r1, [r3, #0]
 8001518:	4602      	mov	r2, r0
 800151a:	b909      	cbnz	r1, 8001520 <_sbrk+0xc>
 800151c:	4903      	ldr	r1, [pc, #12]	; (800152c <_sbrk+0x18>)
 800151e:	6019      	str	r1, [r3, #0]
 8001520:	6818      	ldr	r0, [r3, #0]
 8001522:	4402      	add	r2, r0
 8001524:	601a      	str	r2, [r3, #0]
 8001526:	4770      	bx	lr
 8001528:	2000008c 	.word	0x2000008c
 800152c:	20000098 	.word	0x20000098

08001530 <_init>:
 8001530:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001532:	bf00      	nop
 8001534:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001536:	bc08      	pop	{r3}
 8001538:	469e      	mov	lr, r3
 800153a:	4770      	bx	lr

0800153c <_fini>:
 800153c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800153e:	bf00      	nop
 8001540:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001542:	bc08      	pop	{r3}
 8001544:	469e      	mov	lr, r3
 8001546:	4770      	bx	lr
