
USB_Device.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001290  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000ec  08001440  08001440  00011440  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800152c  0800152c  00020068  2**0
                  CONTENTS
  4 .ARM          00000000  0800152c  0800152c  00020068  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800152c  0800152c  00020068  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800152c  0800152c  0001152c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001530  08001530  00011530  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000068  20000000  08001534  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000002c  20000068  0800159c  00020068  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000094  0800159c  00020094  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020068  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001275  00000000  00000000  00020098  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000452  00000000  00000000  0002130d  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000000c8  00000000  00000000  00021760  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000090  00000000  00000000  00021828  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  0001b249  00000000  00000000  000218b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00001080  00000000  00000000  0003cb01  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000972d8  00000000  00000000  0003db81  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  000d4e59  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000a6c  00000000  00000000  000d4ed4  2**2
                  CONTENTS, READONLY, DEBUGGING
 21 .stab         00000084  00000000  00000000  000d5940  2**2
                  CONTENTS, READONLY, DEBUGGING
 22 .stabstr      00000117  00000000  00000000  000d59c4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000068 	.word	0x20000068
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08001428 	.word	0x08001428

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000006c 	.word	0x2000006c
 80001ec:	08001428 	.word	0x08001428

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <ITM_SendChar>:
           \li Is blocking when a debugger is connected, but the previous character sent has not been transmitted.
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
 8000290:	b480      	push	{r7}
 8000292:	b083      	sub	sp, #12
 8000294:	af00      	add	r7, sp, #0
 8000296:	6078      	str	r0, [r7, #4]
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8000298:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 800029c:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	; 0xe80
 80002a0:	f003 0301 	and.w	r3, r3, #1
 80002a4:	2b00      	cmp	r3, #0
 80002a6:	d013      	beq.n	80002d0 <ITM_SendChar+0x40>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 80002a8:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002ac:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	; 0xe00
 80002b0:	f003 0301 	and.w	r3, r3, #1
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 80002b4:	2b00      	cmp	r3, #0
 80002b6:	d00b      	beq.n	80002d0 <ITM_SendChar+0x40>
  {
    while (ITM->PORT[0U].u32 == 0UL)
 80002b8:	e000      	b.n	80002bc <ITM_SendChar+0x2c>
    {
      __NOP();
 80002ba:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 80002bc:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002c0:	681b      	ldr	r3, [r3, #0]
 80002c2:	2b00      	cmp	r3, #0
 80002c4:	d0f9      	beq.n	80002ba <ITM_SendChar+0x2a>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 80002c6:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002ca:	687a      	ldr	r2, [r7, #4]
 80002cc:	b2d2      	uxtb	r2, r2
 80002ce:	701a      	strb	r2, [r3, #0]
  }
  return (ch);
 80002d0:	687b      	ldr	r3, [r7, #4]
}
 80002d2:	4618      	mov	r0, r3
 80002d4:	370c      	adds	r7, #12
 80002d6:	46bd      	mov	sp, r7
 80002d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002dc:	4770      	bx	lr

080002de <_write>:

/** \brief Redirects `printf()` output to the serial wire out (SWO).
 * This function overrides a weak function symbol and is not to be used directly.
 */
int _write(int file, char *ptr, int len)
{
 80002de:	b580      	push	{r7, lr}
 80002e0:	b086      	sub	sp, #24
 80002e2:	af00      	add	r7, sp, #0
 80002e4:	60f8      	str	r0, [r7, #12]
 80002e6:	60b9      	str	r1, [r7, #8]
 80002e8:	607a      	str	r2, [r7, #4]
  int i=0;
 80002ea:	2300      	movs	r3, #0
 80002ec:	617b      	str	r3, [r7, #20]
  for(i=0 ; i<len ; i++)
 80002ee:	2300      	movs	r3, #0
 80002f0:	617b      	str	r3, [r7, #20]
 80002f2:	e009      	b.n	8000308 <_write+0x2a>
    ITM_SendChar((*ptr++));
 80002f4:	68bb      	ldr	r3, [r7, #8]
 80002f6:	1c5a      	adds	r2, r3, #1
 80002f8:	60ba      	str	r2, [r7, #8]
 80002fa:	781b      	ldrb	r3, [r3, #0]
 80002fc:	4618      	mov	r0, r3
 80002fe:	f7ff ffc7 	bl	8000290 <ITM_SendChar>
  for(i=0 ; i<len ; i++)
 8000302:	697b      	ldr	r3, [r7, #20]
 8000304:	3301      	adds	r3, #1
 8000306:	617b      	str	r3, [r7, #20]
 8000308:	697a      	ldr	r2, [r7, #20]
 800030a:	687b      	ldr	r3, [r7, #4]
 800030c:	429a      	cmp	r2, r3
 800030e:	dbf1      	blt.n	80002f4 <_write+0x16>

  return len;
 8000310:	687b      	ldr	r3, [r7, #4]
}
 8000312:	4618      	mov	r0, r3
 8000314:	3718      	adds	r7, #24
 8000316:	46bd      	mov	sp, r7
 8000318:	bd80      	pop	{r7, pc}
	...

0800031c <_get_log_level_string>:

char const * const _get_log_level_string(LogLevel const log_level)
{
 800031c:	b480      	push	{r7}
 800031e:	b083      	sub	sp, #12
 8000320:	af00      	add	r7, sp, #0
 8000322:	4603      	mov	r3, r0
 8000324:	71fb      	strb	r3, [r7, #7]
    switch(log_level)
 8000326:	79fb      	ldrb	r3, [r7, #7]
 8000328:	2b01      	cmp	r3, #1
 800032a:	d005      	beq.n	8000338 <_get_log_level_string+0x1c>
 800032c:	2b02      	cmp	r3, #2
 800032e:	d005      	beq.n	800033c <_get_log_level_string+0x20>
 8000330:	2b00      	cmp	r3, #0
 8000332:	d105      	bne.n	8000340 <_get_log_level_string+0x24>
    {
        case LOG_LEVEL_ERROR:
            return "ERROR";
 8000334:	4b05      	ldr	r3, [pc, #20]	; (800034c <_get_log_level_string+0x30>)
 8000336:	e003      	b.n	8000340 <_get_log_level_string+0x24>
        case LOG_LEVEL_INFORMATION:
            return "INFO";
 8000338:	4b05      	ldr	r3, [pc, #20]	; (8000350 <_get_log_level_string+0x34>)
 800033a:	e001      	b.n	8000340 <_get_log_level_string+0x24>
        case LOG_LEVEL_DEBUG:
            return "DEBUG";
 800033c:	4b05      	ldr	r3, [pc, #20]	; (8000354 <_get_log_level_string+0x38>)
 800033e:	e7ff      	b.n	8000340 <_get_log_level_string+0x24>
    }
}
 8000340:	4618      	mov	r0, r3
 8000342:	370c      	adds	r7, #12
 8000344:	46bd      	mov	sp, r7
 8000346:	f85d 7b04 	ldr.w	r7, [sp], #4
 800034a:	4770      	bx	lr
 800034c:	08001440 	.word	0x08001440
 8000350:	08001448 	.word	0x08001448
 8000354:	08001450 	.word	0x08001450

08000358 <_log>:

static void _log(LogLevel const log_level, char const * const format, va_list args)
{
 8000358:	b580      	push	{r7, lr}
 800035a:	b084      	sub	sp, #16
 800035c:	af00      	add	r7, sp, #0
 800035e:	4603      	mov	r3, r0
 8000360:	60b9      	str	r1, [r7, #8]
 8000362:	607a      	str	r2, [r7, #4]
 8000364:	73fb      	strb	r3, [r7, #15]
    if (log_level > system_log_level)
 8000366:	4b0f      	ldr	r3, [pc, #60]	; (80003a4 <_log+0x4c>)
 8000368:	781b      	ldrb	r3, [r3, #0]
 800036a:	7bfa      	ldrb	r2, [r7, #15]
 800036c:	429a      	cmp	r2, r3
 800036e:	d814      	bhi.n	800039a <_log+0x42>
        return;

	printf("[%s] ", _get_log_level_string(log_level));
 8000370:	7bfb      	ldrb	r3, [r7, #15]
 8000372:	4618      	mov	r0, r3
 8000374:	f7ff ffd2 	bl	800031c <_get_log_level_string>
 8000378:	4603      	mov	r3, r0
 800037a:	4619      	mov	r1, r3
 800037c:	480a      	ldr	r0, [pc, #40]	; (80003a8 <_log+0x50>)
 800037e:	f000 fbb7 	bl	8000af0 <iprintf>
	vfprintf(stdout, format, args);
 8000382:	4b0a      	ldr	r3, [pc, #40]	; (80003ac <_log+0x54>)
 8000384:	681b      	ldr	r3, [r3, #0]
 8000386:	689b      	ldr	r3, [r3, #8]
 8000388:	687a      	ldr	r2, [r7, #4]
 800038a:	68b9      	ldr	r1, [r7, #8]
 800038c:	4618      	mov	r0, r3
 800038e:	f000 fa1d 	bl	80007cc <vfiprintf>
	printf("\n");
 8000392:	200a      	movs	r0, #10
 8000394:	f000 fbc4 	bl	8000b20 <putchar>
 8000398:	e000      	b.n	800039c <_log+0x44>
        return;
 800039a:	bf00      	nop
}
 800039c:	3710      	adds	r7, #16
 800039e:	46bd      	mov	sp, r7
 80003a0:	bd80      	pop	{r7, pc}
 80003a2:	bf00      	nop
 80003a4:	20000000 	.word	0x20000000
 80003a8:	08001458 	.word	0x08001458
 80003ac:	20000004 	.word	0x20000004

080003b0 <log_info>:
    _log(LOG_LEVEL_ERROR, format, args);
    va_end(args);
}

void log_info(char const * const format, ...)
{
 80003b0:	b40f      	push	{r0, r1, r2, r3}
 80003b2:	b580      	push	{r7, lr}
 80003b4:	b082      	sub	sp, #8
 80003b6:	af00      	add	r7, sp, #0
    va_list args;
	va_start(args, format);
 80003b8:	f107 0314 	add.w	r3, r7, #20
 80003bc:	607b      	str	r3, [r7, #4]
    _log(LOG_LEVEL_INFORMATION, format, args);
 80003be:	687a      	ldr	r2, [r7, #4]
 80003c0:	6939      	ldr	r1, [r7, #16]
 80003c2:	2001      	movs	r0, #1
 80003c4:	f7ff ffc8 	bl	8000358 <_log>
    va_end(args);
}
 80003c8:	bf00      	nop
 80003ca:	3708      	adds	r7, #8
 80003cc:	46bd      	mov	sp, r7
 80003ce:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80003d2:	b004      	add	sp, #16
 80003d4:	4770      	bx	lr
	...

080003d8 <main>:
#include "Helpers/logger.h"

int main(void)
{
 80003d8:	b580      	push	{r7, lr}
 80003da:	af00      	add	r7, sp, #0
	log_info("Program entrypoint.");
 80003dc:	4801      	ldr	r0, [pc, #4]	; (80003e4 <main+0xc>)
 80003de:	f7ff ffe7 	bl	80003b0 <log_info>

	for(;;);
 80003e2:	e7fe      	b.n	80003e2 <main+0xa>
 80003e4:	08001480 	.word	0x08001480

080003e8 <configure_clock>:
// AHB prescaler = 1
// APB prescaler1 = 2,  APB prescaler2 = 1
// MCO1 prescaler = 2

void configure_clock()
{
 80003e8:	b480      	push	{r7}
 80003ea:	af00      	add	r7, sp, #0
	/* Configure Flash Latency */
	MODIFY_REG(FLASH->ACR,		// FLASH_ACR base register
 80003ec:	4b25      	ldr	r3, [pc, #148]	; (8000484 <configure_clock+0x9c>)
 80003ee:	681b      	ldr	r3, [r3, #0]
 80003f0:	f023 030f 	bic.w	r3, r3, #15
 80003f4:	4a23      	ldr	r2, [pc, #140]	; (8000484 <configure_clock+0x9c>)
 80003f6:	f043 0302 	orr.w	r3, r3, #2
 80003fa:	6013      	str	r3, [r2, #0]
			_VAL2FLD(FLASH_ACR_LATENCY, FLASH_ACR_LATENCY_2WS)// Set Value (Write "2WS" value in LATAENCY Position)
			// (method 2) FLASH_ACR_LATENCY_2WS << FLASH_ACR_LATENCY_Pos
			);

	/* Enable HSE */
	SET_BIT(RCC->CR, RCC_CR_HSEON);  // (Register name, Field name)
 80003fc:	4b22      	ldr	r3, [pc, #136]	; (8000488 <configure_clock+0xa0>)
 80003fe:	681b      	ldr	r3, [r3, #0]
 8000400:	4a21      	ldr	r2, [pc, #132]	; (8000488 <configure_clock+0xa0>)
 8000402:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8000406:	6013      	str	r3, [r2, #0]

	/* Waits until HSE is stable */
	while( !READ_BIT(RCC->CR, RCC_CR_HSERDY) );
 8000408:	bf00      	nop
 800040a:	4b1f      	ldr	r3, [pc, #124]	; (8000488 <configure_clock+0xa0>)
 800040c:	681b      	ldr	r3, [r3, #0]
 800040e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000412:	2b00      	cmp	r3, #0
 8000414:	d0f9      	beq.n	800040a <configure_clock+0x22>

	/* Configures PLL: source = HSE, PLLCLK = 72MHz. */
	MODIFY_REG(RCC->PLLCFGR,
 8000416:	4b1c      	ldr	r3, [pc, #112]	; (8000488 <configure_clock+0xa0>)
 8000418:	685b      	ldr	r3, [r3, #4]
 800041a:	4a1c      	ldr	r2, [pc, #112]	; (800048c <configure_clock+0xa4>)
 800041c:	401a      	ands	r2, r3
 800041e:	491a      	ldr	r1, [pc, #104]	; (8000488 <configure_clock+0xa0>)
 8000420:	4b1b      	ldr	r3, [pc, #108]	; (8000490 <configure_clock+0xa8>)
 8000422:	4313      	orrs	r3, r2
 8000424:	604b      	str	r3, [r1, #4]
		RCC_PLLCFGR_PLLM | RCC_PLLCFGR_PLLN | RCC_PLLCFGR_PLLQ | RCC_PLLCFGR_PLLSRC | RCC_PLLCFGR_PLLP,
		_VAL2FLD(RCC_PLLCFGR_PLLM, 4) | _VAL2FLD(RCC_PLLCFGR_PLLN, 72) | _VAL2FLD(RCC_PLLCFGR_PLLQ, 3) | RCC_PLLCFGR_PLLSRC_HSE
	);

	/* Enables PLL */
	SET_BIT(RCC->CR, RCC_CR_PLLON);
 8000426:	4b18      	ldr	r3, [pc, #96]	; (8000488 <configure_clock+0xa0>)
 8000428:	681b      	ldr	r3, [r3, #0]
 800042a:	4a17      	ldr	r2, [pc, #92]	; (8000488 <configure_clock+0xa0>)
 800042c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000430:	6013      	str	r3, [r2, #0]

	/* Waits until PLL is stable */
	while( !READ_BIT(RCC->CR, RCC_CR_PLLRDY) );
 8000432:	bf00      	nop
 8000434:	4b14      	ldr	r3, [pc, #80]	; (8000488 <configure_clock+0xa0>)
 8000436:	681b      	ldr	r3, [r3, #0]
 8000438:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800043c:	2b00      	cmp	r3, #0
 800043e:	d0f9      	beq.n	8000434 <configure_clock+0x4c>

	/* Switch system clock to PLL */
	MODIFY_REG(RCC->CFGR,
 8000440:	4b11      	ldr	r3, [pc, #68]	; (8000488 <configure_clock+0xa0>)
 8000442:	689b      	ldr	r3, [r3, #8]
 8000444:	f023 0303 	bic.w	r3, r3, #3
 8000448:	4a0f      	ldr	r2, [pc, #60]	; (8000488 <configure_clock+0xa0>)
 800044a:	f043 0302 	orr.w	r3, r3, #2
 800044e:	6093      	str	r3, [r2, #8]
		RCC_CFGR_SW,
		_VAL2FLD(RCC_CFGR_SW, RCC_CFGR_SW_PLL)
	);

	/* Configures PPRE1 = 2, (PPRE2 = 1, HPRE = 1 by default). */
	MODIFY_REG(RCC->CFGR,
 8000450:	4b0d      	ldr	r3, [pc, #52]	; (8000488 <configure_clock+0xa0>)
 8000452:	689b      	ldr	r3, [r3, #8]
 8000454:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8000458:	4a0b      	ldr	r2, [pc, #44]	; (8000488 <configure_clock+0xa0>)
 800045a:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800045e:	6093      	str	r3, [r2, #8]
		RCC_CFGR_PPRE1,
		_VAL2FLD(RCC_CFGR_PPRE1, 4)
	);

	/* Waits until PLL is used */
	while(READ_BIT(RCC->CFGR, RCC_CFGR_SWS) != RCC_CFGR_SWS_PLL);
 8000460:	bf00      	nop
 8000462:	4b09      	ldr	r3, [pc, #36]	; (8000488 <configure_clock+0xa0>)
 8000464:	689b      	ldr	r3, [r3, #8]
 8000466:	f003 030c 	and.w	r3, r3, #12
 800046a:	2b08      	cmp	r3, #8
 800046c:	d1f9      	bne.n	8000462 <configure_clock+0x7a>

	/* Disables HSI (to save power. don't need anymore)  */
	CLEAR_BIT(RCC->CR, RCC_CR_HSION);
 800046e:	4b06      	ldr	r3, [pc, #24]	; (8000488 <configure_clock+0xa0>)
 8000470:	681b      	ldr	r3, [r3, #0]
 8000472:	4a05      	ldr	r2, [pc, #20]	; (8000488 <configure_clock+0xa0>)
 8000474:	f023 0301 	bic.w	r3, r3, #1
 8000478:	6013      	str	r3, [r2, #0]
}
 800047a:	bf00      	nop
 800047c:	46bd      	mov	sp, r7
 800047e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000482:	4770      	bx	lr
 8000484:	40023c00 	.word	0x40023c00
 8000488:	40023800 	.word	0x40023800
 800048c:	f0bc8000 	.word	0xf0bc8000
 8000490:	03401204 	.word	0x03401204

08000494 <SystemInit>:



void SystemInit(void)
{
 8000494:	b580      	push	{r7, lr}
 8000496:	af00      	add	r7, sp, #0
	configure_clock();
 8000498:	f7ff ffa6 	bl	80003e8 <configure_clock>
}
 800049c:	bf00      	nop
 800049e:	bd80      	pop	{r7, pc}

080004a0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80004a0:	480d      	ldr	r0, [pc, #52]	; (80004d8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80004a2:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80004a4:	480d      	ldr	r0, [pc, #52]	; (80004dc <LoopForever+0x6>)
  ldr r1, =_edata
 80004a6:	490e      	ldr	r1, [pc, #56]	; (80004e0 <LoopForever+0xa>)
  ldr r2, =_sidata
 80004a8:	4a0e      	ldr	r2, [pc, #56]	; (80004e4 <LoopForever+0xe>)
  movs r3, #0
 80004aa:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80004ac:	e002      	b.n	80004b4 <LoopCopyDataInit>

080004ae <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80004ae:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80004b0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80004b2:	3304      	adds	r3, #4

080004b4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80004b4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80004b6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004b8:	d3f9      	bcc.n	80004ae <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004ba:	4a0b      	ldr	r2, [pc, #44]	; (80004e8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80004bc:	4c0b      	ldr	r4, [pc, #44]	; (80004ec <LoopForever+0x16>)
  movs r3, #0
 80004be:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004c0:	e001      	b.n	80004c6 <LoopFillZerobss>

080004c2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004c2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80004c4:	3204      	adds	r2, #4

080004c6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80004c6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80004c8:	d3fb      	bcc.n	80004c2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 80004ca:	f7ff ffe3 	bl	8000494 <SystemInit>
/* Call static constructors */
  bl __libc_init_array
 80004ce:	f000 f811 	bl	80004f4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80004d2:	f7ff ff81 	bl	80003d8 <main>

080004d6 <LoopForever>:

LoopForever:
    b LoopForever
 80004d6:	e7fe      	b.n	80004d6 <LoopForever>
  ldr   r0, =_estack
 80004d8:	20030000 	.word	0x20030000
  ldr r0, =_sdata
 80004dc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80004e0:	20000068 	.word	0x20000068
  ldr r2, =_sidata
 80004e4:	08001534 	.word	0x08001534
  ldr r2, =_sbss
 80004e8:	20000068 	.word	0x20000068
  ldr r4, =_ebss
 80004ec:	20000094 	.word	0x20000094

080004f0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80004f0:	e7fe      	b.n	80004f0 <ADC_IRQHandler>
	...

080004f4 <__libc_init_array>:
 80004f4:	b570      	push	{r4, r5, r6, lr}
 80004f6:	4e0d      	ldr	r6, [pc, #52]	; (800052c <__libc_init_array+0x38>)
 80004f8:	4c0d      	ldr	r4, [pc, #52]	; (8000530 <__libc_init_array+0x3c>)
 80004fa:	1ba4      	subs	r4, r4, r6
 80004fc:	10a4      	asrs	r4, r4, #2
 80004fe:	2500      	movs	r5, #0
 8000500:	42a5      	cmp	r5, r4
 8000502:	d109      	bne.n	8000518 <__libc_init_array+0x24>
 8000504:	4e0b      	ldr	r6, [pc, #44]	; (8000534 <__libc_init_array+0x40>)
 8000506:	4c0c      	ldr	r4, [pc, #48]	; (8000538 <__libc_init_array+0x44>)
 8000508:	f000 ff8e 	bl	8001428 <_init>
 800050c:	1ba4      	subs	r4, r4, r6
 800050e:	10a4      	asrs	r4, r4, #2
 8000510:	2500      	movs	r5, #0
 8000512:	42a5      	cmp	r5, r4
 8000514:	d105      	bne.n	8000522 <__libc_init_array+0x2e>
 8000516:	bd70      	pop	{r4, r5, r6, pc}
 8000518:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800051c:	4798      	blx	r3
 800051e:	3501      	adds	r5, #1
 8000520:	e7ee      	b.n	8000500 <__libc_init_array+0xc>
 8000522:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000526:	4798      	blx	r3
 8000528:	3501      	adds	r5, #1
 800052a:	e7f2      	b.n	8000512 <__libc_init_array+0x1e>
 800052c:	0800152c 	.word	0x0800152c
 8000530:	0800152c 	.word	0x0800152c
 8000534:	0800152c 	.word	0x0800152c
 8000538:	08001530 	.word	0x08001530

0800053c <memset>:
 800053c:	4402      	add	r2, r0
 800053e:	4603      	mov	r3, r0
 8000540:	4293      	cmp	r3, r2
 8000542:	d100      	bne.n	8000546 <memset+0xa>
 8000544:	4770      	bx	lr
 8000546:	f803 1b01 	strb.w	r1, [r3], #1
 800054a:	e7f9      	b.n	8000540 <memset+0x4>

0800054c <__sfputc_r>:
 800054c:	6893      	ldr	r3, [r2, #8]
 800054e:	3b01      	subs	r3, #1
 8000550:	2b00      	cmp	r3, #0
 8000552:	b410      	push	{r4}
 8000554:	6093      	str	r3, [r2, #8]
 8000556:	da08      	bge.n	800056a <__sfputc_r+0x1e>
 8000558:	6994      	ldr	r4, [r2, #24]
 800055a:	42a3      	cmp	r3, r4
 800055c:	db01      	blt.n	8000562 <__sfputc_r+0x16>
 800055e:	290a      	cmp	r1, #10
 8000560:	d103      	bne.n	800056a <__sfputc_r+0x1e>
 8000562:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000566:	f000 baef 	b.w	8000b48 <__swbuf_r>
 800056a:	6813      	ldr	r3, [r2, #0]
 800056c:	1c58      	adds	r0, r3, #1
 800056e:	6010      	str	r0, [r2, #0]
 8000570:	7019      	strb	r1, [r3, #0]
 8000572:	4608      	mov	r0, r1
 8000574:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000578:	4770      	bx	lr

0800057a <__sfputs_r>:
 800057a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800057c:	4606      	mov	r6, r0
 800057e:	460f      	mov	r7, r1
 8000580:	4614      	mov	r4, r2
 8000582:	18d5      	adds	r5, r2, r3
 8000584:	42ac      	cmp	r4, r5
 8000586:	d101      	bne.n	800058c <__sfputs_r+0x12>
 8000588:	2000      	movs	r0, #0
 800058a:	e007      	b.n	800059c <__sfputs_r+0x22>
 800058c:	463a      	mov	r2, r7
 800058e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000592:	4630      	mov	r0, r6
 8000594:	f7ff ffda 	bl	800054c <__sfputc_r>
 8000598:	1c43      	adds	r3, r0, #1
 800059a:	d1f3      	bne.n	8000584 <__sfputs_r+0xa>
 800059c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080005a0 <_vfiprintf_r>:
 80005a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80005a4:	460c      	mov	r4, r1
 80005a6:	b09d      	sub	sp, #116	; 0x74
 80005a8:	4617      	mov	r7, r2
 80005aa:	461d      	mov	r5, r3
 80005ac:	4606      	mov	r6, r0
 80005ae:	b118      	cbz	r0, 80005b8 <_vfiprintf_r+0x18>
 80005b0:	6983      	ldr	r3, [r0, #24]
 80005b2:	b90b      	cbnz	r3, 80005b8 <_vfiprintf_r+0x18>
 80005b4:	f000 fc78 	bl	8000ea8 <__sinit>
 80005b8:	4b7c      	ldr	r3, [pc, #496]	; (80007ac <_vfiprintf_r+0x20c>)
 80005ba:	429c      	cmp	r4, r3
 80005bc:	d158      	bne.n	8000670 <_vfiprintf_r+0xd0>
 80005be:	6874      	ldr	r4, [r6, #4]
 80005c0:	89a3      	ldrh	r3, [r4, #12]
 80005c2:	0718      	lsls	r0, r3, #28
 80005c4:	d55e      	bpl.n	8000684 <_vfiprintf_r+0xe4>
 80005c6:	6923      	ldr	r3, [r4, #16]
 80005c8:	2b00      	cmp	r3, #0
 80005ca:	d05b      	beq.n	8000684 <_vfiprintf_r+0xe4>
 80005cc:	2300      	movs	r3, #0
 80005ce:	9309      	str	r3, [sp, #36]	; 0x24
 80005d0:	2320      	movs	r3, #32
 80005d2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80005d6:	2330      	movs	r3, #48	; 0x30
 80005d8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80005dc:	9503      	str	r5, [sp, #12]
 80005de:	f04f 0b01 	mov.w	fp, #1
 80005e2:	46b8      	mov	r8, r7
 80005e4:	4645      	mov	r5, r8
 80005e6:	f815 3b01 	ldrb.w	r3, [r5], #1
 80005ea:	b10b      	cbz	r3, 80005f0 <_vfiprintf_r+0x50>
 80005ec:	2b25      	cmp	r3, #37	; 0x25
 80005ee:	d154      	bne.n	800069a <_vfiprintf_r+0xfa>
 80005f0:	ebb8 0a07 	subs.w	sl, r8, r7
 80005f4:	d00b      	beq.n	800060e <_vfiprintf_r+0x6e>
 80005f6:	4653      	mov	r3, sl
 80005f8:	463a      	mov	r2, r7
 80005fa:	4621      	mov	r1, r4
 80005fc:	4630      	mov	r0, r6
 80005fe:	f7ff ffbc 	bl	800057a <__sfputs_r>
 8000602:	3001      	adds	r0, #1
 8000604:	f000 80c2 	beq.w	800078c <_vfiprintf_r+0x1ec>
 8000608:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800060a:	4453      	add	r3, sl
 800060c:	9309      	str	r3, [sp, #36]	; 0x24
 800060e:	f898 3000 	ldrb.w	r3, [r8]
 8000612:	2b00      	cmp	r3, #0
 8000614:	f000 80ba 	beq.w	800078c <_vfiprintf_r+0x1ec>
 8000618:	2300      	movs	r3, #0
 800061a:	f04f 32ff 	mov.w	r2, #4294967295
 800061e:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000622:	9304      	str	r3, [sp, #16]
 8000624:	9307      	str	r3, [sp, #28]
 8000626:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800062a:	931a      	str	r3, [sp, #104]	; 0x68
 800062c:	46a8      	mov	r8, r5
 800062e:	2205      	movs	r2, #5
 8000630:	f818 1b01 	ldrb.w	r1, [r8], #1
 8000634:	485e      	ldr	r0, [pc, #376]	; (80007b0 <_vfiprintf_r+0x210>)
 8000636:	f7ff fddb 	bl	80001f0 <memchr>
 800063a:	9b04      	ldr	r3, [sp, #16]
 800063c:	bb78      	cbnz	r0, 800069e <_vfiprintf_r+0xfe>
 800063e:	06d9      	lsls	r1, r3, #27
 8000640:	bf44      	itt	mi
 8000642:	2220      	movmi	r2, #32
 8000644:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000648:	071a      	lsls	r2, r3, #28
 800064a:	bf44      	itt	mi
 800064c:	222b      	movmi	r2, #43	; 0x2b
 800064e:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000652:	782a      	ldrb	r2, [r5, #0]
 8000654:	2a2a      	cmp	r2, #42	; 0x2a
 8000656:	d02a      	beq.n	80006ae <_vfiprintf_r+0x10e>
 8000658:	9a07      	ldr	r2, [sp, #28]
 800065a:	46a8      	mov	r8, r5
 800065c:	2000      	movs	r0, #0
 800065e:	250a      	movs	r5, #10
 8000660:	4641      	mov	r1, r8
 8000662:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000666:	3b30      	subs	r3, #48	; 0x30
 8000668:	2b09      	cmp	r3, #9
 800066a:	d969      	bls.n	8000740 <_vfiprintf_r+0x1a0>
 800066c:	b360      	cbz	r0, 80006c8 <_vfiprintf_r+0x128>
 800066e:	e024      	b.n	80006ba <_vfiprintf_r+0x11a>
 8000670:	4b50      	ldr	r3, [pc, #320]	; (80007b4 <_vfiprintf_r+0x214>)
 8000672:	429c      	cmp	r4, r3
 8000674:	d101      	bne.n	800067a <_vfiprintf_r+0xda>
 8000676:	68b4      	ldr	r4, [r6, #8]
 8000678:	e7a2      	b.n	80005c0 <_vfiprintf_r+0x20>
 800067a:	4b4f      	ldr	r3, [pc, #316]	; (80007b8 <_vfiprintf_r+0x218>)
 800067c:	429c      	cmp	r4, r3
 800067e:	bf08      	it	eq
 8000680:	68f4      	ldreq	r4, [r6, #12]
 8000682:	e79d      	b.n	80005c0 <_vfiprintf_r+0x20>
 8000684:	4621      	mov	r1, r4
 8000686:	4630      	mov	r0, r6
 8000688:	f000 fab0 	bl	8000bec <__swsetup_r>
 800068c:	2800      	cmp	r0, #0
 800068e:	d09d      	beq.n	80005cc <_vfiprintf_r+0x2c>
 8000690:	f04f 30ff 	mov.w	r0, #4294967295
 8000694:	b01d      	add	sp, #116	; 0x74
 8000696:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800069a:	46a8      	mov	r8, r5
 800069c:	e7a2      	b.n	80005e4 <_vfiprintf_r+0x44>
 800069e:	4a44      	ldr	r2, [pc, #272]	; (80007b0 <_vfiprintf_r+0x210>)
 80006a0:	1a80      	subs	r0, r0, r2
 80006a2:	fa0b f000 	lsl.w	r0, fp, r0
 80006a6:	4318      	orrs	r0, r3
 80006a8:	9004      	str	r0, [sp, #16]
 80006aa:	4645      	mov	r5, r8
 80006ac:	e7be      	b.n	800062c <_vfiprintf_r+0x8c>
 80006ae:	9a03      	ldr	r2, [sp, #12]
 80006b0:	1d11      	adds	r1, r2, #4
 80006b2:	6812      	ldr	r2, [r2, #0]
 80006b4:	9103      	str	r1, [sp, #12]
 80006b6:	2a00      	cmp	r2, #0
 80006b8:	db01      	blt.n	80006be <_vfiprintf_r+0x11e>
 80006ba:	9207      	str	r2, [sp, #28]
 80006bc:	e004      	b.n	80006c8 <_vfiprintf_r+0x128>
 80006be:	4252      	negs	r2, r2
 80006c0:	f043 0302 	orr.w	r3, r3, #2
 80006c4:	9207      	str	r2, [sp, #28]
 80006c6:	9304      	str	r3, [sp, #16]
 80006c8:	f898 3000 	ldrb.w	r3, [r8]
 80006cc:	2b2e      	cmp	r3, #46	; 0x2e
 80006ce:	d10e      	bne.n	80006ee <_vfiprintf_r+0x14e>
 80006d0:	f898 3001 	ldrb.w	r3, [r8, #1]
 80006d4:	2b2a      	cmp	r3, #42	; 0x2a
 80006d6:	d138      	bne.n	800074a <_vfiprintf_r+0x1aa>
 80006d8:	9b03      	ldr	r3, [sp, #12]
 80006da:	1d1a      	adds	r2, r3, #4
 80006dc:	681b      	ldr	r3, [r3, #0]
 80006de:	9203      	str	r2, [sp, #12]
 80006e0:	2b00      	cmp	r3, #0
 80006e2:	bfb8      	it	lt
 80006e4:	f04f 33ff 	movlt.w	r3, #4294967295
 80006e8:	f108 0802 	add.w	r8, r8, #2
 80006ec:	9305      	str	r3, [sp, #20]
 80006ee:	4d33      	ldr	r5, [pc, #204]	; (80007bc <_vfiprintf_r+0x21c>)
 80006f0:	f898 1000 	ldrb.w	r1, [r8]
 80006f4:	2203      	movs	r2, #3
 80006f6:	4628      	mov	r0, r5
 80006f8:	f7ff fd7a 	bl	80001f0 <memchr>
 80006fc:	b140      	cbz	r0, 8000710 <_vfiprintf_r+0x170>
 80006fe:	2340      	movs	r3, #64	; 0x40
 8000700:	1b40      	subs	r0, r0, r5
 8000702:	fa03 f000 	lsl.w	r0, r3, r0
 8000706:	9b04      	ldr	r3, [sp, #16]
 8000708:	4303      	orrs	r3, r0
 800070a:	f108 0801 	add.w	r8, r8, #1
 800070e:	9304      	str	r3, [sp, #16]
 8000710:	f898 1000 	ldrb.w	r1, [r8]
 8000714:	482a      	ldr	r0, [pc, #168]	; (80007c0 <_vfiprintf_r+0x220>)
 8000716:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800071a:	2206      	movs	r2, #6
 800071c:	f108 0701 	add.w	r7, r8, #1
 8000720:	f7ff fd66 	bl	80001f0 <memchr>
 8000724:	2800      	cmp	r0, #0
 8000726:	d037      	beq.n	8000798 <_vfiprintf_r+0x1f8>
 8000728:	4b26      	ldr	r3, [pc, #152]	; (80007c4 <_vfiprintf_r+0x224>)
 800072a:	bb1b      	cbnz	r3, 8000774 <_vfiprintf_r+0x1d4>
 800072c:	9b03      	ldr	r3, [sp, #12]
 800072e:	3307      	adds	r3, #7
 8000730:	f023 0307 	bic.w	r3, r3, #7
 8000734:	3308      	adds	r3, #8
 8000736:	9303      	str	r3, [sp, #12]
 8000738:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800073a:	444b      	add	r3, r9
 800073c:	9309      	str	r3, [sp, #36]	; 0x24
 800073e:	e750      	b.n	80005e2 <_vfiprintf_r+0x42>
 8000740:	fb05 3202 	mla	r2, r5, r2, r3
 8000744:	2001      	movs	r0, #1
 8000746:	4688      	mov	r8, r1
 8000748:	e78a      	b.n	8000660 <_vfiprintf_r+0xc0>
 800074a:	2300      	movs	r3, #0
 800074c:	f108 0801 	add.w	r8, r8, #1
 8000750:	9305      	str	r3, [sp, #20]
 8000752:	4619      	mov	r1, r3
 8000754:	250a      	movs	r5, #10
 8000756:	4640      	mov	r0, r8
 8000758:	f810 2b01 	ldrb.w	r2, [r0], #1
 800075c:	3a30      	subs	r2, #48	; 0x30
 800075e:	2a09      	cmp	r2, #9
 8000760:	d903      	bls.n	800076a <_vfiprintf_r+0x1ca>
 8000762:	2b00      	cmp	r3, #0
 8000764:	d0c3      	beq.n	80006ee <_vfiprintf_r+0x14e>
 8000766:	9105      	str	r1, [sp, #20]
 8000768:	e7c1      	b.n	80006ee <_vfiprintf_r+0x14e>
 800076a:	fb05 2101 	mla	r1, r5, r1, r2
 800076e:	2301      	movs	r3, #1
 8000770:	4680      	mov	r8, r0
 8000772:	e7f0      	b.n	8000756 <_vfiprintf_r+0x1b6>
 8000774:	ab03      	add	r3, sp, #12
 8000776:	9300      	str	r3, [sp, #0]
 8000778:	4622      	mov	r2, r4
 800077a:	4b13      	ldr	r3, [pc, #76]	; (80007c8 <_vfiprintf_r+0x228>)
 800077c:	a904      	add	r1, sp, #16
 800077e:	4630      	mov	r0, r6
 8000780:	f3af 8000 	nop.w
 8000784:	f1b0 3fff 	cmp.w	r0, #4294967295
 8000788:	4681      	mov	r9, r0
 800078a:	d1d5      	bne.n	8000738 <_vfiprintf_r+0x198>
 800078c:	89a3      	ldrh	r3, [r4, #12]
 800078e:	065b      	lsls	r3, r3, #25
 8000790:	f53f af7e 	bmi.w	8000690 <_vfiprintf_r+0xf0>
 8000794:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000796:	e77d      	b.n	8000694 <_vfiprintf_r+0xf4>
 8000798:	ab03      	add	r3, sp, #12
 800079a:	9300      	str	r3, [sp, #0]
 800079c:	4622      	mov	r2, r4
 800079e:	4b0a      	ldr	r3, [pc, #40]	; (80007c8 <_vfiprintf_r+0x228>)
 80007a0:	a904      	add	r1, sp, #16
 80007a2:	4630      	mov	r0, r6
 80007a4:	f000 f892 	bl	80008cc <_printf_i>
 80007a8:	e7ec      	b.n	8000784 <_vfiprintf_r+0x1e4>
 80007aa:	bf00      	nop
 80007ac:	080014ec 	.word	0x080014ec
 80007b0:	08001498 	.word	0x08001498
 80007b4:	0800150c 	.word	0x0800150c
 80007b8:	080014cc 	.word	0x080014cc
 80007bc:	0800149e 	.word	0x0800149e
 80007c0:	080014a2 	.word	0x080014a2
 80007c4:	00000000 	.word	0x00000000
 80007c8:	0800057b 	.word	0x0800057b

080007cc <vfiprintf>:
 80007cc:	4613      	mov	r3, r2
 80007ce:	460a      	mov	r2, r1
 80007d0:	4601      	mov	r1, r0
 80007d2:	4802      	ldr	r0, [pc, #8]	; (80007dc <vfiprintf+0x10>)
 80007d4:	6800      	ldr	r0, [r0, #0]
 80007d6:	f7ff bee3 	b.w	80005a0 <_vfiprintf_r>
 80007da:	bf00      	nop
 80007dc:	20000004 	.word	0x20000004

080007e0 <_printf_common>:
 80007e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80007e4:	4691      	mov	r9, r2
 80007e6:	461f      	mov	r7, r3
 80007e8:	688a      	ldr	r2, [r1, #8]
 80007ea:	690b      	ldr	r3, [r1, #16]
 80007ec:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80007f0:	4293      	cmp	r3, r2
 80007f2:	bfb8      	it	lt
 80007f4:	4613      	movlt	r3, r2
 80007f6:	f8c9 3000 	str.w	r3, [r9]
 80007fa:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80007fe:	4606      	mov	r6, r0
 8000800:	460c      	mov	r4, r1
 8000802:	b112      	cbz	r2, 800080a <_printf_common+0x2a>
 8000804:	3301      	adds	r3, #1
 8000806:	f8c9 3000 	str.w	r3, [r9]
 800080a:	6823      	ldr	r3, [r4, #0]
 800080c:	0699      	lsls	r1, r3, #26
 800080e:	bf42      	ittt	mi
 8000810:	f8d9 3000 	ldrmi.w	r3, [r9]
 8000814:	3302      	addmi	r3, #2
 8000816:	f8c9 3000 	strmi.w	r3, [r9]
 800081a:	6825      	ldr	r5, [r4, #0]
 800081c:	f015 0506 	ands.w	r5, r5, #6
 8000820:	d107      	bne.n	8000832 <_printf_common+0x52>
 8000822:	f104 0a19 	add.w	sl, r4, #25
 8000826:	68e3      	ldr	r3, [r4, #12]
 8000828:	f8d9 2000 	ldr.w	r2, [r9]
 800082c:	1a9b      	subs	r3, r3, r2
 800082e:	42ab      	cmp	r3, r5
 8000830:	dc28      	bgt.n	8000884 <_printf_common+0xa4>
 8000832:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8000836:	6822      	ldr	r2, [r4, #0]
 8000838:	3300      	adds	r3, #0
 800083a:	bf18      	it	ne
 800083c:	2301      	movne	r3, #1
 800083e:	0692      	lsls	r2, r2, #26
 8000840:	d42d      	bmi.n	800089e <_printf_common+0xbe>
 8000842:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000846:	4639      	mov	r1, r7
 8000848:	4630      	mov	r0, r6
 800084a:	47c0      	blx	r8
 800084c:	3001      	adds	r0, #1
 800084e:	d020      	beq.n	8000892 <_printf_common+0xb2>
 8000850:	6823      	ldr	r3, [r4, #0]
 8000852:	68e5      	ldr	r5, [r4, #12]
 8000854:	f8d9 2000 	ldr.w	r2, [r9]
 8000858:	f003 0306 	and.w	r3, r3, #6
 800085c:	2b04      	cmp	r3, #4
 800085e:	bf08      	it	eq
 8000860:	1aad      	subeq	r5, r5, r2
 8000862:	68a3      	ldr	r3, [r4, #8]
 8000864:	6922      	ldr	r2, [r4, #16]
 8000866:	bf0c      	ite	eq
 8000868:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800086c:	2500      	movne	r5, #0
 800086e:	4293      	cmp	r3, r2
 8000870:	bfc4      	itt	gt
 8000872:	1a9b      	subgt	r3, r3, r2
 8000874:	18ed      	addgt	r5, r5, r3
 8000876:	f04f 0900 	mov.w	r9, #0
 800087a:	341a      	adds	r4, #26
 800087c:	454d      	cmp	r5, r9
 800087e:	d11a      	bne.n	80008b6 <_printf_common+0xd6>
 8000880:	2000      	movs	r0, #0
 8000882:	e008      	b.n	8000896 <_printf_common+0xb6>
 8000884:	2301      	movs	r3, #1
 8000886:	4652      	mov	r2, sl
 8000888:	4639      	mov	r1, r7
 800088a:	4630      	mov	r0, r6
 800088c:	47c0      	blx	r8
 800088e:	3001      	adds	r0, #1
 8000890:	d103      	bne.n	800089a <_printf_common+0xba>
 8000892:	f04f 30ff 	mov.w	r0, #4294967295
 8000896:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800089a:	3501      	adds	r5, #1
 800089c:	e7c3      	b.n	8000826 <_printf_common+0x46>
 800089e:	18e1      	adds	r1, r4, r3
 80008a0:	1c5a      	adds	r2, r3, #1
 80008a2:	2030      	movs	r0, #48	; 0x30
 80008a4:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80008a8:	4422      	add	r2, r4
 80008aa:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80008ae:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80008b2:	3302      	adds	r3, #2
 80008b4:	e7c5      	b.n	8000842 <_printf_common+0x62>
 80008b6:	2301      	movs	r3, #1
 80008b8:	4622      	mov	r2, r4
 80008ba:	4639      	mov	r1, r7
 80008bc:	4630      	mov	r0, r6
 80008be:	47c0      	blx	r8
 80008c0:	3001      	adds	r0, #1
 80008c2:	d0e6      	beq.n	8000892 <_printf_common+0xb2>
 80008c4:	f109 0901 	add.w	r9, r9, #1
 80008c8:	e7d8      	b.n	800087c <_printf_common+0x9c>
	...

080008cc <_printf_i>:
 80008cc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80008d0:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 80008d4:	460c      	mov	r4, r1
 80008d6:	7e09      	ldrb	r1, [r1, #24]
 80008d8:	b085      	sub	sp, #20
 80008da:	296e      	cmp	r1, #110	; 0x6e
 80008dc:	4617      	mov	r7, r2
 80008de:	4606      	mov	r6, r0
 80008e0:	4698      	mov	r8, r3
 80008e2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80008e4:	f000 80b3 	beq.w	8000a4e <_printf_i+0x182>
 80008e8:	d822      	bhi.n	8000930 <_printf_i+0x64>
 80008ea:	2963      	cmp	r1, #99	; 0x63
 80008ec:	d036      	beq.n	800095c <_printf_i+0x90>
 80008ee:	d80a      	bhi.n	8000906 <_printf_i+0x3a>
 80008f0:	2900      	cmp	r1, #0
 80008f2:	f000 80b9 	beq.w	8000a68 <_printf_i+0x19c>
 80008f6:	2958      	cmp	r1, #88	; 0x58
 80008f8:	f000 8083 	beq.w	8000a02 <_printf_i+0x136>
 80008fc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000900:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8000904:	e032      	b.n	800096c <_printf_i+0xa0>
 8000906:	2964      	cmp	r1, #100	; 0x64
 8000908:	d001      	beq.n	800090e <_printf_i+0x42>
 800090a:	2969      	cmp	r1, #105	; 0x69
 800090c:	d1f6      	bne.n	80008fc <_printf_i+0x30>
 800090e:	6820      	ldr	r0, [r4, #0]
 8000910:	6813      	ldr	r3, [r2, #0]
 8000912:	0605      	lsls	r5, r0, #24
 8000914:	f103 0104 	add.w	r1, r3, #4
 8000918:	d52a      	bpl.n	8000970 <_printf_i+0xa4>
 800091a:	681b      	ldr	r3, [r3, #0]
 800091c:	6011      	str	r1, [r2, #0]
 800091e:	2b00      	cmp	r3, #0
 8000920:	da03      	bge.n	800092a <_printf_i+0x5e>
 8000922:	222d      	movs	r2, #45	; 0x2d
 8000924:	425b      	negs	r3, r3
 8000926:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 800092a:	486f      	ldr	r0, [pc, #444]	; (8000ae8 <_printf_i+0x21c>)
 800092c:	220a      	movs	r2, #10
 800092e:	e039      	b.n	80009a4 <_printf_i+0xd8>
 8000930:	2973      	cmp	r1, #115	; 0x73
 8000932:	f000 809d 	beq.w	8000a70 <_printf_i+0x1a4>
 8000936:	d808      	bhi.n	800094a <_printf_i+0x7e>
 8000938:	296f      	cmp	r1, #111	; 0x6f
 800093a:	d020      	beq.n	800097e <_printf_i+0xb2>
 800093c:	2970      	cmp	r1, #112	; 0x70
 800093e:	d1dd      	bne.n	80008fc <_printf_i+0x30>
 8000940:	6823      	ldr	r3, [r4, #0]
 8000942:	f043 0320 	orr.w	r3, r3, #32
 8000946:	6023      	str	r3, [r4, #0]
 8000948:	e003      	b.n	8000952 <_printf_i+0x86>
 800094a:	2975      	cmp	r1, #117	; 0x75
 800094c:	d017      	beq.n	800097e <_printf_i+0xb2>
 800094e:	2978      	cmp	r1, #120	; 0x78
 8000950:	d1d4      	bne.n	80008fc <_printf_i+0x30>
 8000952:	2378      	movs	r3, #120	; 0x78
 8000954:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000958:	4864      	ldr	r0, [pc, #400]	; (8000aec <_printf_i+0x220>)
 800095a:	e055      	b.n	8000a08 <_printf_i+0x13c>
 800095c:	6813      	ldr	r3, [r2, #0]
 800095e:	1d19      	adds	r1, r3, #4
 8000960:	681b      	ldr	r3, [r3, #0]
 8000962:	6011      	str	r1, [r2, #0]
 8000964:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000968:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800096c:	2301      	movs	r3, #1
 800096e:	e08c      	b.n	8000a8a <_printf_i+0x1be>
 8000970:	681b      	ldr	r3, [r3, #0]
 8000972:	6011      	str	r1, [r2, #0]
 8000974:	f010 0f40 	tst.w	r0, #64	; 0x40
 8000978:	bf18      	it	ne
 800097a:	b21b      	sxthne	r3, r3
 800097c:	e7cf      	b.n	800091e <_printf_i+0x52>
 800097e:	6813      	ldr	r3, [r2, #0]
 8000980:	6825      	ldr	r5, [r4, #0]
 8000982:	1d18      	adds	r0, r3, #4
 8000984:	6010      	str	r0, [r2, #0]
 8000986:	0628      	lsls	r0, r5, #24
 8000988:	d501      	bpl.n	800098e <_printf_i+0xc2>
 800098a:	681b      	ldr	r3, [r3, #0]
 800098c:	e002      	b.n	8000994 <_printf_i+0xc8>
 800098e:	0668      	lsls	r0, r5, #25
 8000990:	d5fb      	bpl.n	800098a <_printf_i+0xbe>
 8000992:	881b      	ldrh	r3, [r3, #0]
 8000994:	4854      	ldr	r0, [pc, #336]	; (8000ae8 <_printf_i+0x21c>)
 8000996:	296f      	cmp	r1, #111	; 0x6f
 8000998:	bf14      	ite	ne
 800099a:	220a      	movne	r2, #10
 800099c:	2208      	moveq	r2, #8
 800099e:	2100      	movs	r1, #0
 80009a0:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80009a4:	6865      	ldr	r5, [r4, #4]
 80009a6:	60a5      	str	r5, [r4, #8]
 80009a8:	2d00      	cmp	r5, #0
 80009aa:	f2c0 8095 	blt.w	8000ad8 <_printf_i+0x20c>
 80009ae:	6821      	ldr	r1, [r4, #0]
 80009b0:	f021 0104 	bic.w	r1, r1, #4
 80009b4:	6021      	str	r1, [r4, #0]
 80009b6:	2b00      	cmp	r3, #0
 80009b8:	d13d      	bne.n	8000a36 <_printf_i+0x16a>
 80009ba:	2d00      	cmp	r5, #0
 80009bc:	f040 808e 	bne.w	8000adc <_printf_i+0x210>
 80009c0:	4665      	mov	r5, ip
 80009c2:	2a08      	cmp	r2, #8
 80009c4:	d10b      	bne.n	80009de <_printf_i+0x112>
 80009c6:	6823      	ldr	r3, [r4, #0]
 80009c8:	07db      	lsls	r3, r3, #31
 80009ca:	d508      	bpl.n	80009de <_printf_i+0x112>
 80009cc:	6923      	ldr	r3, [r4, #16]
 80009ce:	6862      	ldr	r2, [r4, #4]
 80009d0:	429a      	cmp	r2, r3
 80009d2:	bfde      	ittt	le
 80009d4:	2330      	movle	r3, #48	; 0x30
 80009d6:	f805 3c01 	strble.w	r3, [r5, #-1]
 80009da:	f105 35ff 	addle.w	r5, r5, #4294967295
 80009de:	ebac 0305 	sub.w	r3, ip, r5
 80009e2:	6123      	str	r3, [r4, #16]
 80009e4:	f8cd 8000 	str.w	r8, [sp]
 80009e8:	463b      	mov	r3, r7
 80009ea:	aa03      	add	r2, sp, #12
 80009ec:	4621      	mov	r1, r4
 80009ee:	4630      	mov	r0, r6
 80009f0:	f7ff fef6 	bl	80007e0 <_printf_common>
 80009f4:	3001      	adds	r0, #1
 80009f6:	d14d      	bne.n	8000a94 <_printf_i+0x1c8>
 80009f8:	f04f 30ff 	mov.w	r0, #4294967295
 80009fc:	b005      	add	sp, #20
 80009fe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8000a02:	4839      	ldr	r0, [pc, #228]	; (8000ae8 <_printf_i+0x21c>)
 8000a04:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8000a08:	6813      	ldr	r3, [r2, #0]
 8000a0a:	6821      	ldr	r1, [r4, #0]
 8000a0c:	1d1d      	adds	r5, r3, #4
 8000a0e:	681b      	ldr	r3, [r3, #0]
 8000a10:	6015      	str	r5, [r2, #0]
 8000a12:	060a      	lsls	r2, r1, #24
 8000a14:	d50b      	bpl.n	8000a2e <_printf_i+0x162>
 8000a16:	07ca      	lsls	r2, r1, #31
 8000a18:	bf44      	itt	mi
 8000a1a:	f041 0120 	orrmi.w	r1, r1, #32
 8000a1e:	6021      	strmi	r1, [r4, #0]
 8000a20:	b91b      	cbnz	r3, 8000a2a <_printf_i+0x15e>
 8000a22:	6822      	ldr	r2, [r4, #0]
 8000a24:	f022 0220 	bic.w	r2, r2, #32
 8000a28:	6022      	str	r2, [r4, #0]
 8000a2a:	2210      	movs	r2, #16
 8000a2c:	e7b7      	b.n	800099e <_printf_i+0xd2>
 8000a2e:	064d      	lsls	r5, r1, #25
 8000a30:	bf48      	it	mi
 8000a32:	b29b      	uxthmi	r3, r3
 8000a34:	e7ef      	b.n	8000a16 <_printf_i+0x14a>
 8000a36:	4665      	mov	r5, ip
 8000a38:	fbb3 f1f2 	udiv	r1, r3, r2
 8000a3c:	fb02 3311 	mls	r3, r2, r1, r3
 8000a40:	5cc3      	ldrb	r3, [r0, r3]
 8000a42:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8000a46:	460b      	mov	r3, r1
 8000a48:	2900      	cmp	r1, #0
 8000a4a:	d1f5      	bne.n	8000a38 <_printf_i+0x16c>
 8000a4c:	e7b9      	b.n	80009c2 <_printf_i+0xf6>
 8000a4e:	6813      	ldr	r3, [r2, #0]
 8000a50:	6825      	ldr	r5, [r4, #0]
 8000a52:	6961      	ldr	r1, [r4, #20]
 8000a54:	1d18      	adds	r0, r3, #4
 8000a56:	6010      	str	r0, [r2, #0]
 8000a58:	0628      	lsls	r0, r5, #24
 8000a5a:	681b      	ldr	r3, [r3, #0]
 8000a5c:	d501      	bpl.n	8000a62 <_printf_i+0x196>
 8000a5e:	6019      	str	r1, [r3, #0]
 8000a60:	e002      	b.n	8000a68 <_printf_i+0x19c>
 8000a62:	066a      	lsls	r2, r5, #25
 8000a64:	d5fb      	bpl.n	8000a5e <_printf_i+0x192>
 8000a66:	8019      	strh	r1, [r3, #0]
 8000a68:	2300      	movs	r3, #0
 8000a6a:	6123      	str	r3, [r4, #16]
 8000a6c:	4665      	mov	r5, ip
 8000a6e:	e7b9      	b.n	80009e4 <_printf_i+0x118>
 8000a70:	6813      	ldr	r3, [r2, #0]
 8000a72:	1d19      	adds	r1, r3, #4
 8000a74:	6011      	str	r1, [r2, #0]
 8000a76:	681d      	ldr	r5, [r3, #0]
 8000a78:	6862      	ldr	r2, [r4, #4]
 8000a7a:	2100      	movs	r1, #0
 8000a7c:	4628      	mov	r0, r5
 8000a7e:	f7ff fbb7 	bl	80001f0 <memchr>
 8000a82:	b108      	cbz	r0, 8000a88 <_printf_i+0x1bc>
 8000a84:	1b40      	subs	r0, r0, r5
 8000a86:	6060      	str	r0, [r4, #4]
 8000a88:	6863      	ldr	r3, [r4, #4]
 8000a8a:	6123      	str	r3, [r4, #16]
 8000a8c:	2300      	movs	r3, #0
 8000a8e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000a92:	e7a7      	b.n	80009e4 <_printf_i+0x118>
 8000a94:	6923      	ldr	r3, [r4, #16]
 8000a96:	462a      	mov	r2, r5
 8000a98:	4639      	mov	r1, r7
 8000a9a:	4630      	mov	r0, r6
 8000a9c:	47c0      	blx	r8
 8000a9e:	3001      	adds	r0, #1
 8000aa0:	d0aa      	beq.n	80009f8 <_printf_i+0x12c>
 8000aa2:	6823      	ldr	r3, [r4, #0]
 8000aa4:	079b      	lsls	r3, r3, #30
 8000aa6:	d413      	bmi.n	8000ad0 <_printf_i+0x204>
 8000aa8:	68e0      	ldr	r0, [r4, #12]
 8000aaa:	9b03      	ldr	r3, [sp, #12]
 8000aac:	4298      	cmp	r0, r3
 8000aae:	bfb8      	it	lt
 8000ab0:	4618      	movlt	r0, r3
 8000ab2:	e7a3      	b.n	80009fc <_printf_i+0x130>
 8000ab4:	2301      	movs	r3, #1
 8000ab6:	464a      	mov	r2, r9
 8000ab8:	4639      	mov	r1, r7
 8000aba:	4630      	mov	r0, r6
 8000abc:	47c0      	blx	r8
 8000abe:	3001      	adds	r0, #1
 8000ac0:	d09a      	beq.n	80009f8 <_printf_i+0x12c>
 8000ac2:	3501      	adds	r5, #1
 8000ac4:	68e3      	ldr	r3, [r4, #12]
 8000ac6:	9a03      	ldr	r2, [sp, #12]
 8000ac8:	1a9b      	subs	r3, r3, r2
 8000aca:	42ab      	cmp	r3, r5
 8000acc:	dcf2      	bgt.n	8000ab4 <_printf_i+0x1e8>
 8000ace:	e7eb      	b.n	8000aa8 <_printf_i+0x1dc>
 8000ad0:	2500      	movs	r5, #0
 8000ad2:	f104 0919 	add.w	r9, r4, #25
 8000ad6:	e7f5      	b.n	8000ac4 <_printf_i+0x1f8>
 8000ad8:	2b00      	cmp	r3, #0
 8000ada:	d1ac      	bne.n	8000a36 <_printf_i+0x16a>
 8000adc:	7803      	ldrb	r3, [r0, #0]
 8000ade:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000ae2:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000ae6:	e76c      	b.n	80009c2 <_printf_i+0xf6>
 8000ae8:	080014a9 	.word	0x080014a9
 8000aec:	080014ba 	.word	0x080014ba

08000af0 <iprintf>:
 8000af0:	b40f      	push	{r0, r1, r2, r3}
 8000af2:	4b0a      	ldr	r3, [pc, #40]	; (8000b1c <iprintf+0x2c>)
 8000af4:	b513      	push	{r0, r1, r4, lr}
 8000af6:	681c      	ldr	r4, [r3, #0]
 8000af8:	b124      	cbz	r4, 8000b04 <iprintf+0x14>
 8000afa:	69a3      	ldr	r3, [r4, #24]
 8000afc:	b913      	cbnz	r3, 8000b04 <iprintf+0x14>
 8000afe:	4620      	mov	r0, r4
 8000b00:	f000 f9d2 	bl	8000ea8 <__sinit>
 8000b04:	ab05      	add	r3, sp, #20
 8000b06:	9a04      	ldr	r2, [sp, #16]
 8000b08:	68a1      	ldr	r1, [r4, #8]
 8000b0a:	9301      	str	r3, [sp, #4]
 8000b0c:	4620      	mov	r0, r4
 8000b0e:	f7ff fd47 	bl	80005a0 <_vfiprintf_r>
 8000b12:	b002      	add	sp, #8
 8000b14:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000b18:	b004      	add	sp, #16
 8000b1a:	4770      	bx	lr
 8000b1c:	20000004 	.word	0x20000004

08000b20 <putchar>:
 8000b20:	b538      	push	{r3, r4, r5, lr}
 8000b22:	4b08      	ldr	r3, [pc, #32]	; (8000b44 <putchar+0x24>)
 8000b24:	681c      	ldr	r4, [r3, #0]
 8000b26:	4605      	mov	r5, r0
 8000b28:	b124      	cbz	r4, 8000b34 <putchar+0x14>
 8000b2a:	69a3      	ldr	r3, [r4, #24]
 8000b2c:	b913      	cbnz	r3, 8000b34 <putchar+0x14>
 8000b2e:	4620      	mov	r0, r4
 8000b30:	f000 f9ba 	bl	8000ea8 <__sinit>
 8000b34:	68a2      	ldr	r2, [r4, #8]
 8000b36:	4629      	mov	r1, r5
 8000b38:	4620      	mov	r0, r4
 8000b3a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000b3e:	f000 bb49 	b.w	80011d4 <_putc_r>
 8000b42:	bf00      	nop
 8000b44:	20000004 	.word	0x20000004

08000b48 <__swbuf_r>:
 8000b48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b4a:	460e      	mov	r6, r1
 8000b4c:	4614      	mov	r4, r2
 8000b4e:	4605      	mov	r5, r0
 8000b50:	b118      	cbz	r0, 8000b5a <__swbuf_r+0x12>
 8000b52:	6983      	ldr	r3, [r0, #24]
 8000b54:	b90b      	cbnz	r3, 8000b5a <__swbuf_r+0x12>
 8000b56:	f000 f9a7 	bl	8000ea8 <__sinit>
 8000b5a:	4b21      	ldr	r3, [pc, #132]	; (8000be0 <__swbuf_r+0x98>)
 8000b5c:	429c      	cmp	r4, r3
 8000b5e:	d12a      	bne.n	8000bb6 <__swbuf_r+0x6e>
 8000b60:	686c      	ldr	r4, [r5, #4]
 8000b62:	69a3      	ldr	r3, [r4, #24]
 8000b64:	60a3      	str	r3, [r4, #8]
 8000b66:	89a3      	ldrh	r3, [r4, #12]
 8000b68:	071a      	lsls	r2, r3, #28
 8000b6a:	d52e      	bpl.n	8000bca <__swbuf_r+0x82>
 8000b6c:	6923      	ldr	r3, [r4, #16]
 8000b6e:	b363      	cbz	r3, 8000bca <__swbuf_r+0x82>
 8000b70:	6923      	ldr	r3, [r4, #16]
 8000b72:	6820      	ldr	r0, [r4, #0]
 8000b74:	1ac0      	subs	r0, r0, r3
 8000b76:	6963      	ldr	r3, [r4, #20]
 8000b78:	b2f6      	uxtb	r6, r6
 8000b7a:	4283      	cmp	r3, r0
 8000b7c:	4637      	mov	r7, r6
 8000b7e:	dc04      	bgt.n	8000b8a <__swbuf_r+0x42>
 8000b80:	4621      	mov	r1, r4
 8000b82:	4628      	mov	r0, r5
 8000b84:	f000 f926 	bl	8000dd4 <_fflush_r>
 8000b88:	bb28      	cbnz	r0, 8000bd6 <__swbuf_r+0x8e>
 8000b8a:	68a3      	ldr	r3, [r4, #8]
 8000b8c:	3b01      	subs	r3, #1
 8000b8e:	60a3      	str	r3, [r4, #8]
 8000b90:	6823      	ldr	r3, [r4, #0]
 8000b92:	1c5a      	adds	r2, r3, #1
 8000b94:	6022      	str	r2, [r4, #0]
 8000b96:	701e      	strb	r6, [r3, #0]
 8000b98:	6963      	ldr	r3, [r4, #20]
 8000b9a:	3001      	adds	r0, #1
 8000b9c:	4283      	cmp	r3, r0
 8000b9e:	d004      	beq.n	8000baa <__swbuf_r+0x62>
 8000ba0:	89a3      	ldrh	r3, [r4, #12]
 8000ba2:	07db      	lsls	r3, r3, #31
 8000ba4:	d519      	bpl.n	8000bda <__swbuf_r+0x92>
 8000ba6:	2e0a      	cmp	r6, #10
 8000ba8:	d117      	bne.n	8000bda <__swbuf_r+0x92>
 8000baa:	4621      	mov	r1, r4
 8000bac:	4628      	mov	r0, r5
 8000bae:	f000 f911 	bl	8000dd4 <_fflush_r>
 8000bb2:	b190      	cbz	r0, 8000bda <__swbuf_r+0x92>
 8000bb4:	e00f      	b.n	8000bd6 <__swbuf_r+0x8e>
 8000bb6:	4b0b      	ldr	r3, [pc, #44]	; (8000be4 <__swbuf_r+0x9c>)
 8000bb8:	429c      	cmp	r4, r3
 8000bba:	d101      	bne.n	8000bc0 <__swbuf_r+0x78>
 8000bbc:	68ac      	ldr	r4, [r5, #8]
 8000bbe:	e7d0      	b.n	8000b62 <__swbuf_r+0x1a>
 8000bc0:	4b09      	ldr	r3, [pc, #36]	; (8000be8 <__swbuf_r+0xa0>)
 8000bc2:	429c      	cmp	r4, r3
 8000bc4:	bf08      	it	eq
 8000bc6:	68ec      	ldreq	r4, [r5, #12]
 8000bc8:	e7cb      	b.n	8000b62 <__swbuf_r+0x1a>
 8000bca:	4621      	mov	r1, r4
 8000bcc:	4628      	mov	r0, r5
 8000bce:	f000 f80d 	bl	8000bec <__swsetup_r>
 8000bd2:	2800      	cmp	r0, #0
 8000bd4:	d0cc      	beq.n	8000b70 <__swbuf_r+0x28>
 8000bd6:	f04f 37ff 	mov.w	r7, #4294967295
 8000bda:	4638      	mov	r0, r7
 8000bdc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000bde:	bf00      	nop
 8000be0:	080014ec 	.word	0x080014ec
 8000be4:	0800150c 	.word	0x0800150c
 8000be8:	080014cc 	.word	0x080014cc

08000bec <__swsetup_r>:
 8000bec:	4b32      	ldr	r3, [pc, #200]	; (8000cb8 <__swsetup_r+0xcc>)
 8000bee:	b570      	push	{r4, r5, r6, lr}
 8000bf0:	681d      	ldr	r5, [r3, #0]
 8000bf2:	4606      	mov	r6, r0
 8000bf4:	460c      	mov	r4, r1
 8000bf6:	b125      	cbz	r5, 8000c02 <__swsetup_r+0x16>
 8000bf8:	69ab      	ldr	r3, [r5, #24]
 8000bfa:	b913      	cbnz	r3, 8000c02 <__swsetup_r+0x16>
 8000bfc:	4628      	mov	r0, r5
 8000bfe:	f000 f953 	bl	8000ea8 <__sinit>
 8000c02:	4b2e      	ldr	r3, [pc, #184]	; (8000cbc <__swsetup_r+0xd0>)
 8000c04:	429c      	cmp	r4, r3
 8000c06:	d10f      	bne.n	8000c28 <__swsetup_r+0x3c>
 8000c08:	686c      	ldr	r4, [r5, #4]
 8000c0a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000c0e:	b29a      	uxth	r2, r3
 8000c10:	0715      	lsls	r5, r2, #28
 8000c12:	d42c      	bmi.n	8000c6e <__swsetup_r+0x82>
 8000c14:	06d0      	lsls	r0, r2, #27
 8000c16:	d411      	bmi.n	8000c3c <__swsetup_r+0x50>
 8000c18:	2209      	movs	r2, #9
 8000c1a:	6032      	str	r2, [r6, #0]
 8000c1c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000c20:	81a3      	strh	r3, [r4, #12]
 8000c22:	f04f 30ff 	mov.w	r0, #4294967295
 8000c26:	e03e      	b.n	8000ca6 <__swsetup_r+0xba>
 8000c28:	4b25      	ldr	r3, [pc, #148]	; (8000cc0 <__swsetup_r+0xd4>)
 8000c2a:	429c      	cmp	r4, r3
 8000c2c:	d101      	bne.n	8000c32 <__swsetup_r+0x46>
 8000c2e:	68ac      	ldr	r4, [r5, #8]
 8000c30:	e7eb      	b.n	8000c0a <__swsetup_r+0x1e>
 8000c32:	4b24      	ldr	r3, [pc, #144]	; (8000cc4 <__swsetup_r+0xd8>)
 8000c34:	429c      	cmp	r4, r3
 8000c36:	bf08      	it	eq
 8000c38:	68ec      	ldreq	r4, [r5, #12]
 8000c3a:	e7e6      	b.n	8000c0a <__swsetup_r+0x1e>
 8000c3c:	0751      	lsls	r1, r2, #29
 8000c3e:	d512      	bpl.n	8000c66 <__swsetup_r+0x7a>
 8000c40:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000c42:	b141      	cbz	r1, 8000c56 <__swsetup_r+0x6a>
 8000c44:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000c48:	4299      	cmp	r1, r3
 8000c4a:	d002      	beq.n	8000c52 <__swsetup_r+0x66>
 8000c4c:	4630      	mov	r0, r6
 8000c4e:	f000 fa19 	bl	8001084 <_free_r>
 8000c52:	2300      	movs	r3, #0
 8000c54:	6363      	str	r3, [r4, #52]	; 0x34
 8000c56:	89a3      	ldrh	r3, [r4, #12]
 8000c58:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000c5c:	81a3      	strh	r3, [r4, #12]
 8000c5e:	2300      	movs	r3, #0
 8000c60:	6063      	str	r3, [r4, #4]
 8000c62:	6923      	ldr	r3, [r4, #16]
 8000c64:	6023      	str	r3, [r4, #0]
 8000c66:	89a3      	ldrh	r3, [r4, #12]
 8000c68:	f043 0308 	orr.w	r3, r3, #8
 8000c6c:	81a3      	strh	r3, [r4, #12]
 8000c6e:	6923      	ldr	r3, [r4, #16]
 8000c70:	b94b      	cbnz	r3, 8000c86 <__swsetup_r+0x9a>
 8000c72:	89a3      	ldrh	r3, [r4, #12]
 8000c74:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000c78:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000c7c:	d003      	beq.n	8000c86 <__swsetup_r+0x9a>
 8000c7e:	4621      	mov	r1, r4
 8000c80:	4630      	mov	r0, r6
 8000c82:	f000 f9bf 	bl	8001004 <__smakebuf_r>
 8000c86:	89a2      	ldrh	r2, [r4, #12]
 8000c88:	f012 0301 	ands.w	r3, r2, #1
 8000c8c:	d00c      	beq.n	8000ca8 <__swsetup_r+0xbc>
 8000c8e:	2300      	movs	r3, #0
 8000c90:	60a3      	str	r3, [r4, #8]
 8000c92:	6963      	ldr	r3, [r4, #20]
 8000c94:	425b      	negs	r3, r3
 8000c96:	61a3      	str	r3, [r4, #24]
 8000c98:	6923      	ldr	r3, [r4, #16]
 8000c9a:	b953      	cbnz	r3, 8000cb2 <__swsetup_r+0xc6>
 8000c9c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000ca0:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 8000ca4:	d1ba      	bne.n	8000c1c <__swsetup_r+0x30>
 8000ca6:	bd70      	pop	{r4, r5, r6, pc}
 8000ca8:	0792      	lsls	r2, r2, #30
 8000caa:	bf58      	it	pl
 8000cac:	6963      	ldrpl	r3, [r4, #20]
 8000cae:	60a3      	str	r3, [r4, #8]
 8000cb0:	e7f2      	b.n	8000c98 <__swsetup_r+0xac>
 8000cb2:	2000      	movs	r0, #0
 8000cb4:	e7f7      	b.n	8000ca6 <__swsetup_r+0xba>
 8000cb6:	bf00      	nop
 8000cb8:	20000004 	.word	0x20000004
 8000cbc:	080014ec 	.word	0x080014ec
 8000cc0:	0800150c 	.word	0x0800150c
 8000cc4:	080014cc 	.word	0x080014cc

08000cc8 <__sflush_r>:
 8000cc8:	898a      	ldrh	r2, [r1, #12]
 8000cca:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000cce:	4605      	mov	r5, r0
 8000cd0:	0710      	lsls	r0, r2, #28
 8000cd2:	460c      	mov	r4, r1
 8000cd4:	d458      	bmi.n	8000d88 <__sflush_r+0xc0>
 8000cd6:	684b      	ldr	r3, [r1, #4]
 8000cd8:	2b00      	cmp	r3, #0
 8000cda:	dc05      	bgt.n	8000ce8 <__sflush_r+0x20>
 8000cdc:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000cde:	2b00      	cmp	r3, #0
 8000ce0:	dc02      	bgt.n	8000ce8 <__sflush_r+0x20>
 8000ce2:	2000      	movs	r0, #0
 8000ce4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000ce8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000cea:	2e00      	cmp	r6, #0
 8000cec:	d0f9      	beq.n	8000ce2 <__sflush_r+0x1a>
 8000cee:	2300      	movs	r3, #0
 8000cf0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000cf4:	682f      	ldr	r7, [r5, #0]
 8000cf6:	6a21      	ldr	r1, [r4, #32]
 8000cf8:	602b      	str	r3, [r5, #0]
 8000cfa:	d032      	beq.n	8000d62 <__sflush_r+0x9a>
 8000cfc:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000cfe:	89a3      	ldrh	r3, [r4, #12]
 8000d00:	075a      	lsls	r2, r3, #29
 8000d02:	d505      	bpl.n	8000d10 <__sflush_r+0x48>
 8000d04:	6863      	ldr	r3, [r4, #4]
 8000d06:	1ac0      	subs	r0, r0, r3
 8000d08:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000d0a:	b10b      	cbz	r3, 8000d10 <__sflush_r+0x48>
 8000d0c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000d0e:	1ac0      	subs	r0, r0, r3
 8000d10:	2300      	movs	r3, #0
 8000d12:	4602      	mov	r2, r0
 8000d14:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000d16:	6a21      	ldr	r1, [r4, #32]
 8000d18:	4628      	mov	r0, r5
 8000d1a:	47b0      	blx	r6
 8000d1c:	1c43      	adds	r3, r0, #1
 8000d1e:	89a3      	ldrh	r3, [r4, #12]
 8000d20:	d106      	bne.n	8000d30 <__sflush_r+0x68>
 8000d22:	6829      	ldr	r1, [r5, #0]
 8000d24:	291d      	cmp	r1, #29
 8000d26:	d848      	bhi.n	8000dba <__sflush_r+0xf2>
 8000d28:	4a29      	ldr	r2, [pc, #164]	; (8000dd0 <__sflush_r+0x108>)
 8000d2a:	40ca      	lsrs	r2, r1
 8000d2c:	07d6      	lsls	r6, r2, #31
 8000d2e:	d544      	bpl.n	8000dba <__sflush_r+0xf2>
 8000d30:	2200      	movs	r2, #0
 8000d32:	6062      	str	r2, [r4, #4]
 8000d34:	04d9      	lsls	r1, r3, #19
 8000d36:	6922      	ldr	r2, [r4, #16]
 8000d38:	6022      	str	r2, [r4, #0]
 8000d3a:	d504      	bpl.n	8000d46 <__sflush_r+0x7e>
 8000d3c:	1c42      	adds	r2, r0, #1
 8000d3e:	d101      	bne.n	8000d44 <__sflush_r+0x7c>
 8000d40:	682b      	ldr	r3, [r5, #0]
 8000d42:	b903      	cbnz	r3, 8000d46 <__sflush_r+0x7e>
 8000d44:	6560      	str	r0, [r4, #84]	; 0x54
 8000d46:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000d48:	602f      	str	r7, [r5, #0]
 8000d4a:	2900      	cmp	r1, #0
 8000d4c:	d0c9      	beq.n	8000ce2 <__sflush_r+0x1a>
 8000d4e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000d52:	4299      	cmp	r1, r3
 8000d54:	d002      	beq.n	8000d5c <__sflush_r+0x94>
 8000d56:	4628      	mov	r0, r5
 8000d58:	f000 f994 	bl	8001084 <_free_r>
 8000d5c:	2000      	movs	r0, #0
 8000d5e:	6360      	str	r0, [r4, #52]	; 0x34
 8000d60:	e7c0      	b.n	8000ce4 <__sflush_r+0x1c>
 8000d62:	2301      	movs	r3, #1
 8000d64:	4628      	mov	r0, r5
 8000d66:	47b0      	blx	r6
 8000d68:	1c41      	adds	r1, r0, #1
 8000d6a:	d1c8      	bne.n	8000cfe <__sflush_r+0x36>
 8000d6c:	682b      	ldr	r3, [r5, #0]
 8000d6e:	2b00      	cmp	r3, #0
 8000d70:	d0c5      	beq.n	8000cfe <__sflush_r+0x36>
 8000d72:	2b1d      	cmp	r3, #29
 8000d74:	d001      	beq.n	8000d7a <__sflush_r+0xb2>
 8000d76:	2b16      	cmp	r3, #22
 8000d78:	d101      	bne.n	8000d7e <__sflush_r+0xb6>
 8000d7a:	602f      	str	r7, [r5, #0]
 8000d7c:	e7b1      	b.n	8000ce2 <__sflush_r+0x1a>
 8000d7e:	89a3      	ldrh	r3, [r4, #12]
 8000d80:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000d84:	81a3      	strh	r3, [r4, #12]
 8000d86:	e7ad      	b.n	8000ce4 <__sflush_r+0x1c>
 8000d88:	690f      	ldr	r7, [r1, #16]
 8000d8a:	2f00      	cmp	r7, #0
 8000d8c:	d0a9      	beq.n	8000ce2 <__sflush_r+0x1a>
 8000d8e:	0793      	lsls	r3, r2, #30
 8000d90:	680e      	ldr	r6, [r1, #0]
 8000d92:	bf08      	it	eq
 8000d94:	694b      	ldreq	r3, [r1, #20]
 8000d96:	600f      	str	r7, [r1, #0]
 8000d98:	bf18      	it	ne
 8000d9a:	2300      	movne	r3, #0
 8000d9c:	eba6 0807 	sub.w	r8, r6, r7
 8000da0:	608b      	str	r3, [r1, #8]
 8000da2:	f1b8 0f00 	cmp.w	r8, #0
 8000da6:	dd9c      	ble.n	8000ce2 <__sflush_r+0x1a>
 8000da8:	4643      	mov	r3, r8
 8000daa:	463a      	mov	r2, r7
 8000dac:	6a21      	ldr	r1, [r4, #32]
 8000dae:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000db0:	4628      	mov	r0, r5
 8000db2:	47b0      	blx	r6
 8000db4:	2800      	cmp	r0, #0
 8000db6:	dc06      	bgt.n	8000dc6 <__sflush_r+0xfe>
 8000db8:	89a3      	ldrh	r3, [r4, #12]
 8000dba:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000dbe:	81a3      	strh	r3, [r4, #12]
 8000dc0:	f04f 30ff 	mov.w	r0, #4294967295
 8000dc4:	e78e      	b.n	8000ce4 <__sflush_r+0x1c>
 8000dc6:	4407      	add	r7, r0
 8000dc8:	eba8 0800 	sub.w	r8, r8, r0
 8000dcc:	e7e9      	b.n	8000da2 <__sflush_r+0xda>
 8000dce:	bf00      	nop
 8000dd0:	20400001 	.word	0x20400001

08000dd4 <_fflush_r>:
 8000dd4:	b538      	push	{r3, r4, r5, lr}
 8000dd6:	690b      	ldr	r3, [r1, #16]
 8000dd8:	4605      	mov	r5, r0
 8000dda:	460c      	mov	r4, r1
 8000ddc:	b1db      	cbz	r3, 8000e16 <_fflush_r+0x42>
 8000dde:	b118      	cbz	r0, 8000de8 <_fflush_r+0x14>
 8000de0:	6983      	ldr	r3, [r0, #24]
 8000de2:	b90b      	cbnz	r3, 8000de8 <_fflush_r+0x14>
 8000de4:	f000 f860 	bl	8000ea8 <__sinit>
 8000de8:	4b0c      	ldr	r3, [pc, #48]	; (8000e1c <_fflush_r+0x48>)
 8000dea:	429c      	cmp	r4, r3
 8000dec:	d109      	bne.n	8000e02 <_fflush_r+0x2e>
 8000dee:	686c      	ldr	r4, [r5, #4]
 8000df0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000df4:	b17b      	cbz	r3, 8000e16 <_fflush_r+0x42>
 8000df6:	4621      	mov	r1, r4
 8000df8:	4628      	mov	r0, r5
 8000dfa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000dfe:	f7ff bf63 	b.w	8000cc8 <__sflush_r>
 8000e02:	4b07      	ldr	r3, [pc, #28]	; (8000e20 <_fflush_r+0x4c>)
 8000e04:	429c      	cmp	r4, r3
 8000e06:	d101      	bne.n	8000e0c <_fflush_r+0x38>
 8000e08:	68ac      	ldr	r4, [r5, #8]
 8000e0a:	e7f1      	b.n	8000df0 <_fflush_r+0x1c>
 8000e0c:	4b05      	ldr	r3, [pc, #20]	; (8000e24 <_fflush_r+0x50>)
 8000e0e:	429c      	cmp	r4, r3
 8000e10:	bf08      	it	eq
 8000e12:	68ec      	ldreq	r4, [r5, #12]
 8000e14:	e7ec      	b.n	8000df0 <_fflush_r+0x1c>
 8000e16:	2000      	movs	r0, #0
 8000e18:	bd38      	pop	{r3, r4, r5, pc}
 8000e1a:	bf00      	nop
 8000e1c:	080014ec 	.word	0x080014ec
 8000e20:	0800150c 	.word	0x0800150c
 8000e24:	080014cc 	.word	0x080014cc

08000e28 <std>:
 8000e28:	2300      	movs	r3, #0
 8000e2a:	b510      	push	{r4, lr}
 8000e2c:	4604      	mov	r4, r0
 8000e2e:	e9c0 3300 	strd	r3, r3, [r0]
 8000e32:	6083      	str	r3, [r0, #8]
 8000e34:	8181      	strh	r1, [r0, #12]
 8000e36:	6643      	str	r3, [r0, #100]	; 0x64
 8000e38:	81c2      	strh	r2, [r0, #14]
 8000e3a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000e3e:	6183      	str	r3, [r0, #24]
 8000e40:	4619      	mov	r1, r3
 8000e42:	2208      	movs	r2, #8
 8000e44:	305c      	adds	r0, #92	; 0x5c
 8000e46:	f7ff fb79 	bl	800053c <memset>
 8000e4a:	4b05      	ldr	r3, [pc, #20]	; (8000e60 <std+0x38>)
 8000e4c:	6263      	str	r3, [r4, #36]	; 0x24
 8000e4e:	4b05      	ldr	r3, [pc, #20]	; (8000e64 <std+0x3c>)
 8000e50:	62a3      	str	r3, [r4, #40]	; 0x28
 8000e52:	4b05      	ldr	r3, [pc, #20]	; (8000e68 <std+0x40>)
 8000e54:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000e56:	4b05      	ldr	r3, [pc, #20]	; (8000e6c <std+0x44>)
 8000e58:	6224      	str	r4, [r4, #32]
 8000e5a:	6323      	str	r3, [r4, #48]	; 0x30
 8000e5c:	bd10      	pop	{r4, pc}
 8000e5e:	bf00      	nop
 8000e60:	08001261 	.word	0x08001261
 8000e64:	08001283 	.word	0x08001283
 8000e68:	080012bb 	.word	0x080012bb
 8000e6c:	080012df 	.word	0x080012df

08000e70 <_cleanup_r>:
 8000e70:	4901      	ldr	r1, [pc, #4]	; (8000e78 <_cleanup_r+0x8>)
 8000e72:	f000 b885 	b.w	8000f80 <_fwalk_reent>
 8000e76:	bf00      	nop
 8000e78:	08000dd5 	.word	0x08000dd5

08000e7c <__sfmoreglue>:
 8000e7c:	b570      	push	{r4, r5, r6, lr}
 8000e7e:	1e4a      	subs	r2, r1, #1
 8000e80:	2568      	movs	r5, #104	; 0x68
 8000e82:	4355      	muls	r5, r2
 8000e84:	460e      	mov	r6, r1
 8000e86:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000e8a:	f000 f949 	bl	8001120 <_malloc_r>
 8000e8e:	4604      	mov	r4, r0
 8000e90:	b140      	cbz	r0, 8000ea4 <__sfmoreglue+0x28>
 8000e92:	2100      	movs	r1, #0
 8000e94:	e9c0 1600 	strd	r1, r6, [r0]
 8000e98:	300c      	adds	r0, #12
 8000e9a:	60a0      	str	r0, [r4, #8]
 8000e9c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000ea0:	f7ff fb4c 	bl	800053c <memset>
 8000ea4:	4620      	mov	r0, r4
 8000ea6:	bd70      	pop	{r4, r5, r6, pc}

08000ea8 <__sinit>:
 8000ea8:	6983      	ldr	r3, [r0, #24]
 8000eaa:	b510      	push	{r4, lr}
 8000eac:	4604      	mov	r4, r0
 8000eae:	bb33      	cbnz	r3, 8000efe <__sinit+0x56>
 8000eb0:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 8000eb4:	6503      	str	r3, [r0, #80]	; 0x50
 8000eb6:	4b12      	ldr	r3, [pc, #72]	; (8000f00 <__sinit+0x58>)
 8000eb8:	4a12      	ldr	r2, [pc, #72]	; (8000f04 <__sinit+0x5c>)
 8000eba:	681b      	ldr	r3, [r3, #0]
 8000ebc:	6282      	str	r2, [r0, #40]	; 0x28
 8000ebe:	4298      	cmp	r0, r3
 8000ec0:	bf04      	itt	eq
 8000ec2:	2301      	moveq	r3, #1
 8000ec4:	6183      	streq	r3, [r0, #24]
 8000ec6:	f000 f81f 	bl	8000f08 <__sfp>
 8000eca:	6060      	str	r0, [r4, #4]
 8000ecc:	4620      	mov	r0, r4
 8000ece:	f000 f81b 	bl	8000f08 <__sfp>
 8000ed2:	60a0      	str	r0, [r4, #8]
 8000ed4:	4620      	mov	r0, r4
 8000ed6:	f000 f817 	bl	8000f08 <__sfp>
 8000eda:	2200      	movs	r2, #0
 8000edc:	60e0      	str	r0, [r4, #12]
 8000ede:	2104      	movs	r1, #4
 8000ee0:	6860      	ldr	r0, [r4, #4]
 8000ee2:	f7ff ffa1 	bl	8000e28 <std>
 8000ee6:	2201      	movs	r2, #1
 8000ee8:	2109      	movs	r1, #9
 8000eea:	68a0      	ldr	r0, [r4, #8]
 8000eec:	f7ff ff9c 	bl	8000e28 <std>
 8000ef0:	2202      	movs	r2, #2
 8000ef2:	2112      	movs	r1, #18
 8000ef4:	68e0      	ldr	r0, [r4, #12]
 8000ef6:	f7ff ff97 	bl	8000e28 <std>
 8000efa:	2301      	movs	r3, #1
 8000efc:	61a3      	str	r3, [r4, #24]
 8000efe:	bd10      	pop	{r4, pc}
 8000f00:	08001494 	.word	0x08001494
 8000f04:	08000e71 	.word	0x08000e71

08000f08 <__sfp>:
 8000f08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f0a:	4b1b      	ldr	r3, [pc, #108]	; (8000f78 <__sfp+0x70>)
 8000f0c:	681e      	ldr	r6, [r3, #0]
 8000f0e:	69b3      	ldr	r3, [r6, #24]
 8000f10:	4607      	mov	r7, r0
 8000f12:	b913      	cbnz	r3, 8000f1a <__sfp+0x12>
 8000f14:	4630      	mov	r0, r6
 8000f16:	f7ff ffc7 	bl	8000ea8 <__sinit>
 8000f1a:	3648      	adds	r6, #72	; 0x48
 8000f1c:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000f20:	3b01      	subs	r3, #1
 8000f22:	d503      	bpl.n	8000f2c <__sfp+0x24>
 8000f24:	6833      	ldr	r3, [r6, #0]
 8000f26:	b133      	cbz	r3, 8000f36 <__sfp+0x2e>
 8000f28:	6836      	ldr	r6, [r6, #0]
 8000f2a:	e7f7      	b.n	8000f1c <__sfp+0x14>
 8000f2c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000f30:	b16d      	cbz	r5, 8000f4e <__sfp+0x46>
 8000f32:	3468      	adds	r4, #104	; 0x68
 8000f34:	e7f4      	b.n	8000f20 <__sfp+0x18>
 8000f36:	2104      	movs	r1, #4
 8000f38:	4638      	mov	r0, r7
 8000f3a:	f7ff ff9f 	bl	8000e7c <__sfmoreglue>
 8000f3e:	6030      	str	r0, [r6, #0]
 8000f40:	2800      	cmp	r0, #0
 8000f42:	d1f1      	bne.n	8000f28 <__sfp+0x20>
 8000f44:	230c      	movs	r3, #12
 8000f46:	603b      	str	r3, [r7, #0]
 8000f48:	4604      	mov	r4, r0
 8000f4a:	4620      	mov	r0, r4
 8000f4c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000f4e:	4b0b      	ldr	r3, [pc, #44]	; (8000f7c <__sfp+0x74>)
 8000f50:	6665      	str	r5, [r4, #100]	; 0x64
 8000f52:	e9c4 5500 	strd	r5, r5, [r4]
 8000f56:	60a5      	str	r5, [r4, #8]
 8000f58:	e9c4 3503 	strd	r3, r5, [r4, #12]
 8000f5c:	e9c4 5505 	strd	r5, r5, [r4, #20]
 8000f60:	2208      	movs	r2, #8
 8000f62:	4629      	mov	r1, r5
 8000f64:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000f68:	f7ff fae8 	bl	800053c <memset>
 8000f6c:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000f70:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000f74:	e7e9      	b.n	8000f4a <__sfp+0x42>
 8000f76:	bf00      	nop
 8000f78:	08001494 	.word	0x08001494
 8000f7c:	ffff0001 	.word	0xffff0001

08000f80 <_fwalk_reent>:
 8000f80:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000f84:	4680      	mov	r8, r0
 8000f86:	4689      	mov	r9, r1
 8000f88:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000f8c:	2600      	movs	r6, #0
 8000f8e:	b914      	cbnz	r4, 8000f96 <_fwalk_reent+0x16>
 8000f90:	4630      	mov	r0, r6
 8000f92:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000f96:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 8000f9a:	3f01      	subs	r7, #1
 8000f9c:	d501      	bpl.n	8000fa2 <_fwalk_reent+0x22>
 8000f9e:	6824      	ldr	r4, [r4, #0]
 8000fa0:	e7f5      	b.n	8000f8e <_fwalk_reent+0xe>
 8000fa2:	89ab      	ldrh	r3, [r5, #12]
 8000fa4:	2b01      	cmp	r3, #1
 8000fa6:	d907      	bls.n	8000fb8 <_fwalk_reent+0x38>
 8000fa8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000fac:	3301      	adds	r3, #1
 8000fae:	d003      	beq.n	8000fb8 <_fwalk_reent+0x38>
 8000fb0:	4629      	mov	r1, r5
 8000fb2:	4640      	mov	r0, r8
 8000fb4:	47c8      	blx	r9
 8000fb6:	4306      	orrs	r6, r0
 8000fb8:	3568      	adds	r5, #104	; 0x68
 8000fba:	e7ee      	b.n	8000f9a <_fwalk_reent+0x1a>

08000fbc <__swhatbuf_r>:
 8000fbc:	b570      	push	{r4, r5, r6, lr}
 8000fbe:	460e      	mov	r6, r1
 8000fc0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000fc4:	2900      	cmp	r1, #0
 8000fc6:	b096      	sub	sp, #88	; 0x58
 8000fc8:	4614      	mov	r4, r2
 8000fca:	461d      	mov	r5, r3
 8000fcc:	da07      	bge.n	8000fde <__swhatbuf_r+0x22>
 8000fce:	2300      	movs	r3, #0
 8000fd0:	602b      	str	r3, [r5, #0]
 8000fd2:	89b3      	ldrh	r3, [r6, #12]
 8000fd4:	061a      	lsls	r2, r3, #24
 8000fd6:	d410      	bmi.n	8000ffa <__swhatbuf_r+0x3e>
 8000fd8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000fdc:	e00e      	b.n	8000ffc <__swhatbuf_r+0x40>
 8000fde:	466a      	mov	r2, sp
 8000fe0:	f000 f9a4 	bl	800132c <_fstat_r>
 8000fe4:	2800      	cmp	r0, #0
 8000fe6:	dbf2      	blt.n	8000fce <__swhatbuf_r+0x12>
 8000fe8:	9a01      	ldr	r2, [sp, #4]
 8000fea:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000fee:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000ff2:	425a      	negs	r2, r3
 8000ff4:	415a      	adcs	r2, r3
 8000ff6:	602a      	str	r2, [r5, #0]
 8000ff8:	e7ee      	b.n	8000fd8 <__swhatbuf_r+0x1c>
 8000ffa:	2340      	movs	r3, #64	; 0x40
 8000ffc:	2000      	movs	r0, #0
 8000ffe:	6023      	str	r3, [r4, #0]
 8001000:	b016      	add	sp, #88	; 0x58
 8001002:	bd70      	pop	{r4, r5, r6, pc}

08001004 <__smakebuf_r>:
 8001004:	898b      	ldrh	r3, [r1, #12]
 8001006:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001008:	079d      	lsls	r5, r3, #30
 800100a:	4606      	mov	r6, r0
 800100c:	460c      	mov	r4, r1
 800100e:	d507      	bpl.n	8001020 <__smakebuf_r+0x1c>
 8001010:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001014:	6023      	str	r3, [r4, #0]
 8001016:	6123      	str	r3, [r4, #16]
 8001018:	2301      	movs	r3, #1
 800101a:	6163      	str	r3, [r4, #20]
 800101c:	b002      	add	sp, #8
 800101e:	bd70      	pop	{r4, r5, r6, pc}
 8001020:	ab01      	add	r3, sp, #4
 8001022:	466a      	mov	r2, sp
 8001024:	f7ff ffca 	bl	8000fbc <__swhatbuf_r>
 8001028:	9900      	ldr	r1, [sp, #0]
 800102a:	4605      	mov	r5, r0
 800102c:	4630      	mov	r0, r6
 800102e:	f000 f877 	bl	8001120 <_malloc_r>
 8001032:	b948      	cbnz	r0, 8001048 <__smakebuf_r+0x44>
 8001034:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001038:	059a      	lsls	r2, r3, #22
 800103a:	d4ef      	bmi.n	800101c <__smakebuf_r+0x18>
 800103c:	f023 0303 	bic.w	r3, r3, #3
 8001040:	f043 0302 	orr.w	r3, r3, #2
 8001044:	81a3      	strh	r3, [r4, #12]
 8001046:	e7e3      	b.n	8001010 <__smakebuf_r+0xc>
 8001048:	4b0d      	ldr	r3, [pc, #52]	; (8001080 <__smakebuf_r+0x7c>)
 800104a:	62b3      	str	r3, [r6, #40]	; 0x28
 800104c:	89a3      	ldrh	r3, [r4, #12]
 800104e:	6020      	str	r0, [r4, #0]
 8001050:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001054:	81a3      	strh	r3, [r4, #12]
 8001056:	9b00      	ldr	r3, [sp, #0]
 8001058:	6163      	str	r3, [r4, #20]
 800105a:	9b01      	ldr	r3, [sp, #4]
 800105c:	6120      	str	r0, [r4, #16]
 800105e:	b15b      	cbz	r3, 8001078 <__smakebuf_r+0x74>
 8001060:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001064:	4630      	mov	r0, r6
 8001066:	f000 f973 	bl	8001350 <_isatty_r>
 800106a:	b128      	cbz	r0, 8001078 <__smakebuf_r+0x74>
 800106c:	89a3      	ldrh	r3, [r4, #12]
 800106e:	f023 0303 	bic.w	r3, r3, #3
 8001072:	f043 0301 	orr.w	r3, r3, #1
 8001076:	81a3      	strh	r3, [r4, #12]
 8001078:	89a3      	ldrh	r3, [r4, #12]
 800107a:	431d      	orrs	r5, r3
 800107c:	81a5      	strh	r5, [r4, #12]
 800107e:	e7cd      	b.n	800101c <__smakebuf_r+0x18>
 8001080:	08000e71 	.word	0x08000e71

08001084 <_free_r>:
 8001084:	b538      	push	{r3, r4, r5, lr}
 8001086:	4605      	mov	r5, r0
 8001088:	2900      	cmp	r1, #0
 800108a:	d045      	beq.n	8001118 <_free_r+0x94>
 800108c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8001090:	1f0c      	subs	r4, r1, #4
 8001092:	2b00      	cmp	r3, #0
 8001094:	bfb8      	it	lt
 8001096:	18e4      	addlt	r4, r4, r3
 8001098:	f000 f97c 	bl	8001394 <__malloc_lock>
 800109c:	4a1f      	ldr	r2, [pc, #124]	; (800111c <_free_r+0x98>)
 800109e:	6813      	ldr	r3, [r2, #0]
 80010a0:	4610      	mov	r0, r2
 80010a2:	b933      	cbnz	r3, 80010b2 <_free_r+0x2e>
 80010a4:	6063      	str	r3, [r4, #4]
 80010a6:	6014      	str	r4, [r2, #0]
 80010a8:	4628      	mov	r0, r5
 80010aa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80010ae:	f000 b972 	b.w	8001396 <__malloc_unlock>
 80010b2:	42a3      	cmp	r3, r4
 80010b4:	d90c      	bls.n	80010d0 <_free_r+0x4c>
 80010b6:	6821      	ldr	r1, [r4, #0]
 80010b8:	1862      	adds	r2, r4, r1
 80010ba:	4293      	cmp	r3, r2
 80010bc:	bf04      	itt	eq
 80010be:	681a      	ldreq	r2, [r3, #0]
 80010c0:	685b      	ldreq	r3, [r3, #4]
 80010c2:	6063      	str	r3, [r4, #4]
 80010c4:	bf04      	itt	eq
 80010c6:	1852      	addeq	r2, r2, r1
 80010c8:	6022      	streq	r2, [r4, #0]
 80010ca:	6004      	str	r4, [r0, #0]
 80010cc:	e7ec      	b.n	80010a8 <_free_r+0x24>
 80010ce:	4613      	mov	r3, r2
 80010d0:	685a      	ldr	r2, [r3, #4]
 80010d2:	b10a      	cbz	r2, 80010d8 <_free_r+0x54>
 80010d4:	42a2      	cmp	r2, r4
 80010d6:	d9fa      	bls.n	80010ce <_free_r+0x4a>
 80010d8:	6819      	ldr	r1, [r3, #0]
 80010da:	1858      	adds	r0, r3, r1
 80010dc:	42a0      	cmp	r0, r4
 80010de:	d10b      	bne.n	80010f8 <_free_r+0x74>
 80010e0:	6820      	ldr	r0, [r4, #0]
 80010e2:	4401      	add	r1, r0
 80010e4:	1858      	adds	r0, r3, r1
 80010e6:	4282      	cmp	r2, r0
 80010e8:	6019      	str	r1, [r3, #0]
 80010ea:	d1dd      	bne.n	80010a8 <_free_r+0x24>
 80010ec:	6810      	ldr	r0, [r2, #0]
 80010ee:	6852      	ldr	r2, [r2, #4]
 80010f0:	605a      	str	r2, [r3, #4]
 80010f2:	4401      	add	r1, r0
 80010f4:	6019      	str	r1, [r3, #0]
 80010f6:	e7d7      	b.n	80010a8 <_free_r+0x24>
 80010f8:	d902      	bls.n	8001100 <_free_r+0x7c>
 80010fa:	230c      	movs	r3, #12
 80010fc:	602b      	str	r3, [r5, #0]
 80010fe:	e7d3      	b.n	80010a8 <_free_r+0x24>
 8001100:	6820      	ldr	r0, [r4, #0]
 8001102:	1821      	adds	r1, r4, r0
 8001104:	428a      	cmp	r2, r1
 8001106:	bf04      	itt	eq
 8001108:	6811      	ldreq	r1, [r2, #0]
 800110a:	6852      	ldreq	r2, [r2, #4]
 800110c:	6062      	str	r2, [r4, #4]
 800110e:	bf04      	itt	eq
 8001110:	1809      	addeq	r1, r1, r0
 8001112:	6021      	streq	r1, [r4, #0]
 8001114:	605c      	str	r4, [r3, #4]
 8001116:	e7c7      	b.n	80010a8 <_free_r+0x24>
 8001118:	bd38      	pop	{r3, r4, r5, pc}
 800111a:	bf00      	nop
 800111c:	20000084 	.word	0x20000084

08001120 <_malloc_r>:
 8001120:	b570      	push	{r4, r5, r6, lr}
 8001122:	1ccd      	adds	r5, r1, #3
 8001124:	f025 0503 	bic.w	r5, r5, #3
 8001128:	3508      	adds	r5, #8
 800112a:	2d0c      	cmp	r5, #12
 800112c:	bf38      	it	cc
 800112e:	250c      	movcc	r5, #12
 8001130:	2d00      	cmp	r5, #0
 8001132:	4606      	mov	r6, r0
 8001134:	db01      	blt.n	800113a <_malloc_r+0x1a>
 8001136:	42a9      	cmp	r1, r5
 8001138:	d903      	bls.n	8001142 <_malloc_r+0x22>
 800113a:	230c      	movs	r3, #12
 800113c:	6033      	str	r3, [r6, #0]
 800113e:	2000      	movs	r0, #0
 8001140:	bd70      	pop	{r4, r5, r6, pc}
 8001142:	f000 f927 	bl	8001394 <__malloc_lock>
 8001146:	4a21      	ldr	r2, [pc, #132]	; (80011cc <_malloc_r+0xac>)
 8001148:	6814      	ldr	r4, [r2, #0]
 800114a:	4621      	mov	r1, r4
 800114c:	b991      	cbnz	r1, 8001174 <_malloc_r+0x54>
 800114e:	4c20      	ldr	r4, [pc, #128]	; (80011d0 <_malloc_r+0xb0>)
 8001150:	6823      	ldr	r3, [r4, #0]
 8001152:	b91b      	cbnz	r3, 800115c <_malloc_r+0x3c>
 8001154:	4630      	mov	r0, r6
 8001156:	f000 f873 	bl	8001240 <_sbrk_r>
 800115a:	6020      	str	r0, [r4, #0]
 800115c:	4629      	mov	r1, r5
 800115e:	4630      	mov	r0, r6
 8001160:	f000 f86e 	bl	8001240 <_sbrk_r>
 8001164:	1c43      	adds	r3, r0, #1
 8001166:	d124      	bne.n	80011b2 <_malloc_r+0x92>
 8001168:	230c      	movs	r3, #12
 800116a:	6033      	str	r3, [r6, #0]
 800116c:	4630      	mov	r0, r6
 800116e:	f000 f912 	bl	8001396 <__malloc_unlock>
 8001172:	e7e4      	b.n	800113e <_malloc_r+0x1e>
 8001174:	680b      	ldr	r3, [r1, #0]
 8001176:	1b5b      	subs	r3, r3, r5
 8001178:	d418      	bmi.n	80011ac <_malloc_r+0x8c>
 800117a:	2b0b      	cmp	r3, #11
 800117c:	d90f      	bls.n	800119e <_malloc_r+0x7e>
 800117e:	600b      	str	r3, [r1, #0]
 8001180:	50cd      	str	r5, [r1, r3]
 8001182:	18cc      	adds	r4, r1, r3
 8001184:	4630      	mov	r0, r6
 8001186:	f000 f906 	bl	8001396 <__malloc_unlock>
 800118a:	f104 000b 	add.w	r0, r4, #11
 800118e:	1d23      	adds	r3, r4, #4
 8001190:	f020 0007 	bic.w	r0, r0, #7
 8001194:	1ac3      	subs	r3, r0, r3
 8001196:	d0d3      	beq.n	8001140 <_malloc_r+0x20>
 8001198:	425a      	negs	r2, r3
 800119a:	50e2      	str	r2, [r4, r3]
 800119c:	e7d0      	b.n	8001140 <_malloc_r+0x20>
 800119e:	428c      	cmp	r4, r1
 80011a0:	684b      	ldr	r3, [r1, #4]
 80011a2:	bf16      	itet	ne
 80011a4:	6063      	strne	r3, [r4, #4]
 80011a6:	6013      	streq	r3, [r2, #0]
 80011a8:	460c      	movne	r4, r1
 80011aa:	e7eb      	b.n	8001184 <_malloc_r+0x64>
 80011ac:	460c      	mov	r4, r1
 80011ae:	6849      	ldr	r1, [r1, #4]
 80011b0:	e7cc      	b.n	800114c <_malloc_r+0x2c>
 80011b2:	1cc4      	adds	r4, r0, #3
 80011b4:	f024 0403 	bic.w	r4, r4, #3
 80011b8:	42a0      	cmp	r0, r4
 80011ba:	d005      	beq.n	80011c8 <_malloc_r+0xa8>
 80011bc:	1a21      	subs	r1, r4, r0
 80011be:	4630      	mov	r0, r6
 80011c0:	f000 f83e 	bl	8001240 <_sbrk_r>
 80011c4:	3001      	adds	r0, #1
 80011c6:	d0cf      	beq.n	8001168 <_malloc_r+0x48>
 80011c8:	6025      	str	r5, [r4, #0]
 80011ca:	e7db      	b.n	8001184 <_malloc_r+0x64>
 80011cc:	20000084 	.word	0x20000084
 80011d0:	20000088 	.word	0x20000088

080011d4 <_putc_r>:
 80011d4:	b570      	push	{r4, r5, r6, lr}
 80011d6:	460d      	mov	r5, r1
 80011d8:	4614      	mov	r4, r2
 80011da:	4606      	mov	r6, r0
 80011dc:	b118      	cbz	r0, 80011e6 <_putc_r+0x12>
 80011de:	6983      	ldr	r3, [r0, #24]
 80011e0:	b90b      	cbnz	r3, 80011e6 <_putc_r+0x12>
 80011e2:	f7ff fe61 	bl	8000ea8 <__sinit>
 80011e6:	4b13      	ldr	r3, [pc, #76]	; (8001234 <_putc_r+0x60>)
 80011e8:	429c      	cmp	r4, r3
 80011ea:	d112      	bne.n	8001212 <_putc_r+0x3e>
 80011ec:	6874      	ldr	r4, [r6, #4]
 80011ee:	68a3      	ldr	r3, [r4, #8]
 80011f0:	3b01      	subs	r3, #1
 80011f2:	2b00      	cmp	r3, #0
 80011f4:	60a3      	str	r3, [r4, #8]
 80011f6:	da16      	bge.n	8001226 <_putc_r+0x52>
 80011f8:	69a2      	ldr	r2, [r4, #24]
 80011fa:	4293      	cmp	r3, r2
 80011fc:	db02      	blt.n	8001204 <_putc_r+0x30>
 80011fe:	b2eb      	uxtb	r3, r5
 8001200:	2b0a      	cmp	r3, #10
 8001202:	d110      	bne.n	8001226 <_putc_r+0x52>
 8001204:	4622      	mov	r2, r4
 8001206:	4629      	mov	r1, r5
 8001208:	4630      	mov	r0, r6
 800120a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800120e:	f7ff bc9b 	b.w	8000b48 <__swbuf_r>
 8001212:	4b09      	ldr	r3, [pc, #36]	; (8001238 <_putc_r+0x64>)
 8001214:	429c      	cmp	r4, r3
 8001216:	d101      	bne.n	800121c <_putc_r+0x48>
 8001218:	68b4      	ldr	r4, [r6, #8]
 800121a:	e7e8      	b.n	80011ee <_putc_r+0x1a>
 800121c:	4b07      	ldr	r3, [pc, #28]	; (800123c <_putc_r+0x68>)
 800121e:	429c      	cmp	r4, r3
 8001220:	bf08      	it	eq
 8001222:	68f4      	ldreq	r4, [r6, #12]
 8001224:	e7e3      	b.n	80011ee <_putc_r+0x1a>
 8001226:	6823      	ldr	r3, [r4, #0]
 8001228:	1c5a      	adds	r2, r3, #1
 800122a:	6022      	str	r2, [r4, #0]
 800122c:	701d      	strb	r5, [r3, #0]
 800122e:	b2e8      	uxtb	r0, r5
 8001230:	bd70      	pop	{r4, r5, r6, pc}
 8001232:	bf00      	nop
 8001234:	080014ec 	.word	0x080014ec
 8001238:	0800150c 	.word	0x0800150c
 800123c:	080014cc 	.word	0x080014cc

08001240 <_sbrk_r>:
 8001240:	b538      	push	{r3, r4, r5, lr}
 8001242:	4c06      	ldr	r4, [pc, #24]	; (800125c <_sbrk_r+0x1c>)
 8001244:	2300      	movs	r3, #0
 8001246:	4605      	mov	r5, r0
 8001248:	4608      	mov	r0, r1
 800124a:	6023      	str	r3, [r4, #0]
 800124c:	f000 f8de 	bl	800140c <_sbrk>
 8001250:	1c43      	adds	r3, r0, #1
 8001252:	d102      	bne.n	800125a <_sbrk_r+0x1a>
 8001254:	6823      	ldr	r3, [r4, #0]
 8001256:	b103      	cbz	r3, 800125a <_sbrk_r+0x1a>
 8001258:	602b      	str	r3, [r5, #0]
 800125a:	bd38      	pop	{r3, r4, r5, pc}
 800125c:	20000090 	.word	0x20000090

08001260 <__sread>:
 8001260:	b510      	push	{r4, lr}
 8001262:	460c      	mov	r4, r1
 8001264:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001268:	f000 f896 	bl	8001398 <_read_r>
 800126c:	2800      	cmp	r0, #0
 800126e:	bfab      	itete	ge
 8001270:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8001272:	89a3      	ldrhlt	r3, [r4, #12]
 8001274:	181b      	addge	r3, r3, r0
 8001276:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800127a:	bfac      	ite	ge
 800127c:	6563      	strge	r3, [r4, #84]	; 0x54
 800127e:	81a3      	strhlt	r3, [r4, #12]
 8001280:	bd10      	pop	{r4, pc}

08001282 <__swrite>:
 8001282:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001286:	461f      	mov	r7, r3
 8001288:	898b      	ldrh	r3, [r1, #12]
 800128a:	05db      	lsls	r3, r3, #23
 800128c:	4605      	mov	r5, r0
 800128e:	460c      	mov	r4, r1
 8001290:	4616      	mov	r6, r2
 8001292:	d505      	bpl.n	80012a0 <__swrite+0x1e>
 8001294:	2302      	movs	r3, #2
 8001296:	2200      	movs	r2, #0
 8001298:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800129c:	f000 f868 	bl	8001370 <_lseek_r>
 80012a0:	89a3      	ldrh	r3, [r4, #12]
 80012a2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80012a6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80012aa:	81a3      	strh	r3, [r4, #12]
 80012ac:	4632      	mov	r2, r6
 80012ae:	463b      	mov	r3, r7
 80012b0:	4628      	mov	r0, r5
 80012b2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80012b6:	f000 b817 	b.w	80012e8 <_write_r>

080012ba <__sseek>:
 80012ba:	b510      	push	{r4, lr}
 80012bc:	460c      	mov	r4, r1
 80012be:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012c2:	f000 f855 	bl	8001370 <_lseek_r>
 80012c6:	1c43      	adds	r3, r0, #1
 80012c8:	89a3      	ldrh	r3, [r4, #12]
 80012ca:	bf15      	itete	ne
 80012cc:	6560      	strne	r0, [r4, #84]	; 0x54
 80012ce:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80012d2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80012d6:	81a3      	strheq	r3, [r4, #12]
 80012d8:	bf18      	it	ne
 80012da:	81a3      	strhne	r3, [r4, #12]
 80012dc:	bd10      	pop	{r4, pc}

080012de <__sclose>:
 80012de:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012e2:	f000 b813 	b.w	800130c <_close_r>
	...

080012e8 <_write_r>:
 80012e8:	b538      	push	{r3, r4, r5, lr}
 80012ea:	4c07      	ldr	r4, [pc, #28]	; (8001308 <_write_r+0x20>)
 80012ec:	4605      	mov	r5, r0
 80012ee:	4608      	mov	r0, r1
 80012f0:	4611      	mov	r1, r2
 80012f2:	2200      	movs	r2, #0
 80012f4:	6022      	str	r2, [r4, #0]
 80012f6:	461a      	mov	r2, r3
 80012f8:	f7fe fff1 	bl	80002de <_write>
 80012fc:	1c43      	adds	r3, r0, #1
 80012fe:	d102      	bne.n	8001306 <_write_r+0x1e>
 8001300:	6823      	ldr	r3, [r4, #0]
 8001302:	b103      	cbz	r3, 8001306 <_write_r+0x1e>
 8001304:	602b      	str	r3, [r5, #0]
 8001306:	bd38      	pop	{r3, r4, r5, pc}
 8001308:	20000090 	.word	0x20000090

0800130c <_close_r>:
 800130c:	b538      	push	{r3, r4, r5, lr}
 800130e:	4c06      	ldr	r4, [pc, #24]	; (8001328 <_close_r+0x1c>)
 8001310:	2300      	movs	r3, #0
 8001312:	4605      	mov	r5, r0
 8001314:	4608      	mov	r0, r1
 8001316:	6023      	str	r3, [r4, #0]
 8001318:	f000 f850 	bl	80013bc <_close>
 800131c:	1c43      	adds	r3, r0, #1
 800131e:	d102      	bne.n	8001326 <_close_r+0x1a>
 8001320:	6823      	ldr	r3, [r4, #0]
 8001322:	b103      	cbz	r3, 8001326 <_close_r+0x1a>
 8001324:	602b      	str	r3, [r5, #0]
 8001326:	bd38      	pop	{r3, r4, r5, pc}
 8001328:	20000090 	.word	0x20000090

0800132c <_fstat_r>:
 800132c:	b538      	push	{r3, r4, r5, lr}
 800132e:	4c07      	ldr	r4, [pc, #28]	; (800134c <_fstat_r+0x20>)
 8001330:	2300      	movs	r3, #0
 8001332:	4605      	mov	r5, r0
 8001334:	4608      	mov	r0, r1
 8001336:	4611      	mov	r1, r2
 8001338:	6023      	str	r3, [r4, #0]
 800133a:	f000 f847 	bl	80013cc <_fstat>
 800133e:	1c43      	adds	r3, r0, #1
 8001340:	d102      	bne.n	8001348 <_fstat_r+0x1c>
 8001342:	6823      	ldr	r3, [r4, #0]
 8001344:	b103      	cbz	r3, 8001348 <_fstat_r+0x1c>
 8001346:	602b      	str	r3, [r5, #0]
 8001348:	bd38      	pop	{r3, r4, r5, pc}
 800134a:	bf00      	nop
 800134c:	20000090 	.word	0x20000090

08001350 <_isatty_r>:
 8001350:	b538      	push	{r3, r4, r5, lr}
 8001352:	4c06      	ldr	r4, [pc, #24]	; (800136c <_isatty_r+0x1c>)
 8001354:	2300      	movs	r3, #0
 8001356:	4605      	mov	r5, r0
 8001358:	4608      	mov	r0, r1
 800135a:	6023      	str	r3, [r4, #0]
 800135c:	f000 f83e 	bl	80013dc <_isatty>
 8001360:	1c43      	adds	r3, r0, #1
 8001362:	d102      	bne.n	800136a <_isatty_r+0x1a>
 8001364:	6823      	ldr	r3, [r4, #0]
 8001366:	b103      	cbz	r3, 800136a <_isatty_r+0x1a>
 8001368:	602b      	str	r3, [r5, #0]
 800136a:	bd38      	pop	{r3, r4, r5, pc}
 800136c:	20000090 	.word	0x20000090

08001370 <_lseek_r>:
 8001370:	b538      	push	{r3, r4, r5, lr}
 8001372:	4c07      	ldr	r4, [pc, #28]	; (8001390 <_lseek_r+0x20>)
 8001374:	4605      	mov	r5, r0
 8001376:	4608      	mov	r0, r1
 8001378:	4611      	mov	r1, r2
 800137a:	2200      	movs	r2, #0
 800137c:	6022      	str	r2, [r4, #0]
 800137e:	461a      	mov	r2, r3
 8001380:	f000 f834 	bl	80013ec <_lseek>
 8001384:	1c43      	adds	r3, r0, #1
 8001386:	d102      	bne.n	800138e <_lseek_r+0x1e>
 8001388:	6823      	ldr	r3, [r4, #0]
 800138a:	b103      	cbz	r3, 800138e <_lseek_r+0x1e>
 800138c:	602b      	str	r3, [r5, #0]
 800138e:	bd38      	pop	{r3, r4, r5, pc}
 8001390:	20000090 	.word	0x20000090

08001394 <__malloc_lock>:
 8001394:	4770      	bx	lr

08001396 <__malloc_unlock>:
 8001396:	4770      	bx	lr

08001398 <_read_r>:
 8001398:	b538      	push	{r3, r4, r5, lr}
 800139a:	4c07      	ldr	r4, [pc, #28]	; (80013b8 <_read_r+0x20>)
 800139c:	4605      	mov	r5, r0
 800139e:	4608      	mov	r0, r1
 80013a0:	4611      	mov	r1, r2
 80013a2:	2200      	movs	r2, #0
 80013a4:	6022      	str	r2, [r4, #0]
 80013a6:	461a      	mov	r2, r3
 80013a8:	f000 f828 	bl	80013fc <_read>
 80013ac:	1c43      	adds	r3, r0, #1
 80013ae:	d102      	bne.n	80013b6 <_read_r+0x1e>
 80013b0:	6823      	ldr	r3, [r4, #0]
 80013b2:	b103      	cbz	r3, 80013b6 <_read_r+0x1e>
 80013b4:	602b      	str	r3, [r5, #0]
 80013b6:	bd38      	pop	{r3, r4, r5, pc}
 80013b8:	20000090 	.word	0x20000090

080013bc <_close>:
 80013bc:	4b02      	ldr	r3, [pc, #8]	; (80013c8 <_close+0xc>)
 80013be:	2258      	movs	r2, #88	; 0x58
 80013c0:	601a      	str	r2, [r3, #0]
 80013c2:	f04f 30ff 	mov.w	r0, #4294967295
 80013c6:	4770      	bx	lr
 80013c8:	20000090 	.word	0x20000090

080013cc <_fstat>:
 80013cc:	4b02      	ldr	r3, [pc, #8]	; (80013d8 <_fstat+0xc>)
 80013ce:	2258      	movs	r2, #88	; 0x58
 80013d0:	601a      	str	r2, [r3, #0]
 80013d2:	f04f 30ff 	mov.w	r0, #4294967295
 80013d6:	4770      	bx	lr
 80013d8:	20000090 	.word	0x20000090

080013dc <_isatty>:
 80013dc:	4b02      	ldr	r3, [pc, #8]	; (80013e8 <_isatty+0xc>)
 80013de:	2258      	movs	r2, #88	; 0x58
 80013e0:	601a      	str	r2, [r3, #0]
 80013e2:	2000      	movs	r0, #0
 80013e4:	4770      	bx	lr
 80013e6:	bf00      	nop
 80013e8:	20000090 	.word	0x20000090

080013ec <_lseek>:
 80013ec:	4b02      	ldr	r3, [pc, #8]	; (80013f8 <_lseek+0xc>)
 80013ee:	2258      	movs	r2, #88	; 0x58
 80013f0:	601a      	str	r2, [r3, #0]
 80013f2:	f04f 30ff 	mov.w	r0, #4294967295
 80013f6:	4770      	bx	lr
 80013f8:	20000090 	.word	0x20000090

080013fc <_read>:
 80013fc:	4b02      	ldr	r3, [pc, #8]	; (8001408 <_read+0xc>)
 80013fe:	2258      	movs	r2, #88	; 0x58
 8001400:	601a      	str	r2, [r3, #0]
 8001402:	f04f 30ff 	mov.w	r0, #4294967295
 8001406:	4770      	bx	lr
 8001408:	20000090 	.word	0x20000090

0800140c <_sbrk>:
 800140c:	4b04      	ldr	r3, [pc, #16]	; (8001420 <_sbrk+0x14>)
 800140e:	6819      	ldr	r1, [r3, #0]
 8001410:	4602      	mov	r2, r0
 8001412:	b909      	cbnz	r1, 8001418 <_sbrk+0xc>
 8001414:	4903      	ldr	r1, [pc, #12]	; (8001424 <_sbrk+0x18>)
 8001416:	6019      	str	r1, [r3, #0]
 8001418:	6818      	ldr	r0, [r3, #0]
 800141a:	4402      	add	r2, r0
 800141c:	601a      	str	r2, [r3, #0]
 800141e:	4770      	bx	lr
 8001420:	2000008c 	.word	0x2000008c
 8001424:	20000098 	.word	0x20000098

08001428 <_init>:
 8001428:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800142a:	bf00      	nop
 800142c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800142e:	bc08      	pop	{r3}
 8001430:	469e      	mov	lr, r3
 8001432:	4770      	bx	lr

08001434 <_fini>:
 8001434:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001436:	bf00      	nop
 8001438:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800143a:	bc08      	pop	{r3}
 800143c:	469e      	mov	lr, r3
 800143e:	4770      	bx	lr
